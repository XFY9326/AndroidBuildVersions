[
    {
        "api": {
            "class_name": "android.accessibilityservice.AccessibilityService",
            "name": "getFingerprintGestureController",
            "type": "method",
            "args": [],
            "return_value": "android.accessibilityservice.FingerprintGestureController",
            "signature": "()Landroid/accessibilityservice/FingerprintGestureController;",
            "dalvik_invoke": "Landroid/accessibilityservice/AccessibilityService;->getFingerprintGestureController()Landroid/accessibilityservice/FingerprintGestureController;"
        },
        "permissions": [
            "android.permission.USE_FINGERPRINT"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "renameAccount",
            "type": "method",
            "args": [
                "android.accounts.Account",
                "java.lang.String",
                "android.accounts.AccountManagerCallback<android.accounts.Account>",
                "android.os.Handler"
            ],
            "return_value": "android.accounts.AccountManagerFuture<android.accounts.Account>",
            "signature": "(Landroid/accounts/Account;Ljava/lang/String;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->renameAccount(Landroid/accounts/Account;Ljava/lang/String;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;"
        },
        "permissions": [
            "android.permission.AUTHENTICATE_ACCOUNTS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "addAccount",
            "type": "method",
            "args": [
                "java.lang.String",
                "java.lang.String",
                "java.lang.String[]",
                "android.os.Bundle",
                "android.app.Activity",
                "android.accounts.AccountManagerCallback<android.os.Bundle>",
                "android.os.Handler"
            ],
            "return_value": "android.accounts.AccountManagerFuture<android.os.Bundle>",
            "signature": "(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Landroid/os/Bundle;Landroid/app/Activity;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->addAccount(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Landroid/os/Bundle;Landroid/app/Activity;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;"
        },
        "permissions": [
            "android.permission.MANAGE_ACCOUNTS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "confirmCredentials",
            "type": "method",
            "args": [
                "android.accounts.Account",
                "android.os.Bundle",
                "android.app.Activity",
                "android.accounts.AccountManagerCallback<android.os.Bundle>",
                "android.os.Handler"
            ],
            "return_value": "android.accounts.AccountManagerFuture<android.os.Bundle>",
            "signature": "(Landroid/accounts/Account;Landroid/os/Bundle;Landroid/app/Activity;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->confirmCredentials(Landroid/accounts/Account;Landroid/os/Bundle;Landroid/app/Activity;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;"
        },
        "permissions": [
            "android.permission.MANAGE_ACCOUNTS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "editProperties",
            "type": "method",
            "args": [
                "java.lang.String",
                "android.app.Activity",
                "android.accounts.AccountManagerCallback<android.os.Bundle>",
                "android.os.Handler"
            ],
            "return_value": "android.accounts.AccountManagerFuture<android.os.Bundle>",
            "signature": "(Ljava/lang/String;Landroid/app/Activity;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->editProperties(Ljava/lang/String;Landroid/app/Activity;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;"
        },
        "permissions": [
            "android.permission.MANAGE_ACCOUNTS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "getAuthToken",
            "type": "method",
            "args": [
                "android.accounts.Account",
                "java.lang.String",
                "android.os.Bundle",
                "android.app.Activity",
                "android.accounts.AccountManagerCallback<android.os.Bundle>",
                "android.os.Handler"
            ],
            "return_value": "android.accounts.AccountManagerFuture<android.os.Bundle>",
            "signature": "(Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;Landroid/app/Activity;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->getAuthToken(Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;Landroid/app/Activity;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;"
        },
        "permissions": [
            "android.permission.USE_CREDENTIALS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "getAuthToken",
            "type": "method",
            "args": [
                "android.accounts.Account",
                "java.lang.String",
                "android.os.Bundle",
                "boolean",
                "android.accounts.AccountManagerCallback<android.os.Bundle>",
                "android.os.Handler"
            ],
            "return_value": "android.accounts.AccountManagerFuture<android.os.Bundle>",
            "signature": "(Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;ZLandroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->getAuthToken(Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;ZLandroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;"
        },
        "permissions": [
            "android.permission.USE_CREDENTIALS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "getAuthToken",
            "type": "method",
            "args": [
                "android.accounts.Account",
                "java.lang.String",
                "boolean",
                "android.accounts.AccountManagerCallback<android.os.Bundle>",
                "android.os.Handler"
            ],
            "return_value": "android.accounts.AccountManagerFuture<android.os.Bundle>",
            "signature": "(Landroid/accounts/Account;Ljava/lang/String;ZLandroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->getAuthToken(Landroid/accounts/Account;Ljava/lang/String;ZLandroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;"
        },
        "permissions": [
            "android.permission.USE_CREDENTIALS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "getAuthTokenByFeatures",
            "type": "method",
            "args": [
                "java.lang.String",
                "java.lang.String",
                "java.lang.String[]",
                "android.app.Activity",
                "android.os.Bundle",
                "android.os.Bundle",
                "android.accounts.AccountManagerCallback<android.os.Bundle>",
                "android.os.Handler"
            ],
            "return_value": "android.accounts.AccountManagerFuture<android.os.Bundle>",
            "signature": "(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Landroid/app/Activity;Landroid/os/Bundle;Landroid/os/Bundle;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->getAuthTokenByFeatures(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Landroid/app/Activity;Landroid/os/Bundle;Landroid/os/Bundle;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;"
        },
        "permissions": [
            "android.permission.MANAGE_ACCOUNTS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "removeAccount",
            "type": "method",
            "args": [
                "android.accounts.Account",
                "android.app.Activity",
                "android.accounts.AccountManagerCallback<android.os.Bundle>",
                "android.os.Handler"
            ],
            "return_value": "android.accounts.AccountManagerFuture<android.os.Bundle>",
            "signature": "(Landroid/accounts/Account;Landroid/app/Activity;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->removeAccount(Landroid/accounts/Account;Landroid/app/Activity;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;"
        },
        "permissions": [
            "android.permission.MANAGE_ACCOUNTS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "updateCredentials",
            "type": "method",
            "args": [
                "android.accounts.Account",
                "java.lang.String",
                "android.os.Bundle",
                "android.app.Activity",
                "android.accounts.AccountManagerCallback<android.os.Bundle>",
                "android.os.Handler"
            ],
            "return_value": "android.accounts.AccountManagerFuture<android.os.Bundle>",
            "signature": "(Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;Landroid/app/Activity;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->updateCredentials(Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;Landroid/app/Activity;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;"
        },
        "permissions": [
            "android.permission.MANAGE_ACCOUNTS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "removeAccount",
            "type": "method",
            "args": [
                "android.accounts.Account",
                "android.accounts.AccountManagerCallback<java.lang.Boolean>",
                "android.os.Handler"
            ],
            "return_value": "android.accounts.AccountManagerFuture<java.lang.Boolean>",
            "signature": "(Landroid/accounts/Account;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->removeAccount(Landroid/accounts/Account;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;)Landroid/accounts/AccountManagerFuture;"
        },
        "permissions": [
            "android.permission.MANAGE_ACCOUNTS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "getAccounts",
            "type": "method",
            "args": [],
            "return_value": "android.accounts.Account[]",
            "signature": "()[Landroid/accounts/Account;",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->getAccounts()[Landroid/accounts/Account;"
        },
        "permissions": [
            "android.permission.GET_ACCOUNTS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "getAccountsByType",
            "type": "method",
            "args": [
                "java.lang.String"
            ],
            "return_value": "android.accounts.Account[]",
            "signature": "(Ljava/lang/String;)[Landroid/accounts/Account;",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->getAccountsByType(Ljava/lang/String;)[Landroid/accounts/Account;"
        },
        "permissions": [
            "android.permission.GET_ACCOUNTS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "addAccountExplicitly",
            "type": "method",
            "args": [
                "android.accounts.Account",
                "java.lang.String",
                "android.os.Bundle"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;)Z",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->addAccountExplicitly(Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;)Z"
        },
        "permissions": [
            "android.permission.AUTHENTICATE_ACCOUNTS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "notifyAccountAuthenticated",
            "type": "method",
            "args": [
                "android.accounts.Account"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/accounts/Account;)Z",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->notifyAccountAuthenticated(Landroid/accounts/Account;)Z"
        },
        "permissions": [
            "android.permission.AUTHENTICATE_ACCOUNTS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "removeAccountExplicitly",
            "type": "method",
            "args": [
                "android.accounts.Account"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/accounts/Account;)Z",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->removeAccountExplicitly(Landroid/accounts/Account;)Z"
        },
        "permissions": [
            "android.permission.AUTHENTICATE_ACCOUNTS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "blockingGetAuthToken",
            "type": "method",
            "args": [
                "android.accounts.Account",
                "java.lang.String",
                "boolean"
            ],
            "return_value": "java.lang.String",
            "signature": "(Landroid/accounts/Account;Ljava/lang/String;Z)Ljava/lang/String;",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->blockingGetAuthToken(Landroid/accounts/Account;Ljava/lang/String;Z)Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.USE_CREDENTIALS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "getPassword",
            "type": "method",
            "args": [
                "android.accounts.Account"
            ],
            "return_value": "java.lang.String",
            "signature": "(Landroid/accounts/Account;)Ljava/lang/String;",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->getPassword(Landroid/accounts/Account;)Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.AUTHENTICATE_ACCOUNTS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "getUserData",
            "type": "method",
            "args": [
                "android.accounts.Account",
                "java.lang.String"
            ],
            "return_value": "java.lang.String",
            "signature": "(Landroid/accounts/Account;Ljava/lang/String;)Ljava/lang/String;",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->getUserData(Landroid/accounts/Account;Ljava/lang/String;)Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.AUTHENTICATE_ACCOUNTS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "peekAuthToken",
            "type": "method",
            "args": [
                "android.accounts.Account",
                "java.lang.String"
            ],
            "return_value": "java.lang.String",
            "signature": "(Landroid/accounts/Account;Ljava/lang/String;)Ljava/lang/String;",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->peekAuthToken(Landroid/accounts/Account;Ljava/lang/String;)Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.AUTHENTICATE_ACCOUNTS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "addOnAccountsUpdatedListener",
            "type": "method",
            "args": [
                "android.accounts.OnAccountsUpdateListener",
                "android.os.Handler",
                "boolean"
            ],
            "return_value": "void",
            "signature": "(Landroid/accounts/OnAccountsUpdateListener;Landroid/os/Handler;Z)V",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->addOnAccountsUpdatedListener(Landroid/accounts/OnAccountsUpdateListener;Landroid/os/Handler;Z)V"
        },
        "permissions": [
            "android.permission.GET_ACCOUNTS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "clearPassword",
            "type": "method",
            "args": [
                "android.accounts.Account"
            ],
            "return_value": "void",
            "signature": "(Landroid/accounts/Account;)V",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->clearPassword(Landroid/accounts/Account;)V"
        },
        "permissions": [
            "android.permission.MANAGE_ACCOUNTS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "invalidateAuthToken",
            "type": "method",
            "args": [
                "java.lang.String",
                "java.lang.String"
            ],
            "return_value": "void",
            "signature": "(Ljava/lang/String;Ljava/lang/String;)V",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->invalidateAuthToken(Ljava/lang/String;Ljava/lang/String;)V"
        },
        "permissions": [
            "android.permission.MANAGE_ACCOUNTS",
            "android.permission.USE_CREDENTIALS"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "setAuthToken",
            "type": "method",
            "args": [
                "android.accounts.Account",
                "java.lang.String",
                "java.lang.String"
            ],
            "return_value": "void",
            "signature": "(Landroid/accounts/Account;Ljava/lang/String;Ljava/lang/String;)V",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->setAuthToken(Landroid/accounts/Account;Ljava/lang/String;Ljava/lang/String;)V"
        },
        "permissions": [
            "android.permission.AUTHENTICATE_ACCOUNTS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "setPassword",
            "type": "method",
            "args": [
                "android.accounts.Account",
                "java.lang.String"
            ],
            "return_value": "void",
            "signature": "(Landroid/accounts/Account;Ljava/lang/String;)V",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->setPassword(Landroid/accounts/Account;Ljava/lang/String;)V"
        },
        "permissions": [
            "android.permission.AUTHENTICATE_ACCOUNTS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "setUserData",
            "type": "method",
            "args": [
                "android.accounts.Account",
                "java.lang.String",
                "java.lang.String"
            ],
            "return_value": "void",
            "signature": "(Landroid/accounts/Account;Ljava/lang/String;Ljava/lang/String;)V",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->setUserData(Landroid/accounts/Account;Ljava/lang/String;Ljava/lang/String;)V"
        },
        "permissions": [
            "android.permission.AUTHENTICATE_ACCOUNTS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.app.ActivityManager",
            "name": "dumpPackageState",
            "type": "method",
            "args": [
                "java.io.FileDescriptor",
                "java.lang.String"
            ],
            "return_value": "void",
            "signature": "(Ljava/io/FileDescriptor;Ljava/lang/String;)V",
            "dalvik_invoke": "Landroid/app/ActivityManager;->dumpPackageState(Ljava/io/FileDescriptor;Ljava/lang/String;)V"
        },
        "permissions": [
            "android.permission.DUMP"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.app.ActivityManager",
            "name": "killBackgroundProcesses",
            "type": "method",
            "args": [
                "java.lang.String"
            ],
            "return_value": "void",
            "signature": "(Ljava/lang/String;)V",
            "dalvik_invoke": "Landroid/app/ActivityManager;->killBackgroundProcesses(Ljava/lang/String;)V"
        },
        "permissions": [
            "android.permission.KILL_BACKGROUND_PROCESSES"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.app.ActivityManager",
            "name": "moveTaskToFront",
            "type": "method",
            "args": [
                "int",
                "int"
            ],
            "return_value": "void",
            "signature": "(II)V",
            "dalvik_invoke": "Landroid/app/ActivityManager;->moveTaskToFront(II)V"
        },
        "permissions": [
            "android.permission.REORDER_TASKS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.app.ActivityManager",
            "name": "moveTaskToFront",
            "type": "method",
            "args": [
                "int",
                "int",
                "android.os.Bundle"
            ],
            "return_value": "void",
            "signature": "(IILandroid/os/Bundle;)V",
            "dalvik_invoke": "Landroid/app/ActivityManager;->moveTaskToFront(IILandroid/os/Bundle;)V"
        },
        "permissions": [
            "android.permission.REORDER_TASKS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.app.KeyguardManager",
            "name": "exitKeyguardSecurely",
            "type": "method",
            "args": [
                "android.app.KeyguardManager.OnKeyguardExitResult"
            ],
            "return_value": "void",
            "signature": "(Landroid/app/KeyguardManager/OnKeyguardExitResult;)V",
            "dalvik_invoke": "Landroid/app/KeyguardManager;->exitKeyguardSecurely(Landroid/app/KeyguardManager/OnKeyguardExitResult;)V"
        },
        "permissions": [
            "android.permission.DISABLE_KEYGUARD"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.app.KeyguardManager.KeyguardLock",
            "name": "disableKeyguard",
            "type": "method",
            "args": [],
            "return_value": "void",
            "signature": "()V",
            "dalvik_invoke": "Landroid/app/KeyguardManager/KeyguardLock;->disableKeyguard()V"
        },
        "permissions": [
            "android.permission.DISABLE_KEYGUARD"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.app.KeyguardManager.KeyguardLock",
            "name": "reenableKeyguard",
            "type": "method",
            "args": [],
            "return_value": "void",
            "signature": "()V",
            "dalvik_invoke": "Landroid/app/KeyguardManager/KeyguardLock;->reenableKeyguard()V"
        },
        "permissions": [
            "android.permission.DISABLE_KEYGUARD"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.app.job.JobInfo.Builder",
            "name": "setPersisted",
            "type": "method",
            "args": [
                "boolean"
            ],
            "return_value": "android.app.job.JobInfo.Builder",
            "signature": "(Z)Landroid/app/job/JobInfo/Builder;",
            "dalvik_invoke": "Landroid/app/job/JobInfo/Builder;->setPersisted(Z)Landroid/app/job/JobInfo/Builder;"
        },
        "permissions": [
            "android.permission.RECEIVE_BOOT_COMPLETED"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothAdapter",
            "name": "listenUsingInsecureRfcommWithServiceRecord",
            "type": "method",
            "args": [
                "java.lang.String",
                "java.util.UUID"
            ],
            "return_value": "android.bluetooth.BluetoothServerSocket",
            "signature": "(Ljava/lang/String;Ljava/util/UUID;)Landroid/bluetooth/BluetoothServerSocket;",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothAdapter;->listenUsingInsecureRfcommWithServiceRecord(Ljava/lang/String;Ljava/util/UUID;)Landroid/bluetooth/BluetoothServerSocket;"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothAdapter",
            "name": "listenUsingRfcommWithServiceRecord",
            "type": "method",
            "args": [
                "java.lang.String",
                "java.util.UUID"
            ],
            "return_value": "android.bluetooth.BluetoothServerSocket",
            "signature": "(Ljava/lang/String;Ljava/util/UUID;)Landroid/bluetooth/BluetoothServerSocket;",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothAdapter;->listenUsingRfcommWithServiceRecord(Ljava/lang/String;Ljava/util/UUID;)Landroid/bluetooth/BluetoothServerSocket;"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothAdapter",
            "name": "cancelDiscovery",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothAdapter;->cancelDiscovery()Z"
        },
        "permissions": [
            "android.permission.BLUETOOTH_ADMIN"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothAdapter",
            "name": "disable",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothAdapter;->disable()Z"
        },
        "permissions": [
            "android.permission.BLUETOOTH_ADMIN"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothAdapter",
            "name": "enable",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothAdapter;->enable()Z"
        },
        "permissions": [
            "android.permission.BLUETOOTH_ADMIN"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothAdapter",
            "name": "isDiscovering",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothAdapter;->isDiscovering()Z"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothAdapter",
            "name": "isEnabled",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothAdapter;->isEnabled()Z"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothAdapter",
            "name": "setName",
            "type": "method",
            "args": [
                "java.lang.String"
            ],
            "return_value": "boolean",
            "signature": "(Ljava/lang/String;)Z",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothAdapter;->setName(Ljava/lang/String;)Z"
        },
        "permissions": [
            "android.permission.BLUETOOTH_ADMIN"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothAdapter",
            "name": "startDiscovery",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothAdapter;->startDiscovery()Z"
        },
        "permissions": [
            "android.permission.BLUETOOTH_ADMIN"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothAdapter",
            "name": "startLeScan",
            "type": "method",
            "args": [
                "android.bluetooth.BluetoothAdapter.LeScanCallback"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/bluetooth/BluetoothAdapter/LeScanCallback;)Z",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothAdapter;->startLeScan(Landroid/bluetooth/BluetoothAdapter/LeScanCallback;)Z"
        },
        "permissions": [
            "android.permission.BLUETOOTH_ADMIN"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothAdapter",
            "name": "startLeScan",
            "type": "method",
            "args": [
                "java.util.UUID[]",
                "android.bluetooth.BluetoothAdapter.LeScanCallback"
            ],
            "return_value": "boolean",
            "signature": "([Ljava/util/UUID;Landroid/bluetooth/BluetoothAdapter/LeScanCallback;)Z",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothAdapter;->startLeScan([Ljava/util/UUID;Landroid/bluetooth/BluetoothAdapter/LeScanCallback;)Z"
        },
        "permissions": [
            "android.permission.BLUETOOTH_ADMIN"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothAdapter",
            "name": "getProfileConnectionState",
            "type": "method",
            "args": [
                "int"
            ],
            "return_value": "int",
            "signature": "(I)I",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothAdapter;->getProfileConnectionState(I)I"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothAdapter",
            "name": "getScanMode",
            "type": "method",
            "args": [],
            "return_value": "int",
            "signature": "()I",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothAdapter;->getScanMode()I"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothAdapter",
            "name": "getState",
            "type": "method",
            "args": [],
            "return_value": "int",
            "signature": "()I",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothAdapter;->getState()I"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothAdapter",
            "name": "getAddress",
            "type": "method",
            "args": [],
            "return_value": "java.lang.String",
            "signature": "()Ljava/lang/String;",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothAdapter;->getAddress()Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothAdapter",
            "name": "getBondedDevices",
            "type": "method",
            "args": [],
            "return_value": "java.util.Set<android.bluetooth.BluetoothDevice>",
            "signature": "()Ljava/util/Set;",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothAdapter;->getBondedDevices()Ljava/util/Set;"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothAdapter",
            "name": "stopLeScan",
            "type": "method",
            "args": [
                "android.bluetooth.BluetoothAdapter.LeScanCallback"
            ],
            "return_value": "void",
            "signature": "(Landroid/bluetooth/BluetoothAdapter/LeScanCallback;)V",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothAdapter;->stopLeScan(Landroid/bluetooth/BluetoothAdapter/LeScanCallback;)V"
        },
        "permissions": [
            "android.permission.BLUETOOTH_ADMIN"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothDevice",
            "name": "getBluetoothClass",
            "type": "method",
            "args": [],
            "return_value": "android.bluetooth.BluetoothClass",
            "signature": "()Landroid/bluetooth/BluetoothClass;",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothDevice;->getBluetoothClass()Landroid/bluetooth/BluetoothClass;"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothDevice",
            "name": "createInsecureRfcommSocketToServiceRecord",
            "type": "method",
            "args": [
                "java.util.UUID"
            ],
            "return_value": "android.bluetooth.BluetoothSocket",
            "signature": "(Ljava/util/UUID;)Landroid/bluetooth/BluetoothSocket;",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothDevice;->createInsecureRfcommSocketToServiceRecord(Ljava/util/UUID;)Landroid/bluetooth/BluetoothSocket;"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothDevice",
            "name": "createRfcommSocketToServiceRecord",
            "type": "method",
            "args": [
                "java.util.UUID"
            ],
            "return_value": "android.bluetooth.BluetoothSocket",
            "signature": "(Ljava/util/UUID;)Landroid/bluetooth/BluetoothSocket;",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothDevice;->createRfcommSocketToServiceRecord(Ljava/util/UUID;)Landroid/bluetooth/BluetoothSocket;"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothDevice",
            "name": "getUuids",
            "type": "method",
            "args": [],
            "return_value": "android.os.ParcelUuid[]",
            "signature": "()[Landroid/os/ParcelUuid;",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothDevice;->getUuids()[Landroid/os/ParcelUuid;"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothDevice",
            "name": "createBond",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothDevice;->createBond()Z"
        },
        "permissions": [
            "android.permission.BLUETOOTH_ADMIN"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothDevice",
            "name": "fetchUuidsWithSdp",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothDevice;->fetchUuidsWithSdp()Z"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothDevice",
            "name": "setPairingConfirmation",
            "type": "method",
            "args": [
                "boolean"
            ],
            "return_value": "boolean",
            "signature": "(Z)Z",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothDevice;->setPairingConfirmation(Z)Z"
        },
        "permissions": [
            "android.permission.BLUETOOTH_PRIVILEGED"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothDevice",
            "name": "getBondState",
            "type": "method",
            "args": [],
            "return_value": "int",
            "signature": "()I",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothDevice;->getBondState()I"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothDevice",
            "name": "getType",
            "type": "method",
            "args": [],
            "return_value": "int",
            "signature": "()I",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothDevice;->getType()I"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothDevice",
            "name": "getName",
            "type": "method",
            "args": [],
            "return_value": "java.lang.String",
            "signature": "()Ljava/lang/String;",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothDevice;->getName()Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothManager",
            "name": "getConnectionState",
            "type": "method",
            "args": [
                "android.bluetooth.BluetoothDevice",
                "int"
            ],
            "return_value": "int",
            "signature": "(Landroid/bluetooth/BluetoothDevice;I)I",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothManager;->getConnectionState(Landroid/bluetooth/BluetoothDevice;I)I"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothManager",
            "name": "getConnectedDevices",
            "type": "method",
            "args": [
                "int"
            ],
            "return_value": "java.util.List<android.bluetooth.BluetoothDevice>",
            "signature": "(I)Ljava/util/List;",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothManager;->getConnectedDevices(I)Ljava/util/List;"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothManager",
            "name": "getDevicesMatchingConnectionStates",
            "type": "method",
            "args": [
                "int",
                "int[]"
            ],
            "return_value": "java.util.List<android.bluetooth.BluetoothDevice>",
            "signature": "(I[I)Ljava/util/List;",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothManager;->getDevicesMatchingConnectionStates(I[I)Ljava/util/List;"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothProfile",
            "name": "getConnectionState",
            "type": "method",
            "args": [
                "android.bluetooth.BluetoothDevice"
            ],
            "return_value": "int",
            "signature": "(Landroid/bluetooth/BluetoothDevice;)I",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothProfile;->getConnectionState(Landroid/bluetooth/BluetoothDevice;)I"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothProfile",
            "name": "getConnectedDevices",
            "type": "method",
            "args": [],
            "return_value": "java.util.List<android.bluetooth.BluetoothDevice>",
            "signature": "()Ljava/util/List;",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothProfile;->getConnectedDevices()Ljava/util/List;"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothProfile",
            "name": "getDevicesMatchingConnectionStates",
            "type": "method",
            "args": [
                "int[]"
            ],
            "return_value": "java.util.List<android.bluetooth.BluetoothDevice>",
            "signature": "([I)Ljava/util/List;",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothProfile;->getDevicesMatchingConnectionStates([I)Ljava/util/List;"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.le.BluetoothLeScanner",
            "name": "startScan",
            "type": "method",
            "args": [
                "java.util.List<android.bluetooth.le.ScanFilter>",
                "android.bluetooth.le.ScanSettings",
                "android.app.PendingIntent"
            ],
            "return_value": "int",
            "signature": "(Ljava/util/List;Landroid/bluetooth/le/ScanSettings;Landroid/app/PendingIntent;)I",
            "dalvik_invoke": "Landroid/bluetooth/le/BluetoothLeScanner;->startScan(Ljava/util/List;Landroid/bluetooth/le/ScanSettings;Landroid/app/PendingIntent;)I"
        },
        "permissions": [
            "android.permission.BLUETOOTH_ADMIN"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.le.BluetoothLeScanner",
            "name": "startScan",
            "type": "method",
            "args": [
                "android.bluetooth.le.ScanCallback"
            ],
            "return_value": "void",
            "signature": "(Landroid/bluetooth/le/ScanCallback;)V",
            "dalvik_invoke": "Landroid/bluetooth/le/BluetoothLeScanner;->startScan(Landroid/bluetooth/le/ScanCallback;)V"
        },
        "permissions": [
            "android.permission.BLUETOOTH_ADMIN"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.le.BluetoothLeScanner",
            "name": "startScan",
            "type": "method",
            "args": [
                "java.util.List<android.bluetooth.le.ScanFilter>",
                "android.bluetooth.le.ScanSettings",
                "android.bluetooth.le.ScanCallback"
            ],
            "return_value": "void",
            "signature": "(Ljava/util/List;Landroid/bluetooth/le/ScanSettings;Landroid/bluetooth/le/ScanCallback;)V",
            "dalvik_invoke": "Landroid/bluetooth/le/BluetoothLeScanner;->startScan(Ljava/util/List;Landroid/bluetooth/le/ScanSettings;Landroid/bluetooth/le/ScanCallback;)V"
        },
        "permissions": [
            "android.permission.BLUETOOTH_ADMIN"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.le.BluetoothLeScanner",
            "name": "stopScan",
            "type": "method",
            "args": [
                "android.app.PendingIntent"
            ],
            "return_value": "void",
            "signature": "(Landroid/app/PendingIntent;)V",
            "dalvik_invoke": "Landroid/bluetooth/le/BluetoothLeScanner;->stopScan(Landroid/app/PendingIntent;)V"
        },
        "permissions": [
            "android.permission.BLUETOOTH_ADMIN"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.le.BluetoothLeScanner",
            "name": "stopScan",
            "type": "method",
            "args": [
                "android.bluetooth.le.ScanCallback"
            ],
            "return_value": "void",
            "signature": "(Landroid/bluetooth/le/ScanCallback;)V",
            "dalvik_invoke": "Landroid/bluetooth/le/BluetoothLeScanner;->stopScan(Landroid/bluetooth/le/ScanCallback;)V"
        },
        "permissions": [
            "android.permission.BLUETOOTH_ADMIN"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.ContentResolver",
            "name": "getCurrentSync",
            "type": "method",
            "args": [],
            "return_value": "android.content.SyncInfo",
            "signature": "()Landroid/content/SyncInfo;",
            "dalvik_invoke": "Landroid/content/ContentResolver;->getCurrentSync()Landroid/content/SyncInfo;"
        },
        "permissions": [
            "android.permission.READ_SYNC_STATS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.ContentResolver",
            "name": "getMasterSyncAutomatically",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/content/ContentResolver;->getMasterSyncAutomatically()Z"
        },
        "permissions": [
            "android.permission.READ_SYNC_SETTINGS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.ContentResolver",
            "name": "getSyncAutomatically",
            "type": "method",
            "args": [
                "android.accounts.Account",
                "java.lang.String"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/accounts/Account;Ljava/lang/String;)Z",
            "dalvik_invoke": "Landroid/content/ContentResolver;->getSyncAutomatically(Landroid/accounts/Account;Ljava/lang/String;)Z"
        },
        "permissions": [
            "android.permission.READ_SYNC_SETTINGS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.ContentResolver",
            "name": "isSyncActive",
            "type": "method",
            "args": [
                "android.accounts.Account",
                "java.lang.String"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/accounts/Account;Ljava/lang/String;)Z",
            "dalvik_invoke": "Landroid/content/ContentResolver;->isSyncActive(Landroid/accounts/Account;Ljava/lang/String;)Z"
        },
        "permissions": [
            "android.permission.READ_SYNC_STATS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.ContentResolver",
            "name": "isSyncPending",
            "type": "method",
            "args": [
                "android.accounts.Account",
                "java.lang.String"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/accounts/Account;Ljava/lang/String;)Z",
            "dalvik_invoke": "Landroid/content/ContentResolver;->isSyncPending(Landroid/accounts/Account;Ljava/lang/String;)Z"
        },
        "permissions": [
            "android.permission.READ_SYNC_STATS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.ContentResolver",
            "name": "getIsSyncable",
            "type": "method",
            "args": [
                "android.accounts.Account",
                "java.lang.String"
            ],
            "return_value": "int",
            "signature": "(Landroid/accounts/Account;Ljava/lang/String;)I",
            "dalvik_invoke": "Landroid/content/ContentResolver;->getIsSyncable(Landroid/accounts/Account;Ljava/lang/String;)I"
        },
        "permissions": [
            "android.permission.READ_SYNC_SETTINGS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.ContentResolver",
            "name": "getPeriodicSyncs",
            "type": "method",
            "args": [
                "android.accounts.Account",
                "java.lang.String"
            ],
            "return_value": "java.util.List<android.content.PeriodicSync>",
            "signature": "(Landroid/accounts/Account;Ljava/lang/String;)Ljava/util/List;",
            "dalvik_invoke": "Landroid/content/ContentResolver;->getPeriodicSyncs(Landroid/accounts/Account;Ljava/lang/String;)Ljava/util/List;"
        },
        "permissions": [
            "android.permission.READ_SYNC_SETTINGS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.ContentResolver",
            "name": "getCurrentSyncs",
            "type": "method",
            "args": [],
            "return_value": "java.util.List<android.content.SyncInfo>",
            "signature": "()Ljava/util/List;",
            "dalvik_invoke": "Landroid/content/ContentResolver;->getCurrentSyncs()Ljava/util/List;"
        },
        "permissions": [
            "android.permission.READ_SYNC_STATS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.ContentResolver",
            "name": "addPeriodicSync",
            "type": "method",
            "args": [
                "android.accounts.Account",
                "java.lang.String",
                "android.os.Bundle",
                "long"
            ],
            "return_value": "void",
            "signature": "(Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;J)V",
            "dalvik_invoke": "Landroid/content/ContentResolver;->addPeriodicSync(Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;J)V"
        },
        "permissions": [
            "android.permission.WRITE_SYNC_SETTINGS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.ContentResolver",
            "name": "cancelSync",
            "type": "method",
            "args": [
                "android.content.SyncRequest"
            ],
            "return_value": "void",
            "signature": "(Landroid/content/SyncRequest;)V",
            "dalvik_invoke": "Landroid/content/ContentResolver;->cancelSync(Landroid/content/SyncRequest;)V"
        },
        "permissions": [
            "android.permission.WRITE_SYNC_SETTINGS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.ContentResolver",
            "name": "removePeriodicSync",
            "type": "method",
            "args": [
                "android.accounts.Account",
                "java.lang.String",
                "android.os.Bundle"
            ],
            "return_value": "void",
            "signature": "(Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;)V",
            "dalvik_invoke": "Landroid/content/ContentResolver;->removePeriodicSync(Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;)V"
        },
        "permissions": [
            "android.permission.WRITE_SYNC_SETTINGS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.ContentResolver",
            "name": "setIsSyncable",
            "type": "method",
            "args": [
                "android.accounts.Account",
                "java.lang.String",
                "int"
            ],
            "return_value": "void",
            "signature": "(Landroid/accounts/Account;Ljava/lang/String;I)V",
            "dalvik_invoke": "Landroid/content/ContentResolver;->setIsSyncable(Landroid/accounts/Account;Ljava/lang/String;I)V"
        },
        "permissions": [
            "android.permission.WRITE_SYNC_SETTINGS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.ContentResolver",
            "name": "setMasterSyncAutomatically",
            "type": "method",
            "args": [
                "boolean"
            ],
            "return_value": "void",
            "signature": "(Z)V",
            "dalvik_invoke": "Landroid/content/ContentResolver;->setMasterSyncAutomatically(Z)V"
        },
        "permissions": [
            "android.permission.WRITE_SYNC_SETTINGS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.ContentResolver",
            "name": "setSyncAutomatically",
            "type": "method",
            "args": [
                "android.accounts.Account",
                "java.lang.String",
                "boolean"
            ],
            "return_value": "void",
            "signature": "(Landroid/accounts/Account;Ljava/lang/String;Z)V",
            "dalvik_invoke": "Landroid/content/ContentResolver;->setSyncAutomatically(Landroid/accounts/Account;Ljava/lang/String;Z)V"
        },
        "permissions": [
            "android.permission.WRITE_SYNC_SETTINGS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.Context",
            "name": "removeStickyBroadcast",
            "type": "method",
            "args": [
                "android.content.Intent"
            ],
            "return_value": "void",
            "signature": "(Landroid/content/Intent;)V",
            "dalvik_invoke": "Landroid/content/Context;->removeStickyBroadcast(Landroid/content/Intent;)V"
        },
        "permissions": [
            "android.permission.BROADCAST_STICKY"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.Context",
            "name": "removeStickyBroadcastAsUser",
            "type": "method",
            "args": [
                "android.content.Intent",
                "android.os.UserHandle"
            ],
            "return_value": "void",
            "signature": "(Landroid/content/Intent;Landroid/os/UserHandle;)V",
            "dalvik_invoke": "Landroid/content/Context;->removeStickyBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V"
        },
        "permissions": [
            "android.permission.INTERACT_ACROSS_USERS",
            "android.permission.BROADCAST_STICKY"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.Context",
            "name": "sendBroadcastAsUser",
            "type": "method",
            "args": [
                "android.content.Intent",
                "android.os.UserHandle"
            ],
            "return_value": "void",
            "signature": "(Landroid/content/Intent;Landroid/os/UserHandle;)V",
            "dalvik_invoke": "Landroid/content/Context;->sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V"
        },
        "permissions": [
            "android.permission.INTERACT_ACROSS_USERS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.Context",
            "name": "sendBroadcastAsUser",
            "type": "method",
            "args": [
                "android.content.Intent",
                "android.os.UserHandle",
                "java.lang.String"
            ],
            "return_value": "void",
            "signature": "(Landroid/content/Intent;Landroid/os/UserHandle;Ljava/lang/String;)V",
            "dalvik_invoke": "Landroid/content/Context;->sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;Ljava/lang/String;)V"
        },
        "permissions": [
            "android.permission.INTERACT_ACROSS_USERS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.Context",
            "name": "sendOrderedBroadcastAsUser",
            "type": "method",
            "args": [
                "android.content.Intent",
                "android.os.UserHandle",
                "java.lang.String",
                "android.content.BroadcastReceiver",
                "android.os.Handler",
                "int",
                "java.lang.String",
                "android.os.Bundle"
            ],
            "return_value": "void",
            "signature": "(Landroid/content/Intent;Landroid/os/UserHandle;Ljava/lang/String;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V",
            "dalvik_invoke": "Landroid/content/Context;->sendOrderedBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;Ljava/lang/String;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V"
        },
        "permissions": [
            "android.permission.INTERACT_ACROSS_USERS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.Context",
            "name": "sendStickyBroadcast",
            "type": "method",
            "args": [
                "android.content.Intent"
            ],
            "return_value": "void",
            "signature": "(Landroid/content/Intent;)V",
            "dalvik_invoke": "Landroid/content/Context;->sendStickyBroadcast(Landroid/content/Intent;)V"
        },
        "permissions": [
            "android.permission.BROADCAST_STICKY"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.Context",
            "name": "sendStickyBroadcastAsUser",
            "type": "method",
            "args": [
                "android.content.Intent",
                "android.os.UserHandle"
            ],
            "return_value": "void",
            "signature": "(Landroid/content/Intent;Landroid/os/UserHandle;)V",
            "dalvik_invoke": "Landroid/content/Context;->sendStickyBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V"
        },
        "permissions": [
            "android.permission.INTERACT_ACROSS_USERS",
            "android.permission.BROADCAST_STICKY"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.Context",
            "name": "sendStickyOrderedBroadcast",
            "type": "method",
            "args": [
                "android.content.Intent",
                "android.content.BroadcastReceiver",
                "android.os.Handler",
                "int",
                "java.lang.String",
                "android.os.Bundle"
            ],
            "return_value": "void",
            "signature": "(Landroid/content/Intent;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V",
            "dalvik_invoke": "Landroid/content/Context;->sendStickyOrderedBroadcast(Landroid/content/Intent;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V"
        },
        "permissions": [
            "android.permission.BROADCAST_STICKY"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.Context",
            "name": "sendStickyOrderedBroadcastAsUser",
            "type": "method",
            "args": [
                "android.content.Intent",
                "android.os.UserHandle",
                "android.content.BroadcastReceiver",
                "android.os.Handler",
                "int",
                "java.lang.String",
                "android.os.Bundle"
            ],
            "return_value": "void",
            "signature": "(Landroid/content/Intent;Landroid/os/UserHandle;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V",
            "dalvik_invoke": "Landroid/content/Context;->sendStickyOrderedBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V"
        },
        "permissions": [
            "android.permission.INTERACT_ACROSS_USERS",
            "android.permission.BROADCAST_STICKY"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.Intent",
            "name": "ACTION_CALL",
            "type": "field"
        },
        "permissions": [
            "android.permission.CALL_PHONE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.pm.PackageInstaller",
            "name": "uninstall",
            "type": "method",
            "args": [
                "android.content.pm.VersionedPackage",
                "android.content.IntentSender"
            ],
            "return_value": "void",
            "signature": "(Landroid/content/pm/VersionedPackage;Landroid/content/IntentSender;)V",
            "dalvik_invoke": "Landroid/content/pm/PackageInstaller;->uninstall(Landroid/content/pm/VersionedPackage;Landroid/content/IntentSender;)V"
        },
        "permissions": [
            "android.permission.DELETE_PACKAGES",
            "android.permission.REQUEST_DELETE_PACKAGES"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.hardware.camera2.CameraManager",
            "name": "openCamera",
            "type": "method",
            "args": [
                "java.lang.String",
                "android.hardware.camera2.CameraDevice.StateCallback",
                "android.os.Handler"
            ],
            "return_value": "void",
            "signature": "(Ljava/lang/String;Landroid/hardware/camera2/CameraDevice/StateCallback;Landroid/os/Handler;)V",
            "dalvik_invoke": "Landroid/hardware/camera2/CameraManager;->openCamera(Ljava/lang/String;Landroid/hardware/camera2/CameraDevice/StateCallback;Landroid/os/Handler;)V"
        },
        "permissions": [
            "android.permission.CAMERA"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.hardware.fingerprint.FingerprintManager",
            "name": "hasEnrolledFingerprints",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/hardware/fingerprint/FingerprintManager;->hasEnrolledFingerprints()Z"
        },
        "permissions": [
            "android.permission.USE_FINGERPRINT"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.hardware.fingerprint.FingerprintManager",
            "name": "isHardwareDetected",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/hardware/fingerprint/FingerprintManager;->isHardwareDetected()Z"
        },
        "permissions": [
            "android.permission.USE_FINGERPRINT"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.hardware.fingerprint.FingerprintManager",
            "name": "authenticate",
            "type": "method",
            "args": [
                "android.hardware.fingerprint.FingerprintManager.CryptoObject",
                "android.os.CancellationSignal",
                "int",
                "android.hardware.fingerprint.FingerprintManager.AuthenticationCallback",
                "android.os.Handler"
            ],
            "return_value": "void",
            "signature": "(Landroid/hardware/fingerprint/FingerprintManager/CryptoObject;Landroid/os/CancellationSignal;ILandroid/hardware/fingerprint/FingerprintManager/AuthenticationCallback;Landroid/os/Handler;)V",
            "dalvik_invoke": "Landroid/hardware/fingerprint/FingerprintManager;->authenticate(Landroid/hardware/fingerprint/FingerprintManager/CryptoObject;Landroid/os/CancellationSignal;ILandroid/hardware/fingerprint/FingerprintManager/AuthenticationCallback;Landroid/os/Handler;)V"
        },
        "permissions": [
            "android.permission.USE_FINGERPRINT"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "getGpsStatus",
            "type": "method",
            "args": [
                "android.location.GpsStatus"
            ],
            "return_value": "android.location.GpsStatus",
            "signature": "(Landroid/location/GpsStatus;)Landroid/location/GpsStatus;",
            "dalvik_invoke": "Landroid/location/LocationManager;->getGpsStatus(Landroid/location/GpsStatus;)Landroid/location/GpsStatus;"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "getLastKnownLocation",
            "type": "method",
            "args": [
                "java.lang.String"
            ],
            "return_value": "android.location.Location",
            "signature": "(Ljava/lang/String;)Landroid/location/Location;",
            "dalvik_invoke": "Landroid/location/LocationManager;->getLastKnownLocation(Ljava/lang/String;)Landroid/location/Location;"
        },
        "permissions": [
            "android.permission.ACCESS_COARSE_LOCATION",
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "addGpsStatusListener",
            "type": "method",
            "args": [
                "android.location.GpsStatus.Listener"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/location/GpsStatus/Listener;)Z",
            "dalvik_invoke": "Landroid/location/LocationManager;->addGpsStatusListener(Landroid/location/GpsStatus/Listener;)Z"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "addNmeaListener",
            "type": "method",
            "args": [
                "android.location.GpsStatus.NmeaListener"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/location/GpsStatus/NmeaListener;)Z",
            "dalvik_invoke": "Landroid/location/LocationManager;->addNmeaListener(Landroid/location/GpsStatus/NmeaListener;)Z"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "addNmeaListener",
            "type": "method",
            "args": [
                "android.location.OnNmeaMessageListener"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/location/OnNmeaMessageListener;)Z",
            "dalvik_invoke": "Landroid/location/LocationManager;->addNmeaListener(Landroid/location/OnNmeaMessageListener;)Z"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "addNmeaListener",
            "type": "method",
            "args": [
                "android.location.OnNmeaMessageListener",
                "android.os.Handler"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/location/OnNmeaMessageListener;Landroid/os/Handler;)Z",
            "dalvik_invoke": "Landroid/location/LocationManager;->addNmeaListener(Landroid/location/OnNmeaMessageListener;Landroid/os/Handler;)Z"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "registerGnssMeasurementsCallback",
            "type": "method",
            "args": [
                "android.location.GnssMeasurementsEvent.Callback"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/location/GnssMeasurementsEvent/Callback;)Z",
            "dalvik_invoke": "Landroid/location/LocationManager;->registerGnssMeasurementsCallback(Landroid/location/GnssMeasurementsEvent/Callback;)Z"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "registerGnssMeasurementsCallback",
            "type": "method",
            "args": [
                "android.location.GnssMeasurementsEvent.Callback",
                "android.os.Handler"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/location/GnssMeasurementsEvent/Callback;Landroid/os/Handler;)Z",
            "dalvik_invoke": "Landroid/location/LocationManager;->registerGnssMeasurementsCallback(Landroid/location/GnssMeasurementsEvent/Callback;Landroid/os/Handler;)Z"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "registerGnssNavigationMessageCallback",
            "type": "method",
            "args": [
                "android.location.GnssNavigationMessage.Callback",
                "android.os.Handler"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/location/GnssNavigationMessage/Callback;Landroid/os/Handler;)Z",
            "dalvik_invoke": "Landroid/location/LocationManager;->registerGnssNavigationMessageCallback(Landroid/location/GnssNavigationMessage/Callback;Landroid/os/Handler;)Z"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "registerGnssStatusCallback",
            "type": "method",
            "args": [
                "android.location.GnssStatus.Callback"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/location/GnssStatus/Callback;)Z",
            "dalvik_invoke": "Landroid/location/LocationManager;->registerGnssStatusCallback(Landroid/location/GnssStatus/Callback;)Z"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "registerGnssStatusCallback",
            "type": "method",
            "args": [
                "android.location.GnssStatus.Callback",
                "android.os.Handler"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/location/GnssStatus/Callback;Landroid/os/Handler;)Z",
            "dalvik_invoke": "Landroid/location/LocationManager;->registerGnssStatusCallback(Landroid/location/GnssStatus/Callback;Landroid/os/Handler;)Z"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "addProximityAlert",
            "type": "method",
            "args": [
                "double",
                "double",
                "float",
                "long",
                "android.app.PendingIntent"
            ],
            "return_value": "void",
            "signature": "(DDFJLandroid/app/PendingIntent;)V",
            "dalvik_invoke": "Landroid/location/LocationManager;->addProximityAlert(DDFJLandroid/app/PendingIntent;)V"
        },
        "permissions": [
            "android.permission.ACCESS_COARSE_LOCATION",
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "removeProximityAlert",
            "type": "method",
            "args": [
                "android.app.PendingIntent"
            ],
            "return_value": "void",
            "signature": "(Landroid/app/PendingIntent;)V",
            "dalvik_invoke": "Landroid/location/LocationManager;->removeProximityAlert(Landroid/app/PendingIntent;)V"
        },
        "permissions": [
            "android.permission.ACCESS_COARSE_LOCATION",
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "removeUpdates",
            "type": "method",
            "args": [
                "android.location.LocationListener"
            ],
            "return_value": "void",
            "signature": "(Landroid/location/LocationListener;)V",
            "dalvik_invoke": "Landroid/location/LocationManager;->removeUpdates(Landroid/location/LocationListener;)V"
        },
        "permissions": [
            "android.permission.ACCESS_COARSE_LOCATION",
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "requestLocationUpdates",
            "type": "method",
            "args": [
                "java.lang.String",
                "long",
                "float",
                "android.app.PendingIntent"
            ],
            "return_value": "void",
            "signature": "(Ljava/lang/String;JFLandroid/app/PendingIntent;)V",
            "dalvik_invoke": "Landroid/location/LocationManager;->requestLocationUpdates(Ljava/lang/String;JFLandroid/app/PendingIntent;)V"
        },
        "permissions": [
            "android.permission.ACCESS_COARSE_LOCATION",
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "requestLocationUpdates",
            "type": "method",
            "args": [
                "java.lang.String",
                "long",
                "float",
                "android.location.LocationListener"
            ],
            "return_value": "void",
            "signature": "(Ljava/lang/String;JFLandroid/location/LocationListener;)V",
            "dalvik_invoke": "Landroid/location/LocationManager;->requestLocationUpdates(Ljava/lang/String;JFLandroid/location/LocationListener;)V"
        },
        "permissions": [
            "android.permission.ACCESS_COARSE_LOCATION",
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "requestLocationUpdates",
            "type": "method",
            "args": [
                "java.lang.String",
                "long",
                "float",
                "android.location.LocationListener",
                "android.os.Looper"
            ],
            "return_value": "void",
            "signature": "(Ljava/lang/String;JFLandroid/location/LocationListener;Landroid/os/Looper;)V",
            "dalvik_invoke": "Landroid/location/LocationManager;->requestLocationUpdates(Ljava/lang/String;JFLandroid/location/LocationListener;Landroid/os/Looper;)V"
        },
        "permissions": [
            "android.permission.ACCESS_COARSE_LOCATION",
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "requestLocationUpdates",
            "type": "method",
            "args": [
                "long",
                "float",
                "android.location.Criteria",
                "android.app.PendingIntent"
            ],
            "return_value": "void",
            "signature": "(JFLandroid/location/Criteria;Landroid/app/PendingIntent;)V",
            "dalvik_invoke": "Landroid/location/LocationManager;->requestLocationUpdates(JFLandroid/location/Criteria;Landroid/app/PendingIntent;)V"
        },
        "permissions": [
            "android.permission.ACCESS_COARSE_LOCATION",
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "requestLocationUpdates",
            "type": "method",
            "args": [
                "long",
                "float",
                "android.location.Criteria",
                "android.location.LocationListener",
                "android.os.Looper"
            ],
            "return_value": "void",
            "signature": "(JFLandroid/location/Criteria;Landroid/location/LocationListener;Landroid/os/Looper;)V",
            "dalvik_invoke": "Landroid/location/LocationManager;->requestLocationUpdates(JFLandroid/location/Criteria;Landroid/location/LocationListener;Landroid/os/Looper;)V"
        },
        "permissions": [
            "android.permission.ACCESS_COARSE_LOCATION",
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "requestSingleUpdate",
            "type": "method",
            "args": [
                "android.location.Criteria",
                "android.app.PendingIntent"
            ],
            "return_value": "void",
            "signature": "(Landroid/location/Criteria;Landroid/app/PendingIntent;)V",
            "dalvik_invoke": "Landroid/location/LocationManager;->requestSingleUpdate(Landroid/location/Criteria;Landroid/app/PendingIntent;)V"
        },
        "permissions": [
            "android.permission.ACCESS_COARSE_LOCATION",
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "requestSingleUpdate",
            "type": "method",
            "args": [
                "android.location.Criteria",
                "android.location.LocationListener",
                "android.os.Looper"
            ],
            "return_value": "void",
            "signature": "(Landroid/location/Criteria;Landroid/location/LocationListener;Landroid/os/Looper;)V",
            "dalvik_invoke": "Landroid/location/LocationManager;->requestSingleUpdate(Landroid/location/Criteria;Landroid/location/LocationListener;Landroid/os/Looper;)V"
        },
        "permissions": [
            "android.permission.ACCESS_COARSE_LOCATION",
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "requestSingleUpdate",
            "type": "method",
            "args": [
                "java.lang.String",
                "android.app.PendingIntent"
            ],
            "return_value": "void",
            "signature": "(Ljava/lang/String;Landroid/app/PendingIntent;)V",
            "dalvik_invoke": "Landroid/location/LocationManager;->requestSingleUpdate(Ljava/lang/String;Landroid/app/PendingIntent;)V"
        },
        "permissions": [
            "android.permission.ACCESS_COARSE_LOCATION",
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "requestSingleUpdate",
            "type": "method",
            "args": [
                "java.lang.String",
                "android.location.LocationListener",
                "android.os.Looper"
            ],
            "return_value": "void",
            "signature": "(Ljava/lang/String;Landroid/location/LocationListener;Landroid/os/Looper;)V",
            "dalvik_invoke": "Landroid/location/LocationManager;->requestSingleUpdate(Ljava/lang/String;Landroid/location/LocationListener;Landroid/os/Looper;)V"
        },
        "permissions": [
            "android.permission.ACCESS_COARSE_LOCATION",
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.media.tv.TvContract",
            "name": "buildChannelUri",
            "type": "method",
            "args": [
                "long"
            ],
            "return_value": "android.net.Uri",
            "signature": "(J)Landroid/net/Uri;",
            "dalvik_invoke": "Landroid/media/tv/TvContract;->buildChannelUri(J)Landroid/net/Uri;"
        },
        "permissions": [
            "com.android.providers.tv.permission.READ_EPG_DATA"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.media.tv.TvContract.Channels",
            "name": "CONTENT_URI",
            "type": "field"
        },
        "permissions": [
            "com.android.providers.tv.permission.READ_EPG_DATA"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.ConnectivityManager",
            "name": "getLinkProperties",
            "type": "method",
            "args": [
                "android.net.Network"
            ],
            "return_value": "android.net.LinkProperties",
            "signature": "(Landroid/net/Network;)Landroid/net/LinkProperties;",
            "dalvik_invoke": "Landroid/net/ConnectivityManager;->getLinkProperties(Landroid/net/Network;)Landroid/net/LinkProperties;"
        },
        "permissions": [
            "android.permission.ACCESS_NETWORK_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.ConnectivityManager",
            "name": "getActiveNetwork",
            "type": "method",
            "args": [],
            "return_value": "android.net.Network",
            "signature": "()Landroid/net/Network;",
            "dalvik_invoke": "Landroid/net/ConnectivityManager;->getActiveNetwork()Landroid/net/Network;"
        },
        "permissions": [
            "android.permission.ACCESS_NETWORK_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.ConnectivityManager",
            "name": "getNetworkCapabilities",
            "type": "method",
            "args": [
                "android.net.Network"
            ],
            "return_value": "android.net.NetworkCapabilities",
            "signature": "(Landroid/net/Network;)Landroid/net/NetworkCapabilities;",
            "dalvik_invoke": "Landroid/net/ConnectivityManager;->getNetworkCapabilities(Landroid/net/Network;)Landroid/net/NetworkCapabilities;"
        },
        "permissions": [
            "android.permission.ACCESS_NETWORK_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.ConnectivityManager",
            "name": "getActiveNetworkInfo",
            "type": "method",
            "args": [],
            "return_value": "android.net.NetworkInfo",
            "signature": "()Landroid/net/NetworkInfo;",
            "dalvik_invoke": "Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;"
        },
        "permissions": [
            "android.permission.ACCESS_NETWORK_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.ConnectivityManager",
            "name": "getNetworkInfo",
            "type": "method",
            "args": [
                "android.net.Network"
            ],
            "return_value": "android.net.NetworkInfo",
            "signature": "(Landroid/net/Network;)Landroid/net/NetworkInfo;",
            "dalvik_invoke": "Landroid/net/ConnectivityManager;->getNetworkInfo(Landroid/net/Network;)Landroid/net/NetworkInfo;"
        },
        "permissions": [
            "android.permission.ACCESS_NETWORK_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.ConnectivityManager",
            "name": "getNetworkInfo",
            "type": "method",
            "args": [
                "int"
            ],
            "return_value": "android.net.NetworkInfo",
            "signature": "(I)Landroid/net/NetworkInfo;",
            "dalvik_invoke": "Landroid/net/ConnectivityManager;->getNetworkInfo(I)Landroid/net/NetworkInfo;"
        },
        "permissions": [
            "android.permission.ACCESS_NETWORK_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.ConnectivityManager",
            "name": "getAllNetworkInfo",
            "type": "method",
            "args": [],
            "return_value": "android.net.NetworkInfo[]",
            "signature": "()[Landroid/net/NetworkInfo;",
            "dalvik_invoke": "Landroid/net/ConnectivityManager;->getAllNetworkInfo()[Landroid/net/NetworkInfo;"
        },
        "permissions": [
            "android.permission.ACCESS_NETWORK_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.ConnectivityManager",
            "name": "getAllNetworks",
            "type": "method",
            "args": [],
            "return_value": "android.net.Network[]",
            "signature": "()[Landroid/net/Network;",
            "dalvik_invoke": "Landroid/net/ConnectivityManager;->getAllNetworks()[Landroid/net/Network;"
        },
        "permissions": [
            "android.permission.ACCESS_NETWORK_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.ConnectivityManager",
            "name": "isActiveNetworkMetered",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/net/ConnectivityManager;->isActiveNetworkMetered()Z"
        },
        "permissions": [
            "android.permission.ACCESS_NETWORK_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.ConnectivityManager",
            "name": "getMultipathPreference",
            "type": "method",
            "args": [
                "android.net.Network"
            ],
            "return_value": "int",
            "signature": "(Landroid/net/Network;)I",
            "dalvik_invoke": "Landroid/net/ConnectivityManager;->getMultipathPreference(Landroid/net/Network;)I"
        },
        "permissions": [
            "android.permission.ACCESS_NETWORK_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.ConnectivityManager",
            "name": "getNetworkPreference",
            "type": "method",
            "args": [],
            "return_value": "int",
            "signature": "()I",
            "dalvik_invoke": "Landroid/net/ConnectivityManager;->getNetworkPreference()I"
        },
        "permissions": [
            "android.permission.ACCESS_NETWORK_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.ConnectivityManager",
            "name": "registerDefaultNetworkCallback",
            "type": "method",
            "args": [
                "android.net.ConnectivityManager.NetworkCallback"
            ],
            "return_value": "void",
            "signature": "(Landroid/net/ConnectivityManager/NetworkCallback;)V",
            "dalvik_invoke": "Landroid/net/ConnectivityManager;->registerDefaultNetworkCallback(Landroid/net/ConnectivityManager/NetworkCallback;)V"
        },
        "permissions": [
            "android.permission.ACCESS_NETWORK_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.ConnectivityManager",
            "name": "registerDefaultNetworkCallback",
            "type": "method",
            "args": [
                "android.net.ConnectivityManager.NetworkCallback",
                "android.os.Handler"
            ],
            "return_value": "void",
            "signature": "(Landroid/net/ConnectivityManager/NetworkCallback;Landroid/os/Handler;)V",
            "dalvik_invoke": "Landroid/net/ConnectivityManager;->registerDefaultNetworkCallback(Landroid/net/ConnectivityManager/NetworkCallback;Landroid/os/Handler;)V"
        },
        "permissions": [
            "android.permission.ACCESS_NETWORK_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.ConnectivityManager",
            "name": "registerNetworkCallback",
            "type": "method",
            "args": [
                "android.net.NetworkRequest",
                "android.app.PendingIntent"
            ],
            "return_value": "void",
            "signature": "(Landroid/net/NetworkRequest;Landroid/app/PendingIntent;)V",
            "dalvik_invoke": "Landroid/net/ConnectivityManager;->registerNetworkCallback(Landroid/net/NetworkRequest;Landroid/app/PendingIntent;)V"
        },
        "permissions": [
            "android.permission.ACCESS_NETWORK_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.ConnectivityManager",
            "name": "registerNetworkCallback",
            "type": "method",
            "args": [
                "android.net.NetworkRequest",
                "android.net.ConnectivityManager.NetworkCallback"
            ],
            "return_value": "void",
            "signature": "(Landroid/net/NetworkRequest;Landroid/net/ConnectivityManager/NetworkCallback;)V",
            "dalvik_invoke": "Landroid/net/ConnectivityManager;->registerNetworkCallback(Landroid/net/NetworkRequest;Landroid/net/ConnectivityManager/NetworkCallback;)V"
        },
        "permissions": [
            "android.permission.ACCESS_NETWORK_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.ConnectivityManager",
            "name": "registerNetworkCallback",
            "type": "method",
            "args": [
                "android.net.NetworkRequest",
                "android.net.ConnectivityManager.NetworkCallback",
                "android.os.Handler"
            ],
            "return_value": "void",
            "signature": "(Landroid/net/NetworkRequest;Landroid/net/ConnectivityManager/NetworkCallback;Landroid/os/Handler;)V",
            "dalvik_invoke": "Landroid/net/ConnectivityManager;->registerNetworkCallback(Landroid/net/NetworkRequest;Landroid/net/ConnectivityManager/NetworkCallback;Landroid/os/Handler;)V"
        },
        "permissions": [
            "android.permission.ACCESS_NETWORK_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.WifiManager",
            "name": "getDhcpInfo",
            "type": "method",
            "args": [],
            "return_value": "android.net.DhcpInfo",
            "signature": "()Landroid/net/DhcpInfo;",
            "dalvik_invoke": "Landroid/net/wifi/WifiManager;->getDhcpInfo()Landroid/net/DhcpInfo;"
        },
        "permissions": [
            "android.permission.ACCESS_WIFI_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.WifiManager",
            "name": "getConnectionInfo",
            "type": "method",
            "args": [],
            "return_value": "android.net.wifi.WifiInfo",
            "signature": "()Landroid/net/wifi/WifiInfo;",
            "dalvik_invoke": "Landroid/net/wifi/WifiManager;->getConnectionInfo()Landroid/net/wifi/WifiInfo;"
        },
        "permissions": [
            "android.permission.ACCESS_WIFI_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.WifiManager",
            "name": "disableNetwork",
            "type": "method",
            "args": [
                "int"
            ],
            "return_value": "boolean",
            "signature": "(I)Z",
            "dalvik_invoke": "Landroid/net/wifi/WifiManager;->disableNetwork(I)Z"
        },
        "permissions": [
            "android.permission.CHANGE_WIFI_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.WifiManager",
            "name": "disconnect",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/net/wifi/WifiManager;->disconnect()Z"
        },
        "permissions": [
            "android.permission.CHANGE_WIFI_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.WifiManager",
            "name": "enableNetwork",
            "type": "method",
            "args": [
                "int",
                "boolean"
            ],
            "return_value": "boolean",
            "signature": "(IZ)Z",
            "dalvik_invoke": "Landroid/net/wifi/WifiManager;->enableNetwork(IZ)Z"
        },
        "permissions": [
            "android.permission.CHANGE_WIFI_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.WifiManager",
            "name": "is5GHzBandSupported",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/net/wifi/WifiManager;->is5GHzBandSupported()Z"
        },
        "permissions": [
            "android.permission.ACCESS_WIFI_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.WifiManager",
            "name": "isDeviceToApRttSupported",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/net/wifi/WifiManager;->isDeviceToApRttSupported()Z"
        },
        "permissions": [
            "android.permission.ACCESS_WIFI_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.WifiManager",
            "name": "isEnhancedPowerReportingSupported",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/net/wifi/WifiManager;->isEnhancedPowerReportingSupported()Z"
        },
        "permissions": [
            "android.permission.ACCESS_WIFI_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.WifiManager",
            "name": "isP2pSupported",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/net/wifi/WifiManager;->isP2pSupported()Z"
        },
        "permissions": [
            "android.permission.ACCESS_WIFI_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.WifiManager",
            "name": "isPreferredNetworkOffloadSupported",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/net/wifi/WifiManager;->isPreferredNetworkOffloadSupported()Z"
        },
        "permissions": [
            "android.permission.ACCESS_WIFI_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.WifiManager",
            "name": "isScanAlwaysAvailable",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/net/wifi/WifiManager;->isScanAlwaysAvailable()Z"
        },
        "permissions": [
            "android.permission.ACCESS_WIFI_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.WifiManager",
            "name": "isTdlsSupported",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/net/wifi/WifiManager;->isTdlsSupported()Z"
        },
        "permissions": [
            "android.permission.ACCESS_WIFI_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.WifiManager",
            "name": "reassociate",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/net/wifi/WifiManager;->reassociate()Z"
        },
        "permissions": [
            "android.permission.CHANGE_WIFI_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.WifiManager",
            "name": "reconnect",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/net/wifi/WifiManager;->reconnect()Z"
        },
        "permissions": [
            "android.permission.CHANGE_WIFI_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.WifiManager",
            "name": "removeNetwork",
            "type": "method",
            "args": [
                "int"
            ],
            "return_value": "boolean",
            "signature": "(I)Z",
            "dalvik_invoke": "Landroid/net/wifi/WifiManager;->removeNetwork(I)Z"
        },
        "permissions": [
            "android.permission.CHANGE_WIFI_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.WifiManager",
            "name": "saveConfiguration",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/net/wifi/WifiManager;->saveConfiguration()Z"
        },
        "permissions": [
            "android.permission.CHANGE_WIFI_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.WifiManager",
            "name": "setWifiEnabled",
            "type": "method",
            "args": [
                "boolean"
            ],
            "return_value": "boolean",
            "signature": "(Z)Z",
            "dalvik_invoke": "Landroid/net/wifi/WifiManager;->setWifiEnabled(Z)Z"
        },
        "permissions": [
            "android.permission.CHANGE_WIFI_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.WifiManager",
            "name": "startScan",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/net/wifi/WifiManager;->startScan()Z"
        },
        "permissions": [
            "android.permission.CHANGE_WIFI_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.WifiManager",
            "name": "addNetwork",
            "type": "method",
            "args": [
                "android.net.wifi.WifiConfiguration"
            ],
            "return_value": "int",
            "signature": "(Landroid/net/wifi/WifiConfiguration;)I",
            "dalvik_invoke": "Landroid/net/wifi/WifiManager;->addNetwork(Landroid/net/wifi/WifiConfiguration;)I"
        },
        "permissions": [
            "android.permission.CHANGE_WIFI_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.WifiManager",
            "name": "getWifiState",
            "type": "method",
            "args": [],
            "return_value": "int",
            "signature": "()I",
            "dalvik_invoke": "Landroid/net/wifi/WifiManager;->getWifiState()I"
        },
        "permissions": [
            "android.permission.ACCESS_WIFI_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.WifiManager",
            "name": "updateNetwork",
            "type": "method",
            "args": [
                "android.net.wifi.WifiConfiguration"
            ],
            "return_value": "int",
            "signature": "(Landroid/net/wifi/WifiConfiguration;)I",
            "dalvik_invoke": "Landroid/net/wifi/WifiManager;->updateNetwork(Landroid/net/wifi/WifiConfiguration;)I"
        },
        "permissions": [
            "android.permission.CHANGE_WIFI_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.WifiManager",
            "name": "getScanResults",
            "type": "method",
            "args": [],
            "return_value": "java.util.List<android.net.wifi.ScanResult>",
            "signature": "()Ljava/util/List;",
            "dalvik_invoke": "Landroid/net/wifi/WifiManager;->getScanResults()Ljava/util/List;"
        },
        "permissions": [
            "android.permission.ACCESS_WIFI_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.WifiManager",
            "name": "getConfiguredNetworks",
            "type": "method",
            "args": [],
            "return_value": "java.util.List<android.net.wifi.WifiConfiguration>",
            "signature": "()Ljava/util/List;",
            "dalvik_invoke": "Landroid/net/wifi/WifiManager;->getConfiguredNetworks()Ljava/util/List;"
        },
        "permissions": [
            "android.permission.ACCESS_WIFI_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.WifiManager.MulticastLock",
            "name": "acquire",
            "type": "method",
            "args": [],
            "return_value": "void",
            "signature": "()V",
            "dalvik_invoke": "Landroid/net/wifi/WifiManager/MulticastLock;->acquire()V"
        },
        "permissions": [
            "android.permission.CHANGE_WIFI_MULTICAST_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.WifiManager.MulticastLock",
            "name": "release",
            "type": "method",
            "args": [],
            "return_value": "void",
            "signature": "()V",
            "dalvik_invoke": "Landroid/net/wifi/WifiManager/MulticastLock;->release()V"
        },
        "permissions": [
            "android.permission.CHANGE_WIFI_MULTICAST_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.nfc.NfcAdapter",
            "name": "invokeBeam",
            "type": "method",
            "args": [
                "android.app.Activity"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/app/Activity;)Z",
            "dalvik_invoke": "Landroid/nfc/NfcAdapter;->invokeBeam(Landroid/app/Activity;)Z"
        },
        "permissions": [
            "android.permission.NFC"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.nfc.NfcAdapter",
            "name": "disableForegroundDispatch",
            "type": "method",
            "args": [
                "android.app.Activity"
            ],
            "return_value": "void",
            "signature": "(Landroid/app/Activity;)V",
            "dalvik_invoke": "Landroid/nfc/NfcAdapter;->disableForegroundDispatch(Landroid/app/Activity;)V"
        },
        "permissions": [
            "android.permission.NFC"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.nfc.NfcAdapter",
            "name": "disableForegroundNdefPush",
            "type": "method",
            "args": [
                "android.app.Activity"
            ],
            "return_value": "void",
            "signature": "(Landroid/app/Activity;)V",
            "dalvik_invoke": "Landroid/nfc/NfcAdapter;->disableForegroundNdefPush(Landroid/app/Activity;)V"
        },
        "permissions": [
            "android.permission.NFC"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.nfc.NfcAdapter",
            "name": "enableForegroundDispatch",
            "type": "method",
            "args": [
                "android.app.Activity",
                "android.app.PendingIntent",
                "android.content.IntentFilter[]",
                "java.lang.String[][]"
            ],
            "return_value": "void",
            "signature": "(Landroid/app/Activity;Landroid/app/PendingIntent;[Landroid/content/IntentFilter;[Ljava/lang/String;)V",
            "dalvik_invoke": "Landroid/nfc/NfcAdapter;->enableForegroundDispatch(Landroid/app/Activity;Landroid/app/PendingIntent;[Landroid/content/IntentFilter;[Ljava/lang/String;)V"
        },
        "permissions": [
            "android.permission.NFC"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.nfc.NfcAdapter",
            "name": "enableForegroundNdefPush",
            "type": "method",
            "args": [
                "android.app.Activity",
                "android.nfc.NdefMessage"
            ],
            "return_value": "void",
            "signature": "(Landroid/app/Activity;Landroid/nfc/NdefMessage;)V",
            "dalvik_invoke": "Landroid/nfc/NfcAdapter;->enableForegroundNdefPush(Landroid/app/Activity;Landroid/nfc/NdefMessage;)V"
        },
        "permissions": [
            "android.permission.NFC"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.nfc.NfcAdapter",
            "name": "setBeamPushUris",
            "type": "method",
            "args": [
                "android.net.Uri[]",
                "android.app.Activity"
            ],
            "return_value": "void",
            "signature": "([Landroid/net/Uri;Landroid/app/Activity;)V",
            "dalvik_invoke": "Landroid/nfc/NfcAdapter;->setBeamPushUris([Landroid/net/Uri;Landroid/app/Activity;)V"
        },
        "permissions": [
            "android.permission.NFC"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.nfc.NfcAdapter",
            "name": "setBeamPushUrisCallback",
            "type": "method",
            "args": [
                "android.nfc.NfcAdapter.CreateBeamUrisCallback",
                "android.app.Activity"
            ],
            "return_value": "void",
            "signature": "(Landroid/nfc/NfcAdapter/CreateBeamUrisCallback;Landroid/app/Activity;)V",
            "dalvik_invoke": "Landroid/nfc/NfcAdapter;->setBeamPushUrisCallback(Landroid/nfc/NfcAdapter/CreateBeamUrisCallback;Landroid/app/Activity;)V"
        },
        "permissions": [
            "android.permission.NFC"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.nfc.NfcAdapter",
            "name": "setNdefPushMessage",
            "type": "method",
            "args": [
                "android.nfc.NdefMessage",
                "android.app.Activity",
                "android.app.Activity..."
            ],
            "return_value": "void",
            "signature": "(Landroid/nfc/NdefMessage;Landroid/app/Activity;Landroid/app/Activity///;)V",
            "dalvik_invoke": "Landroid/nfc/NfcAdapter;->setNdefPushMessage(Landroid/nfc/NdefMessage;Landroid/app/Activity;Landroid/app/Activity///;)V"
        },
        "permissions": [
            "android.permission.NFC"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.nfc.NfcAdapter",
            "name": "setNdefPushMessageCallback",
            "type": "method",
            "args": [
                "android.nfc.NfcAdapter.CreateNdefMessageCallback",
                "android.app.Activity",
                "android.app.Activity..."
            ],
            "return_value": "void",
            "signature": "(Landroid/nfc/NfcAdapter/CreateNdefMessageCallback;Landroid/app/Activity;Landroid/app/Activity///;)V",
            "dalvik_invoke": "Landroid/nfc/NfcAdapter;->setNdefPushMessageCallback(Landroid/nfc/NfcAdapter/CreateNdefMessageCallback;Landroid/app/Activity;Landroid/app/Activity///;)V"
        },
        "permissions": [
            "android.permission.NFC"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.nfc.NfcAdapter",
            "name": "setOnNdefPushCompleteCallback",
            "type": "method",
            "args": [
                "android.nfc.NfcAdapter.OnNdefPushCompleteCallback",
                "android.app.Activity",
                "android.app.Activity..."
            ],
            "return_value": "void",
            "signature": "(Landroid/nfc/NfcAdapter/OnNdefPushCompleteCallback;Landroid/app/Activity;Landroid/app/Activity///;)V",
            "dalvik_invoke": "Landroid/nfc/NfcAdapter;->setOnNdefPushCompleteCallback(Landroid/nfc/NfcAdapter/OnNdefPushCompleteCallback;Landroid/app/Activity;Landroid/app/Activity///;)V"
        },
        "permissions": [
            "android.permission.NFC"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.nfc.cardemulation.CardEmulation",
            "name": "isDefaultServiceForAid",
            "type": "method",
            "args": [
                "android.content.ComponentName",
                "java.lang.String"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/content/ComponentName;Ljava/lang/String;)Z",
            "dalvik_invoke": "Landroid/nfc/cardemulation/CardEmulation;->isDefaultServiceForAid(Landroid/content/ComponentName;Ljava/lang/String;)Z"
        },
        "permissions": [
            "android.permission.NFC"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.nfc.cardemulation.CardEmulation",
            "name": "isDefaultServiceForCategory",
            "type": "method",
            "args": [
                "android.content.ComponentName",
                "java.lang.String"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/content/ComponentName;Ljava/lang/String;)Z",
            "dalvik_invoke": "Landroid/nfc/cardemulation/CardEmulation;->isDefaultServiceForCategory(Landroid/content/ComponentName;Ljava/lang/String;)Z"
        },
        "permissions": [
            "android.permission.NFC"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.nfc.tech.IsoDep",
            "name": "transceive",
            "type": "method",
            "args": [
                "byte[]"
            ],
            "return_value": "byte[]",
            "signature": "([B)[B",
            "dalvik_invoke": "Landroid/nfc/tech/IsoDep;->transceive([B)[B"
        },
        "permissions": [
            "android.permission.NFC"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.nfc.tech.IsoDep",
            "name": "getTimeout",
            "type": "method",
            "args": [],
            "return_value": "int",
            "signature": "()I",
            "dalvik_invoke": "Landroid/nfc/tech/IsoDep;->getTimeout()I"
        },
        "permissions": [
            "android.permission.NFC"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.nfc.tech.IsoDep",
            "name": "setTimeout",
            "type": "method",
            "args": [
                "int"
            ],
            "return_value": "void",
            "signature": "(I)V",
            "dalvik_invoke": "Landroid/nfc/tech/IsoDep;->setTimeout(I)V"
        },
        "permissions": [
            "android.permission.NFC"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.nfc.tech.Ndef",
            "name": "getNdefMessage",
            "type": "method",
            "args": [],
            "return_value": "android.nfc.NdefMessage",
            "signature": "()Landroid/nfc/NdefMessage;",
            "dalvik_invoke": "Landroid/nfc/tech/Ndef;->getNdefMessage()Landroid/nfc/NdefMessage;"
        },
        "permissions": [
            "android.permission.NFC"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.nfc.tech.Ndef",
            "name": "makeReadOnly",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/nfc/tech/Ndef;->makeReadOnly()Z"
        },
        "permissions": [
            "android.permission.NFC"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.nfc.tech.Ndef",
            "name": "writeNdefMessage",
            "type": "method",
            "args": [
                "android.nfc.NdefMessage"
            ],
            "return_value": "void",
            "signature": "(Landroid/nfc/NdefMessage;)V",
            "dalvik_invoke": "Landroid/nfc/tech/Ndef;->writeNdefMessage(Landroid/nfc/NdefMessage;)V"
        },
        "permissions": [
            "android.permission.NFC"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.nfc.tech.TagTechnology",
            "name": "close",
            "type": "method",
            "args": [],
            "return_value": "void",
            "signature": "()V",
            "dalvik_invoke": "Landroid/nfc/tech/TagTechnology;->close()V"
        },
        "permissions": [
            "android.permission.NFC"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.nfc.tech.TagTechnology",
            "name": "connect",
            "type": "method",
            "args": [],
            "return_value": "void",
            "signature": "()V",
            "dalvik_invoke": "Landroid/nfc/tech/TagTechnology;->connect()V"
        },
        "permissions": [
            "android.permission.NFC"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.os.Build",
            "name": "getSerial",
            "type": "method",
            "args": [],
            "return_value": "java.lang.String",
            "signature": "()Ljava/lang/String;",
            "dalvik_invoke": "Landroid/os/Build;->getSerial()Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.os.RecoverySystem",
            "name": "installPackage",
            "type": "method",
            "args": [
                "android.content.Context",
                "java.io.File"
            ],
            "return_value": "void",
            "signature": "(Landroid/content/Context;Ljava/io/File;)V",
            "dalvik_invoke": "Landroid/os/RecoverySystem;->installPackage(Landroid/content/Context;Ljava/io/File;)V"
        },
        "permissions": [
            "android.permission.RECOVERY"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.os.Vibrator",
            "name": "cancel",
            "type": "method",
            "args": [],
            "return_value": "void",
            "signature": "()V",
            "dalvik_invoke": "Landroid/os/Vibrator;->cancel()V"
        },
        "permissions": [
            "android.permission.VIBRATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.os.Vibrator",
            "name": "vibrate",
            "type": "method",
            "args": [
                "android.os.VibrationEffect"
            ],
            "return_value": "void",
            "signature": "(Landroid/os/VibrationEffect;)V",
            "dalvik_invoke": "Landroid/os/Vibrator;->vibrate(Landroid/os/VibrationEffect;)V"
        },
        "permissions": [
            "android.permission.VIBRATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.os.Vibrator",
            "name": "vibrate",
            "type": "method",
            "args": [
                "android.os.VibrationEffect",
                "android.media.AudioAttributes"
            ],
            "return_value": "void",
            "signature": "(Landroid/os/VibrationEffect;Landroid/media/AudioAttributes;)V",
            "dalvik_invoke": "Landroid/os/Vibrator;->vibrate(Landroid/os/VibrationEffect;Landroid/media/AudioAttributes;)V"
        },
        "permissions": [
            "android.permission.VIBRATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.os.Vibrator",
            "name": "vibrate",
            "type": "method",
            "args": [
                "long"
            ],
            "return_value": "void",
            "signature": "(J)V",
            "dalvik_invoke": "Landroid/os/Vibrator;->vibrate(J)V"
        },
        "permissions": [
            "android.permission.VIBRATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.os.Vibrator",
            "name": "vibrate",
            "type": "method",
            "args": [
                "long",
                "android.media.AudioAttributes"
            ],
            "return_value": "void",
            "signature": "(JLandroid/media/AudioAttributes;)V",
            "dalvik_invoke": "Landroid/os/Vibrator;->vibrate(JLandroid/media/AudioAttributes;)V"
        },
        "permissions": [
            "android.permission.VIBRATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.os.Vibrator",
            "name": "vibrate",
            "type": "method",
            "args": [
                "long[]",
                "int"
            ],
            "return_value": "void",
            "signature": "([JI)V",
            "dalvik_invoke": "Landroid/os/Vibrator;->vibrate([JI)V"
        },
        "permissions": [
            "android.permission.VIBRATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.os.Vibrator",
            "name": "vibrate",
            "type": "method",
            "args": [
                "long[]",
                "int",
                "android.media.AudioAttributes"
            ],
            "return_value": "void",
            "signature": "([JILandroid/media/AudioAttributes;)V",
            "dalvik_invoke": "Landroid/os/Vibrator;->vibrate([JILandroid/media/AudioAttributes;)V"
        },
        "permissions": [
            "android.permission.VIBRATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.provider.Browser",
            "name": "BOOKMARKS_URI",
            "type": "field"
        },
        "permissions": [
            "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.provider.Browser",
            "name": "SEARCHES_URI",
            "type": "field"
        },
        "permissions": [
            "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.provider.Browser",
            "name": "getAllBookmarks",
            "type": "method",
            "args": [
                "android.content.ContentResolver"
            ],
            "return_value": "android.database.Cursor",
            "signature": "(Landroid/content/ContentResolver;)Landroid/database/Cursor;",
            "dalvik_invoke": "Landroid/provider/Browser;->getAllBookmarks(Landroid/content/ContentResolver;)Landroid/database/Cursor;"
        },
        "permissions": [
            "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.provider.Browser",
            "name": "getAllVisitedUrls",
            "type": "method",
            "args": [
                "android.content.ContentResolver"
            ],
            "return_value": "android.database.Cursor",
            "signature": "(Landroid/content/ContentResolver;)Landroid/database/Cursor;",
            "dalvik_invoke": "Landroid/provider/Browser;->getAllVisitedUrls(Landroid/content/ContentResolver;)Landroid/database/Cursor;"
        },
        "permissions": [
            "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.provider.Browser",
            "name": "canClearHistory",
            "type": "method",
            "args": [
                "android.content.ContentResolver"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/content/ContentResolver;)Z",
            "dalvik_invoke": "Landroid/provider/Browser;->canClearHistory(Landroid/content/ContentResolver;)Z"
        },
        "permissions": [
            "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.provider.Browser",
            "name": "addSearchUrl",
            "type": "method",
            "args": [
                "android.content.ContentResolver",
                "java.lang.String"
            ],
            "return_value": "void",
            "signature": "(Landroid/content/ContentResolver;Ljava/lang/String;)V",
            "dalvik_invoke": "Landroid/provider/Browser;->addSearchUrl(Landroid/content/ContentResolver;Ljava/lang/String;)V"
        },
        "permissions": [
            "com.android.browser.permission.READ_HISTORY_BOOKMARKS",
            "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.provider.Browser",
            "name": "clearHistory",
            "type": "method",
            "args": [
                "android.content.ContentResolver"
            ],
            "return_value": "void",
            "signature": "(Landroid/content/ContentResolver;)V",
            "dalvik_invoke": "Landroid/provider/Browser;->clearHistory(Landroid/content/ContentResolver;)V"
        },
        "permissions": [
            "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.provider.Browser",
            "name": "clearSearches",
            "type": "method",
            "args": [
                "android.content.ContentResolver"
            ],
            "return_value": "void",
            "signature": "(Landroid/content/ContentResolver;)V",
            "dalvik_invoke": "Landroid/provider/Browser;->clearSearches(Landroid/content/ContentResolver;)V"
        },
        "permissions": [
            "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.provider.Browser",
            "name": "deleteFromHistory",
            "type": "method",
            "args": [
                "android.content.ContentResolver",
                "java.lang.String"
            ],
            "return_value": "void",
            "signature": "(Landroid/content/ContentResolver;Ljava/lang/String;)V",
            "dalvik_invoke": "Landroid/provider/Browser;->deleteFromHistory(Landroid/content/ContentResolver;Ljava/lang/String;)V"
        },
        "permissions": [
            "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.provider.Browser",
            "name": "deleteHistoryTimeFrame",
            "type": "method",
            "args": [
                "android.content.ContentResolver",
                "long",
                "long"
            ],
            "return_value": "void",
            "signature": "(Landroid/content/ContentResolver;JJ)V",
            "dalvik_invoke": "Landroid/provider/Browser;->deleteHistoryTimeFrame(Landroid/content/ContentResolver;JJ)V"
        },
        "permissions": [
            "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.provider.Browser",
            "name": "requestAllIcons",
            "type": "method",
            "args": [
                "android.content.ContentResolver",
                "java.lang.String",
                "android.webkit.WebIconDatabase.IconListener"
            ],
            "return_value": "void",
            "signature": "(Landroid/content/ContentResolver;Ljava/lang/String;Landroid/webkit/WebIconDatabase/IconListener;)V",
            "dalvik_invoke": "Landroid/provider/Browser;->requestAllIcons(Landroid/content/ContentResolver;Ljava/lang/String;Landroid/webkit/WebIconDatabase/IconListener;)V"
        },
        "permissions": [
            "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.provider.Browser",
            "name": "truncateHistory",
            "type": "method",
            "args": [
                "android.content.ContentResolver"
            ],
            "return_value": "void",
            "signature": "(Landroid/content/ContentResolver;)V",
            "dalvik_invoke": "Landroid/provider/Browser;->truncateHistory(Landroid/content/ContentResolver;)V"
        },
        "permissions": [
            "com.android.browser.permission.READ_HISTORY_BOOKMARKS",
            "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.provider.Browser",
            "name": "updateVisitedHistory",
            "type": "method",
            "args": [
                "android.content.ContentResolver",
                "java.lang.String",
                "boolean"
            ],
            "return_value": "void",
            "signature": "(Landroid/content/ContentResolver;Ljava/lang/String;Z)V",
            "dalvik_invoke": "Landroid/provider/Browser;->updateVisitedHistory(Landroid/content/ContentResolver;Ljava/lang/String;Z)V"
        },
        "permissions": [
            "com.android.browser.permission.READ_HISTORY_BOOKMARKS",
            "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.provider.CalendarContract",
            "name": "CONTENT_URI",
            "type": "field"
        },
        "permissions": [
            "android.permission.READ_CALENDAR"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.provider.CalendarContract.Attendees",
            "name": "CONTENT_URI",
            "type": "field"
        },
        "permissions": [
            "android.permission.READ_CALENDAR"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.provider.CalendarContract.CalendarAlerts",
            "name": "CONTENT_URI",
            "type": "field"
        },
        "permissions": [
            "android.permission.READ_CALENDAR"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.provider.CalendarContract.CalendarEntity",
            "name": "CONTENT_URI",
            "type": "field"
        },
        "permissions": [
            "android.permission.READ_CALENDAR"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.provider.CalendarContract.Calendars",
            "name": "CONTENT_URI",
            "type": "field"
        },
        "permissions": [
            "android.permission.READ_CALENDAR"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.provider.CalendarContract.Colors",
            "name": "CONTENT_URI",
            "type": "field"
        },
        "permissions": [
            "android.permission.READ_CALENDAR"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.provider.CalendarContract.EventDays",
            "name": "CONTENT_URI",
            "type": "field"
        },
        "permissions": [
            "android.permission.READ_CALENDAR"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.provider.CalendarContract.Events",
            "name": "CONTENT_URI",
            "type": "field"
        },
        "permissions": [
            "android.permission.READ_CALENDAR"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.provider.CalendarContract.EventsEntity",
            "name": "CONTENT_URI",
            "type": "field"
        },
        "permissions": [
            "android.permission.READ_CALENDAR"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.provider.CalendarContract.ExtendedProperties",
            "name": "CONTENT_URI",
            "type": "field"
        },
        "permissions": [
            "android.permission.READ_CALENDAR"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.provider.CalendarContract.Instances",
            "name": "CONTENT_URI",
            "type": "field"
        },
        "permissions": [
            "android.permission.READ_CALENDAR"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.provider.CalendarContract.Reminders",
            "name": "CONTENT_URI",
            "type": "field"
        },
        "permissions": [
            "android.permission.READ_CALENDAR"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.provider.CalendarContract.SyncState",
            "name": "CONTENT_URI",
            "type": "field"
        },
        "permissions": [
            "android.permission.READ_CALENDAR"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.provider.CallLog",
            "name": "CONTENT_URI",
            "type": "field"
        },
        "permissions": [
            "android.permission.READ_CALL_LOG"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.provider.CallLog.Calls",
            "name": "CONTENT_FILTER_URI",
            "type": "field"
        },
        "permissions": [
            "android.permission.READ_CALL_LOG"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.provider.CallLog.Calls",
            "name": "CONTENT_URI",
            "type": "field"
        },
        "permissions": [
            "android.permission.READ_CALL_LOG"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.provider.CallLog.Calls",
            "name": "CONTENT_URI_WITH_VOICEMAIL",
            "type": "field"
        },
        "permissions": [
            "android.permission.READ_CALL_LOG",
            "com.android.voicemail.permission.READ_VOICEMAIL"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.provider.UserDictionary",
            "name": "CONTENT_URI",
            "type": "field"
        },
        "permissions": [
            "android.permission.READ_USER_DICTIONARY"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.provider.UserDictionary.Words",
            "name": "CONTENT_URI",
            "type": "field"
        },
        "permissions": [
            "android.permission.READ_USER_DICTIONARY"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telecom.TelecomManager",
            "name": "getAdnUriForPhoneAccount",
            "type": "method",
            "args": [
                "android.telecom.PhoneAccountHandle"
            ],
            "return_value": "android.net.Uri",
            "signature": "(Landroid/telecom/PhoneAccountHandle;)Landroid/net/Uri;",
            "dalvik_invoke": "Landroid/telecom/TelecomManager;->getAdnUriForPhoneAccount(Landroid/telecom/PhoneAccountHandle;)Landroid/net/Uri;"
        },
        "permissions": [
            "android.permission.MODIFY_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telecom.TelecomManager",
            "name": "getDefaultOutgoingPhoneAccount",
            "type": "method",
            "args": [
                "java.lang.String"
            ],
            "return_value": "android.telecom.PhoneAccountHandle",
            "signature": "(Ljava/lang/String;)Landroid/telecom/PhoneAccountHandle;",
            "dalvik_invoke": "Landroid/telecom/TelecomManager;->getDefaultOutgoingPhoneAccount(Ljava/lang/String;)Landroid/telecom/PhoneAccountHandle;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telecom.TelecomManager",
            "name": "handleMmi",
            "type": "method",
            "args": [
                "java.lang.String"
            ],
            "return_value": "boolean",
            "signature": "(Ljava/lang/String;)Z",
            "dalvik_invoke": "Landroid/telecom/TelecomManager;->handleMmi(Ljava/lang/String;)Z"
        },
        "permissions": [
            "android.permission.MODIFY_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telecom.TelecomManager",
            "name": "handleMmi",
            "type": "method",
            "args": [
                "java.lang.String",
                "android.telecom.PhoneAccountHandle"
            ],
            "return_value": "boolean",
            "signature": "(Ljava/lang/String;Landroid/telecom/PhoneAccountHandle;)Z",
            "dalvik_invoke": "Landroid/telecom/TelecomManager;->handleMmi(Ljava/lang/String;Landroid/telecom/PhoneAccountHandle;)Z"
        },
        "permissions": [
            "android.permission.MODIFY_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telecom.TelecomManager",
            "name": "isInCall",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/telecom/TelecomManager;->isInCall()Z"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telecom.TelecomManager",
            "name": "isInManagedCall",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/telecom/TelecomManager;->isInManagedCall()Z"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telecom.TelecomManager",
            "name": "isVoiceMailNumber",
            "type": "method",
            "args": [
                "android.telecom.PhoneAccountHandle",
                "java.lang.String"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/telecom/PhoneAccountHandle;Ljava/lang/String;)Z",
            "dalvik_invoke": "Landroid/telecom/TelecomManager;->isVoiceMailNumber(Landroid/telecom/PhoneAccountHandle;Ljava/lang/String;)Z"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telecom.TelecomManager",
            "name": "getLine1Number",
            "type": "method",
            "args": [
                "android.telecom.PhoneAccountHandle"
            ],
            "return_value": "java.lang.String",
            "signature": "(Landroid/telecom/PhoneAccountHandle;)Ljava/lang/String;",
            "dalvik_invoke": "Landroid/telecom/TelecomManager;->getLine1Number(Landroid/telecom/PhoneAccountHandle;)Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telecom.TelecomManager",
            "name": "getVoiceMailNumber",
            "type": "method",
            "args": [
                "android.telecom.PhoneAccountHandle"
            ],
            "return_value": "java.lang.String",
            "signature": "(Landroid/telecom/PhoneAccountHandle;)Ljava/lang/String;",
            "dalvik_invoke": "Landroid/telecom/TelecomManager;->getVoiceMailNumber(Landroid/telecom/PhoneAccountHandle;)Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telecom.TelecomManager",
            "name": "getCallCapablePhoneAccounts",
            "type": "method",
            "args": [],
            "return_value": "java.util.List<android.telecom.PhoneAccountHandle>",
            "signature": "()Ljava/util/List;",
            "dalvik_invoke": "Landroid/telecom/TelecomManager;->getCallCapablePhoneAccounts()Ljava/util/List;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telecom.TelecomManager",
            "name": "getSelfManagedPhoneAccounts",
            "type": "method",
            "args": [],
            "return_value": "java.util.List<android.telecom.PhoneAccountHandle>",
            "signature": "()Ljava/util/List;",
            "dalvik_invoke": "Landroid/telecom/TelecomManager;->getSelfManagedPhoneAccounts()Ljava/util/List;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telecom.TelecomManager",
            "name": "acceptRingingCall",
            "type": "method",
            "args": [],
            "return_value": "void",
            "signature": "()V",
            "dalvik_invoke": "Landroid/telecom/TelecomManager;->acceptRingingCall()V"
        },
        "permissions": [
            "android.permission.ANSWER_PHONE_CALLS",
            "android.permission.MODIFY_PHONE_STATE"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.telecom.TelecomManager",
            "name": "acceptRingingCall",
            "type": "method",
            "args": [
                "int"
            ],
            "return_value": "void",
            "signature": "(I)V",
            "dalvik_invoke": "Landroid/telecom/TelecomManager;->acceptRingingCall(I)V"
        },
        "permissions": [
            "android.permission.ANSWER_PHONE_CALLS",
            "android.permission.MODIFY_PHONE_STATE"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.telecom.TelecomManager",
            "name": "cancelMissedCallsNotification",
            "type": "method",
            "args": [],
            "return_value": "void",
            "signature": "()V",
            "dalvik_invoke": "Landroid/telecom/TelecomManager;->cancelMissedCallsNotification()V"
        },
        "permissions": [
            "android.permission.MODIFY_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telecom.TelecomManager",
            "name": "placeCall",
            "type": "method",
            "args": [
                "android.net.Uri",
                "android.os.Bundle"
            ],
            "return_value": "void",
            "signature": "(Landroid/net/Uri;Landroid/os/Bundle;)V",
            "dalvik_invoke": "Landroid/telecom/TelecomManager;->placeCall(Landroid/net/Uri;Landroid/os/Bundle;)V"
        },
        "permissions": [
            "android.permission.CALL_PHONE",
            "android.permission.MANAGE_OWN_CALLS"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.telecom.TelecomManager",
            "name": "showInCallScreen",
            "type": "method",
            "args": [
                "boolean"
            ],
            "return_value": "void",
            "signature": "(Z)V",
            "dalvik_invoke": "Landroid/telecom/TelecomManager;->showInCallScreen(Z)V"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telecom.TelecomManager",
            "name": "silenceRinger",
            "type": "method",
            "args": [],
            "return_value": "void",
            "signature": "()V",
            "dalvik_invoke": "Landroid/telecom/TelecomManager;->silenceRinger()V"
        },
        "permissions": [
            "android.permission.MODIFY_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "ACTION_PHONE_STATE_CHANGED",
            "type": "field"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getCarrierConfig",
            "type": "method",
            "args": [],
            "return_value": "android.os.PersistableBundle",
            "signature": "()Landroid/os/PersistableBundle;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getCarrierConfig()Landroid/os/PersistableBundle;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getCellLocation",
            "type": "method",
            "args": [],
            "return_value": "android.telephony.CellLocation",
            "signature": "()Landroid/telephony/CellLocation;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getCellLocation()Landroid/telephony/CellLocation;"
        },
        "permissions": [
            "android.permission.ACCESS_COARSE_LOCATION",
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getServiceState",
            "type": "method",
            "args": [],
            "return_value": "android.telephony.ServiceState",
            "signature": "()Landroid/telephony/ServiceState;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getServiceState()Landroid/telephony/ServiceState;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getDataNetworkType",
            "type": "method",
            "args": [],
            "return_value": "int",
            "signature": "()I",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getDataNetworkType()I"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getVoiceNetworkType",
            "type": "method",
            "args": [],
            "return_value": "int",
            "signature": "()I",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getVoiceNetworkType()I"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getDeviceId",
            "type": "method",
            "args": [],
            "return_value": "java.lang.String",
            "signature": "()Ljava/lang/String;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getDeviceId()Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getDeviceId",
            "type": "method",
            "args": [
                "int"
            ],
            "return_value": "java.lang.String",
            "signature": "(I)Ljava/lang/String;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getDeviceId(I)Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getDeviceSoftwareVersion",
            "type": "method",
            "args": [],
            "return_value": "java.lang.String",
            "signature": "()Ljava/lang/String;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getDeviceSoftwareVersion()Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getGroupIdLevel1",
            "type": "method",
            "args": [],
            "return_value": "java.lang.String",
            "signature": "()Ljava/lang/String;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getGroupIdLevel1()Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getImei",
            "type": "method",
            "args": [],
            "return_value": "java.lang.String",
            "signature": "()Ljava/lang/String;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getImei()Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getImei",
            "type": "method",
            "args": [
                "int"
            ],
            "return_value": "java.lang.String",
            "signature": "(I)Ljava/lang/String;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getImei(I)Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getLine1Number",
            "type": "method",
            "args": [],
            "return_value": "java.lang.String",
            "signature": "()Ljava/lang/String;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getLine1Number()Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE",
            "android.permission.READ_SMS",
            "android.permission.READ_PHONE_NUMBERS"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getMeid",
            "type": "method",
            "args": [],
            "return_value": "java.lang.String",
            "signature": "()Ljava/lang/String;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getMeid()Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getMeid",
            "type": "method",
            "args": [
                "int"
            ],
            "return_value": "java.lang.String",
            "signature": "(I)Ljava/lang/String;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getMeid(I)Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getSimSerialNumber",
            "type": "method",
            "args": [],
            "return_value": "java.lang.String",
            "signature": "()Ljava/lang/String;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getSimSerialNumber()Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getSubscriberId",
            "type": "method",
            "args": [],
            "return_value": "java.lang.String",
            "signature": "()Ljava/lang/String;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getSubscriberId()Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getVisualVoicemailPackageName",
            "type": "method",
            "args": [],
            "return_value": "java.lang.String",
            "signature": "()Ljava/lang/String;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getVisualVoicemailPackageName()Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getVoiceMailAlphaTag",
            "type": "method",
            "args": [],
            "return_value": "java.lang.String",
            "signature": "()Ljava/lang/String;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getVoiceMailAlphaTag()Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getVoiceMailNumber",
            "type": "method",
            "args": [],
            "return_value": "java.lang.String",
            "signature": "()Ljava/lang/String;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getVoiceMailNumber()Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getForbiddenPlmns",
            "type": "method",
            "args": [],
            "return_value": "java.lang.String[]",
            "signature": "()[Ljava/lang/String;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getForbiddenPlmns()[Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getAllCellInfo",
            "type": "method",
            "args": [],
            "return_value": "java.util.List<android.telephony.CellInfo>",
            "signature": "()Ljava/util/List;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getAllCellInfo()Ljava/util/List;"
        },
        "permissions": [
            "android.permission.ACCESS_COARSE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getNeighboringCellInfo",
            "type": "method",
            "args": [],
            "return_value": "java.util.List<android.telephony.NeighboringCellInfo>",
            "signature": "()Ljava/util/List;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getNeighboringCellInfo()Ljava/util/List;"
        },
        "permissions": [
            "android.permission.ACCESS_COARSE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "sendUssdRequest",
            "type": "method",
            "args": [
                "java.lang.String",
                "android.telephony.TelephonyManager.UssdResponseCallback",
                "android.os.Handler"
            ],
            "return_value": "void",
            "signature": "(Ljava/lang/String;Landroid/telephony/TelephonyManager/UssdResponseCallback;Landroid/os/Handler;)V",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->sendUssdRequest(Ljava/lang/String;Landroid/telephony/TelephonyManager/UssdResponseCallback;Landroid/os/Handler;)V"
        },
        "permissions": [
            "android.permission.CALL_PHONE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "setDataEnabled",
            "type": "method",
            "args": [
                "boolean"
            ],
            "return_value": "void",
            "signature": "(Z)V",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->setDataEnabled(Z)V"
        },
        "permissions": [
            "android.permission.MODIFY_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.view.inputmethod.InputMethodManager",
            "name": "setCurrentInputMethodSubtype",
            "type": "method",
            "args": [
                "android.view.inputmethod.InputMethodSubtype"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/view/inputmethod/InputMethodSubtype;)Z",
            "dalvik_invoke": "Landroid/view/inputmethod/InputMethodManager;->setCurrentInputMethodSubtype(Landroid/view/inputmethod/InputMethodSubtype;)Z"
        },
        "permissions": [
            "android.permission.WRITE_SECURE_SETTINGS"
        ],
        "any_of": false
    }
]