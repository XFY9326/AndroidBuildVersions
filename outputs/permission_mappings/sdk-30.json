[
    {
        "api": {
            "class_name": "android.accessibilityservice.AccessibilityService",
            "name": "getFingerprintGestureController",
            "type": "method",
            "args": [],
            "return_value": "android.accessibilityservice.FingerprintGestureController",
            "signature": "()Landroid/accessibilityservice/FingerprintGestureController;",
            "dalvik_invoke": "Landroid/accessibilityservice/AccessibilityService;->getFingerprintGestureController()Landroid/accessibilityservice/FingerprintGestureController;"
        },
        "permissions": [
            "android.permission.USE_FINGERPRINT"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "getAccounts",
            "type": "method",
            "args": [],
            "return_value": "android.accounts.Account[]",
            "signature": "()[Landroid/accounts/Account;",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->getAccounts()[Landroid/accounts/Account;"
        },
        "permissions": [
            "android.permission.GET_ACCOUNTS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "getAccountsByType",
            "type": "method",
            "args": [
                "java.lang.String"
            ],
            "return_value": "android.accounts.Account[]",
            "signature": "(Ljava/lang/String;)[Landroid/accounts/Account;",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->getAccountsByType(Ljava/lang/String;)[Landroid/accounts/Account;"
        },
        "permissions": [
            "android.permission.GET_ACCOUNTS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "addAccountExplicitly",
            "type": "method",
            "args": [
                "android.accounts.Account",
                "java.lang.String",
                "android.os.Bundle"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;)Z",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->addAccountExplicitly(Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;)Z"
        },
        "permissions": [
            "android.permission.AUTHENTICATE_ACCOUNTS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "notifyAccountAuthenticated",
            "type": "method",
            "args": [
                "android.accounts.Account"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/accounts/Account;)Z",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->notifyAccountAuthenticated(Landroid/accounts/Account;)Z"
        },
        "permissions": [
            "android.permission.AUTHENTICATE_ACCOUNTS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "removeAccountExplicitly",
            "type": "method",
            "args": [
                "android.accounts.Account"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/accounts/Account;)Z",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->removeAccountExplicitly(Landroid/accounts/Account;)Z"
        },
        "permissions": [
            "android.permission.AUTHENTICATE_ACCOUNTS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "blockingGetAuthToken",
            "type": "method",
            "args": [
                "android.accounts.Account",
                "java.lang.String",
                "boolean"
            ],
            "return_value": "java.lang.String",
            "signature": "(Landroid/accounts/Account;Ljava/lang/String;Z)Ljava/lang/String;",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->blockingGetAuthToken(Landroid/accounts/Account;Ljava/lang/String;Z)Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.USE_CREDENTIALS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "getPassword",
            "type": "method",
            "args": [
                "android.accounts.Account"
            ],
            "return_value": "java.lang.String",
            "signature": "(Landroid/accounts/Account;)Ljava/lang/String;",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->getPassword(Landroid/accounts/Account;)Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.AUTHENTICATE_ACCOUNTS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "getUserData",
            "type": "method",
            "args": [
                "android.accounts.Account",
                "java.lang.String"
            ],
            "return_value": "java.lang.String",
            "signature": "(Landroid/accounts/Account;Ljava/lang/String;)Ljava/lang/String;",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->getUserData(Landroid/accounts/Account;Ljava/lang/String;)Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.AUTHENTICATE_ACCOUNTS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "peekAuthToken",
            "type": "method",
            "args": [
                "android.accounts.Account",
                "java.lang.String"
            ],
            "return_value": "java.lang.String",
            "signature": "(Landroid/accounts/Account;Ljava/lang/String;)Ljava/lang/String;",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->peekAuthToken(Landroid/accounts/Account;Ljava/lang/String;)Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.AUTHENTICATE_ACCOUNTS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "addOnAccountsUpdatedListener",
            "type": "method",
            "args": [
                "android.accounts.OnAccountsUpdateListener",
                "android.os.Handler",
                "boolean"
            ],
            "return_value": "void",
            "signature": "(Landroid/accounts/OnAccountsUpdateListener;Landroid/os/Handler;Z)V",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->addOnAccountsUpdatedListener(Landroid/accounts/OnAccountsUpdateListener;Landroid/os/Handler;Z)V"
        },
        "permissions": [
            "android.permission.GET_ACCOUNTS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "clearPassword",
            "type": "method",
            "args": [
                "android.accounts.Account"
            ],
            "return_value": "void",
            "signature": "(Landroid/accounts/Account;)V",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->clearPassword(Landroid/accounts/Account;)V"
        },
        "permissions": [
            "android.permission.MANAGE_ACCOUNTS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "invalidateAuthToken",
            "type": "method",
            "args": [
                "java.lang.String",
                "java.lang.String"
            ],
            "return_value": "void",
            "signature": "(Ljava/lang/String;Ljava/lang/String;)V",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->invalidateAuthToken(Ljava/lang/String;Ljava/lang/String;)V"
        },
        "permissions": [
            "android.permission.MANAGE_ACCOUNTS",
            "android.permission.USE_CREDENTIALS"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "setAuthToken",
            "type": "method",
            "args": [
                "android.accounts.Account",
                "java.lang.String",
                "java.lang.String"
            ],
            "return_value": "void",
            "signature": "(Landroid/accounts/Account;Ljava/lang/String;Ljava/lang/String;)V",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->setAuthToken(Landroid/accounts/Account;Ljava/lang/String;Ljava/lang/String;)V"
        },
        "permissions": [
            "android.permission.AUTHENTICATE_ACCOUNTS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "setPassword",
            "type": "method",
            "args": [
                "android.accounts.Account",
                "java.lang.String"
            ],
            "return_value": "void",
            "signature": "(Landroid/accounts/Account;Ljava/lang/String;)V",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->setPassword(Landroid/accounts/Account;Ljava/lang/String;)V"
        },
        "permissions": [
            "android.permission.AUTHENTICATE_ACCOUNTS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.accounts.AccountManager",
            "name": "setUserData",
            "type": "method",
            "args": [
                "android.accounts.Account",
                "java.lang.String",
                "java.lang.String"
            ],
            "return_value": "void",
            "signature": "(Landroid/accounts/Account;Ljava/lang/String;Ljava/lang/String;)V",
            "dalvik_invoke": "Landroid/accounts/AccountManager;->setUserData(Landroid/accounts/Account;Ljava/lang/String;Ljava/lang/String;)V"
        },
        "permissions": [
            "android.permission.AUTHENTICATE_ACCOUNTS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.app.ActivityManager",
            "name": "dumpPackageState",
            "type": "method",
            "args": [
                "java.io.FileDescriptor",
                "java.lang.String"
            ],
            "return_value": "void",
            "signature": "(Ljava/io/FileDescriptor;Ljava/lang/String;)V",
            "dalvik_invoke": "Landroid/app/ActivityManager;->dumpPackageState(Ljava/io/FileDescriptor;Ljava/lang/String;)V"
        },
        "permissions": [
            "android.permission.DUMP"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.app.ActivityManager",
            "name": "killBackgroundProcesses",
            "type": "method",
            "args": [
                "java.lang.String"
            ],
            "return_value": "void",
            "signature": "(Ljava/lang/String;)V",
            "dalvik_invoke": "Landroid/app/ActivityManager;->killBackgroundProcesses(Ljava/lang/String;)V"
        },
        "permissions": [
            "android.permission.KILL_BACKGROUND_PROCESSES"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.app.ActivityManager",
            "name": "moveTaskToFront",
            "type": "method",
            "args": [
                "int",
                "int"
            ],
            "return_value": "void",
            "signature": "(II)V",
            "dalvik_invoke": "Landroid/app/ActivityManager;->moveTaskToFront(II)V"
        },
        "permissions": [
            "android.permission.REORDER_TASKS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.app.ActivityManager",
            "name": "moveTaskToFront",
            "type": "method",
            "args": [
                "int",
                "int",
                "android.os.Bundle"
            ],
            "return_value": "void",
            "signature": "(IILandroid/os/Bundle;)V",
            "dalvik_invoke": "Landroid/app/ActivityManager;->moveTaskToFront(IILandroid/os/Bundle;)V"
        },
        "permissions": [
            "android.permission.REORDER_TASKS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.app.AlarmManager",
            "name": "setTime",
            "type": "method",
            "args": [
                "long"
            ],
            "return_value": "void",
            "signature": "(J)V",
            "dalvik_invoke": "Landroid/app/AlarmManager;->setTime(J)V"
        },
        "permissions": [
            "android.permission.SET_TIME"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.app.AlarmManager",
            "name": "setTimeZone",
            "type": "method",
            "args": [
                "java.lang.String"
            ],
            "return_value": "void",
            "signature": "(Ljava/lang/String;)V",
            "dalvik_invoke": "Landroid/app/AlarmManager;->setTimeZone(Ljava/lang/String;)V"
        },
        "permissions": [
            "android.permission.SET_TIME_ZONE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.app.KeyguardManager",
            "name": "exitKeyguardSecurely",
            "type": "method",
            "args": [
                "android.app.KeyguardManager.OnKeyguardExitResult"
            ],
            "return_value": "void",
            "signature": "(Landroid/app/KeyguardManager/OnKeyguardExitResult;)V",
            "dalvik_invoke": "Landroid/app/KeyguardManager;->exitKeyguardSecurely(Landroid/app/KeyguardManager/OnKeyguardExitResult;)V"
        },
        "permissions": [
            "android.permission.DISABLE_KEYGUARD"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.app.KeyguardManager.KeyguardLock",
            "name": "disableKeyguard",
            "type": "method",
            "args": [],
            "return_value": "void",
            "signature": "()V",
            "dalvik_invoke": "Landroid/app/KeyguardManager/KeyguardLock;->disableKeyguard()V"
        },
        "permissions": [
            "android.permission.DISABLE_KEYGUARD"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.app.KeyguardManager.KeyguardLock",
            "name": "reenableKeyguard",
            "type": "method",
            "args": [],
            "return_value": "void",
            "signature": "()V",
            "dalvik_invoke": "Landroid/app/KeyguardManager/KeyguardLock;->reenableKeyguard()V"
        },
        "permissions": [
            "android.permission.DISABLE_KEYGUARD"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.app.WallpaperManager",
            "name": "getFastDrawable",
            "type": "method",
            "args": [],
            "return_value": "android.graphics.drawable.Drawable",
            "signature": "()Landroid/graphics/drawable/Drawable;",
            "dalvik_invoke": "Landroid/app/WallpaperManager;->getFastDrawable()Landroid/graphics/drawable/Drawable;"
        },
        "permissions": [
            "android.permission.READ_EXTERNAL_STORAGE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.app.WallpaperManager",
            "name": "peekFastDrawable",
            "type": "method",
            "args": [],
            "return_value": "android.graphics.drawable.Drawable",
            "signature": "()Landroid/graphics/drawable/Drawable;",
            "dalvik_invoke": "Landroid/app/WallpaperManager;->peekFastDrawable()Landroid/graphics/drawable/Drawable;"
        },
        "permissions": [
            "android.permission.READ_EXTERNAL_STORAGE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.app.WallpaperManager",
            "name": "getWallpaperFile",
            "type": "method",
            "args": [
                "int"
            ],
            "return_value": "android.os.ParcelFileDescriptor",
            "signature": "(I)Landroid/os/ParcelFileDescriptor;",
            "dalvik_invoke": "Landroid/app/WallpaperManager;->getWallpaperFile(I)Landroid/os/ParcelFileDescriptor;"
        },
        "permissions": [
            "android.permission.READ_EXTERNAL_STORAGE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.app.WallpaperManager",
            "name": "setBitmap",
            "type": "method",
            "args": [
                "android.graphics.Bitmap",
                "android.graphics.Rect",
                "boolean"
            ],
            "return_value": "int",
            "signature": "(Landroid/graphics/Bitmap;Landroid/graphics/Rect;Z)I",
            "dalvik_invoke": "Landroid/app/WallpaperManager;->setBitmap(Landroid/graphics/Bitmap;Landroid/graphics/Rect;Z)I"
        },
        "permissions": [
            "android.permission.SET_WALLPAPER"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.app.WallpaperManager",
            "name": "setBitmap",
            "type": "method",
            "args": [
                "android.graphics.Bitmap",
                "android.graphics.Rect",
                "boolean",
                "int"
            ],
            "return_value": "int",
            "signature": "(Landroid/graphics/Bitmap;Landroid/graphics/Rect;ZI)I",
            "dalvik_invoke": "Landroid/app/WallpaperManager;->setBitmap(Landroid/graphics/Bitmap;Landroid/graphics/Rect;ZI)I"
        },
        "permissions": [
            "android.permission.SET_WALLPAPER"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.app.WallpaperManager",
            "name": "setResource",
            "type": "method",
            "args": [
                "int",
                "int"
            ],
            "return_value": "int",
            "signature": "(II)I",
            "dalvik_invoke": "Landroid/app/WallpaperManager;->setResource(II)I"
        },
        "permissions": [
            "android.permission.SET_WALLPAPER"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.app.WallpaperManager",
            "name": "setStream",
            "type": "method",
            "args": [
                "java.io.InputStream",
                "android.graphics.Rect",
                "boolean"
            ],
            "return_value": "int",
            "signature": "(Ljava/io/InputStream;Landroid/graphics/Rect;Z)I",
            "dalvik_invoke": "Landroid/app/WallpaperManager;->setStream(Ljava/io/InputStream;Landroid/graphics/Rect;Z)I"
        },
        "permissions": [
            "android.permission.SET_WALLPAPER"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.app.WallpaperManager",
            "name": "setStream",
            "type": "method",
            "args": [
                "java.io.InputStream",
                "android.graphics.Rect",
                "boolean",
                "int"
            ],
            "return_value": "int",
            "signature": "(Ljava/io/InputStream;Landroid/graphics/Rect;ZI)I",
            "dalvik_invoke": "Landroid/app/WallpaperManager;->setStream(Ljava/io/InputStream;Landroid/graphics/Rect;ZI)I"
        },
        "permissions": [
            "android.permission.SET_WALLPAPER"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.app.WallpaperManager",
            "name": "clear",
            "type": "method",
            "args": [],
            "return_value": "void",
            "signature": "()V",
            "dalvik_invoke": "Landroid/app/WallpaperManager;->clear()V"
        },
        "permissions": [
            "android.permission.SET_WALLPAPER"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.app.WallpaperManager",
            "name": "clear",
            "type": "method",
            "args": [
                "int"
            ],
            "return_value": "void",
            "signature": "(I)V",
            "dalvik_invoke": "Landroid/app/WallpaperManager;->clear(I)V"
        },
        "permissions": [
            "android.permission.SET_WALLPAPER"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.app.WallpaperManager",
            "name": "clearWallpaper",
            "type": "method",
            "args": [],
            "return_value": "void",
            "signature": "()V",
            "dalvik_invoke": "Landroid/app/WallpaperManager;->clearWallpaper()V"
        },
        "permissions": [
            "android.permission.SET_WALLPAPER"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.app.WallpaperManager",
            "name": "setBitmap",
            "type": "method",
            "args": [
                "android.graphics.Bitmap"
            ],
            "return_value": "void",
            "signature": "(Landroid/graphics/Bitmap;)V",
            "dalvik_invoke": "Landroid/app/WallpaperManager;->setBitmap(Landroid/graphics/Bitmap;)V"
        },
        "permissions": [
            "android.permission.SET_WALLPAPER"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.app.WallpaperManager",
            "name": "setDisplayPadding",
            "type": "method",
            "args": [
                "android.graphics.Rect"
            ],
            "return_value": "void",
            "signature": "(Landroid/graphics/Rect;)V",
            "dalvik_invoke": "Landroid/app/WallpaperManager;->setDisplayPadding(Landroid/graphics/Rect;)V"
        },
        "permissions": [
            "android.permission.SET_WALLPAPER_HINTS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.app.WallpaperManager",
            "name": "setResource",
            "type": "method",
            "args": [
                "int"
            ],
            "return_value": "void",
            "signature": "(I)V",
            "dalvik_invoke": "Landroid/app/WallpaperManager;->setResource(I)V"
        },
        "permissions": [
            "android.permission.SET_WALLPAPER"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.app.WallpaperManager",
            "name": "setStream",
            "type": "method",
            "args": [
                "java.io.InputStream"
            ],
            "return_value": "void",
            "signature": "(Ljava/io/InputStream;)V",
            "dalvik_invoke": "Landroid/app/WallpaperManager;->setStream(Ljava/io/InputStream;)V"
        },
        "permissions": [
            "android.permission.SET_WALLPAPER"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.app.admin.DevicePolicyManager",
            "name": "EXTRA_PASSWORD_COMPLEXITY",
            "type": "field"
        },
        "permissions": [
            "android.permission.REQUEST_PASSWORD_COMPLEXITY"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.app.admin.DevicePolicyManager",
            "name": "getPasswordComplexity",
            "type": "method",
            "args": [],
            "return_value": "int",
            "signature": "()I",
            "dalvik_invoke": "Landroid/app/admin/DevicePolicyManager;->getPasswordComplexity()I"
        },
        "permissions": [
            "android.permission.REQUEST_PASSWORD_COMPLEXITY"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.app.job.JobInfo.Builder",
            "name": "setPersisted",
            "type": "method",
            "args": [
                "boolean"
            ],
            "return_value": "android.app.job.JobInfo.Builder",
            "signature": "(Z)Landroid/app/job/JobInfo/Builder;",
            "dalvik_invoke": "Landroid/app/job/JobInfo/Builder;->setPersisted(Z)Landroid/app/job/JobInfo/Builder;"
        },
        "permissions": [
            "android.permission.RECEIVE_BOOT_COMPLETED"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothAdapter",
            "name": "listenUsingInsecureL2capChannel",
            "type": "method",
            "args": [],
            "return_value": "android.bluetooth.BluetoothServerSocket",
            "signature": "()Landroid/bluetooth/BluetoothServerSocket;",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothAdapter;->listenUsingInsecureL2capChannel()Landroid/bluetooth/BluetoothServerSocket;"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothAdapter",
            "name": "listenUsingInsecureRfcommWithServiceRecord",
            "type": "method",
            "args": [
                "java.lang.String",
                "java.util.UUID"
            ],
            "return_value": "android.bluetooth.BluetoothServerSocket",
            "signature": "(Ljava/lang/String;Ljava/util/UUID;)Landroid/bluetooth/BluetoothServerSocket;",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothAdapter;->listenUsingInsecureRfcommWithServiceRecord(Ljava/lang/String;Ljava/util/UUID;)Landroid/bluetooth/BluetoothServerSocket;"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothAdapter",
            "name": "listenUsingL2capChannel",
            "type": "method",
            "args": [],
            "return_value": "android.bluetooth.BluetoothServerSocket",
            "signature": "()Landroid/bluetooth/BluetoothServerSocket;",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothAdapter;->listenUsingL2capChannel()Landroid/bluetooth/BluetoothServerSocket;"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothAdapter",
            "name": "listenUsingRfcommWithServiceRecord",
            "type": "method",
            "args": [
                "java.lang.String",
                "java.util.UUID"
            ],
            "return_value": "android.bluetooth.BluetoothServerSocket",
            "signature": "(Ljava/lang/String;Ljava/util/UUID;)Landroid/bluetooth/BluetoothServerSocket;",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothAdapter;->listenUsingRfcommWithServiceRecord(Ljava/lang/String;Ljava/util/UUID;)Landroid/bluetooth/BluetoothServerSocket;"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothAdapter",
            "name": "cancelDiscovery",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothAdapter;->cancelDiscovery()Z"
        },
        "permissions": [
            "android.permission.BLUETOOTH_ADMIN"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothAdapter",
            "name": "disable",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothAdapter;->disable()Z"
        },
        "permissions": [
            "android.permission.BLUETOOTH_ADMIN"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothAdapter",
            "name": "enable",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothAdapter;->enable()Z"
        },
        "permissions": [
            "android.permission.BLUETOOTH_ADMIN"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothAdapter",
            "name": "isDiscovering",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothAdapter;->isDiscovering()Z"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothAdapter",
            "name": "isEnabled",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothAdapter;->isEnabled()Z"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothAdapter",
            "name": "setName",
            "type": "method",
            "args": [
                "java.lang.String"
            ],
            "return_value": "boolean",
            "signature": "(Ljava/lang/String;)Z",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothAdapter;->setName(Ljava/lang/String;)Z"
        },
        "permissions": [
            "android.permission.BLUETOOTH_ADMIN"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothAdapter",
            "name": "startDiscovery",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothAdapter;->startDiscovery()Z"
        },
        "permissions": [
            "android.permission.BLUETOOTH_ADMIN"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothAdapter",
            "name": "startLeScan",
            "type": "method",
            "args": [
                "android.bluetooth.BluetoothAdapter.LeScanCallback"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/bluetooth/BluetoothAdapter/LeScanCallback;)Z",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothAdapter;->startLeScan(Landroid/bluetooth/BluetoothAdapter/LeScanCallback;)Z"
        },
        "permissions": [
            "android.permission.BLUETOOTH_ADMIN"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothAdapter",
            "name": "startLeScan",
            "type": "method",
            "args": [
                "java.util.UUID[]",
                "android.bluetooth.BluetoothAdapter.LeScanCallback"
            ],
            "return_value": "boolean",
            "signature": "([Ljava/util/UUID;Landroid/bluetooth/BluetoothAdapter/LeScanCallback;)Z",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothAdapter;->startLeScan([Ljava/util/UUID;Landroid/bluetooth/BluetoothAdapter/LeScanCallback;)Z"
        },
        "permissions": [
            "android.permission.BLUETOOTH_ADMIN"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothAdapter",
            "name": "getProfileConnectionState",
            "type": "method",
            "args": [
                "int"
            ],
            "return_value": "int",
            "signature": "(I)I",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothAdapter;->getProfileConnectionState(I)I"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothAdapter",
            "name": "getScanMode",
            "type": "method",
            "args": [],
            "return_value": "int",
            "signature": "()I",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothAdapter;->getScanMode()I"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothAdapter",
            "name": "getState",
            "type": "method",
            "args": [],
            "return_value": "int",
            "signature": "()I",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothAdapter;->getState()I"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothAdapter",
            "name": "getAddress",
            "type": "method",
            "args": [],
            "return_value": "java.lang.String",
            "signature": "()Ljava/lang/String;",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothAdapter;->getAddress()Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothAdapter",
            "name": "getBondedDevices",
            "type": "method",
            "args": [],
            "return_value": "java.util.Set<android.bluetooth.BluetoothDevice>",
            "signature": "()Ljava/util/Set;",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothAdapter;->getBondedDevices()Ljava/util/Set;"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothAdapter",
            "name": "stopLeScan",
            "type": "method",
            "args": [
                "android.bluetooth.BluetoothAdapter.LeScanCallback"
            ],
            "return_value": "void",
            "signature": "(Landroid/bluetooth/BluetoothAdapter/LeScanCallback;)V",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothAdapter;->stopLeScan(Landroid/bluetooth/BluetoothAdapter/LeScanCallback;)V"
        },
        "permissions": [
            "android.permission.BLUETOOTH_ADMIN"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothDevice",
            "name": "getBluetoothClass",
            "type": "method",
            "args": [],
            "return_value": "android.bluetooth.BluetoothClass",
            "signature": "()Landroid/bluetooth/BluetoothClass;",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothDevice;->getBluetoothClass()Landroid/bluetooth/BluetoothClass;"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothDevice",
            "name": "createInsecureL2capChannel",
            "type": "method",
            "args": [
                "int"
            ],
            "return_value": "android.bluetooth.BluetoothSocket",
            "signature": "(I)Landroid/bluetooth/BluetoothSocket;",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothDevice;->createInsecureL2capChannel(I)Landroid/bluetooth/BluetoothSocket;"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothDevice",
            "name": "createInsecureRfcommSocketToServiceRecord",
            "type": "method",
            "args": [
                "java.util.UUID"
            ],
            "return_value": "android.bluetooth.BluetoothSocket",
            "signature": "(Ljava/util/UUID;)Landroid/bluetooth/BluetoothSocket;",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothDevice;->createInsecureRfcommSocketToServiceRecord(Ljava/util/UUID;)Landroid/bluetooth/BluetoothSocket;"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothDevice",
            "name": "createL2capChannel",
            "type": "method",
            "args": [
                "int"
            ],
            "return_value": "android.bluetooth.BluetoothSocket",
            "signature": "(I)Landroid/bluetooth/BluetoothSocket;",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothDevice;->createL2capChannel(I)Landroid/bluetooth/BluetoothSocket;"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothDevice",
            "name": "createRfcommSocketToServiceRecord",
            "type": "method",
            "args": [
                "java.util.UUID"
            ],
            "return_value": "android.bluetooth.BluetoothSocket",
            "signature": "(Ljava/util/UUID;)Landroid/bluetooth/BluetoothSocket;",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothDevice;->createRfcommSocketToServiceRecord(Ljava/util/UUID;)Landroid/bluetooth/BluetoothSocket;"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothDevice",
            "name": "getUuids",
            "type": "method",
            "args": [],
            "return_value": "android.os.ParcelUuid[]",
            "signature": "()[Landroid/os/ParcelUuid;",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothDevice;->getUuids()[Landroid/os/ParcelUuid;"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothDevice",
            "name": "createBond",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothDevice;->createBond()Z"
        },
        "permissions": [
            "android.permission.BLUETOOTH_ADMIN"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothDevice",
            "name": "fetchUuidsWithSdp",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothDevice;->fetchUuidsWithSdp()Z"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothDevice",
            "name": "setPairingConfirmation",
            "type": "method",
            "args": [
                "boolean"
            ],
            "return_value": "boolean",
            "signature": "(Z)Z",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothDevice;->setPairingConfirmation(Z)Z"
        },
        "permissions": [
            "android.permission.BLUETOOTH_PRIVILEGED"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothDevice",
            "name": "getBondState",
            "type": "method",
            "args": [],
            "return_value": "int",
            "signature": "()I",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothDevice;->getBondState()I"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothDevice",
            "name": "getType",
            "type": "method",
            "args": [],
            "return_value": "int",
            "signature": "()I",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothDevice;->getType()I"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothDevice",
            "name": "getAlias",
            "type": "method",
            "args": [],
            "return_value": "java.lang.String",
            "signature": "()Ljava/lang/String;",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothDevice;->getAlias()Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothDevice",
            "name": "getName",
            "type": "method",
            "args": [],
            "return_value": "java.lang.String",
            "signature": "()Ljava/lang/String;",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothDevice;->getName()Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothManager",
            "name": "getConnectionState",
            "type": "method",
            "args": [
                "android.bluetooth.BluetoothDevice",
                "int"
            ],
            "return_value": "int",
            "signature": "(Landroid/bluetooth/BluetoothDevice;I)I",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothManager;->getConnectionState(Landroid/bluetooth/BluetoothDevice;I)I"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothManager",
            "name": "getConnectedDevices",
            "type": "method",
            "args": [
                "int"
            ],
            "return_value": "java.util.List<android.bluetooth.BluetoothDevice>",
            "signature": "(I)Ljava/util/List;",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothManager;->getConnectedDevices(I)Ljava/util/List;"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothManager",
            "name": "getDevicesMatchingConnectionStates",
            "type": "method",
            "args": [
                "int",
                "int[]"
            ],
            "return_value": "java.util.List<android.bluetooth.BluetoothDevice>",
            "signature": "(I[I)Ljava/util/List;",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothManager;->getDevicesMatchingConnectionStates(I[I)Ljava/util/List;"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothProfile",
            "name": "getConnectionState",
            "type": "method",
            "args": [
                "android.bluetooth.BluetoothDevice"
            ],
            "return_value": "int",
            "signature": "(Landroid/bluetooth/BluetoothDevice;)I",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothProfile;->getConnectionState(Landroid/bluetooth/BluetoothDevice;)I"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothProfile",
            "name": "getConnectedDevices",
            "type": "method",
            "args": [],
            "return_value": "java.util.List<android.bluetooth.BluetoothDevice>",
            "signature": "()Ljava/util/List;",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothProfile;->getConnectedDevices()Ljava/util/List;"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.BluetoothProfile",
            "name": "getDevicesMatchingConnectionStates",
            "type": "method",
            "args": [
                "int[]"
            ],
            "return_value": "java.util.List<android.bluetooth.BluetoothDevice>",
            "signature": "([I)Ljava/util/List;",
            "dalvik_invoke": "Landroid/bluetooth/BluetoothProfile;->getDevicesMatchingConnectionStates([I)Ljava/util/List;"
        },
        "permissions": [
            "android.permission.BLUETOOTH"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.le.BluetoothLeScanner",
            "name": "startScan",
            "type": "method",
            "args": [
                "android.bluetooth.le.ScanCallback"
            ],
            "return_value": "void",
            "signature": "(Landroid/bluetooth/le/ScanCallback;)V",
            "dalvik_invoke": "Landroid/bluetooth/le/BluetoothLeScanner;->startScan(Landroid/bluetooth/le/ScanCallback;)V"
        },
        "permissions": [
            "android.permission.BLUETOOTH_ADMIN"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.le.BluetoothLeScanner",
            "name": "stopScan",
            "type": "method",
            "args": [
                "android.app.PendingIntent"
            ],
            "return_value": "void",
            "signature": "(Landroid/app/PendingIntent;)V",
            "dalvik_invoke": "Landroid/bluetooth/le/BluetoothLeScanner;->stopScan(Landroid/app/PendingIntent;)V"
        },
        "permissions": [
            "android.permission.BLUETOOTH_ADMIN"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.bluetooth.le.BluetoothLeScanner",
            "name": "stopScan",
            "type": "method",
            "args": [
                "android.bluetooth.le.ScanCallback"
            ],
            "return_value": "void",
            "signature": "(Landroid/bluetooth/le/ScanCallback;)V",
            "dalvik_invoke": "Landroid/bluetooth/le/BluetoothLeScanner;->stopScan(Landroid/bluetooth/le/ScanCallback;)V"
        },
        "permissions": [
            "android.permission.BLUETOOTH_ADMIN"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.Context",
            "name": "bindServiceAsUser",
            "type": "method",
            "args": [
                "android.content.Intent",
                "android.content.ServiceConnection",
                "int",
                "android.os.UserHandle"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/content/Intent;Landroid/content/ServiceConnection;ILandroid/os/UserHandle;)Z",
            "dalvik_invoke": "Landroid/content/Context;->bindServiceAsUser(Landroid/content/Intent;Landroid/content/ServiceConnection;ILandroid/os/UserHandle;)Z"
        },
        "permissions": [
            "android.permission.INTERACT_ACROSS_USERS",
            "android.permission.INTERACT_ACROSS_PROFILES"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.content.Context",
            "name": "removeStickyBroadcast",
            "type": "method",
            "args": [
                "android.content.Intent"
            ],
            "return_value": "void",
            "signature": "(Landroid/content/Intent;)V",
            "dalvik_invoke": "Landroid/content/Context;->removeStickyBroadcast(Landroid/content/Intent;)V"
        },
        "permissions": [
            "android.permission.BROADCAST_STICKY"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.Context",
            "name": "removeStickyBroadcastAsUser",
            "type": "method",
            "args": [
                "android.content.Intent",
                "android.os.UserHandle"
            ],
            "return_value": "void",
            "signature": "(Landroid/content/Intent;Landroid/os/UserHandle;)V",
            "dalvik_invoke": "Landroid/content/Context;->removeStickyBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V"
        },
        "permissions": [
            "android.permission.INTERACT_ACROSS_USERS",
            "android.permission.BROADCAST_STICKY"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.Context",
            "name": "sendBroadcastAsUser",
            "type": "method",
            "args": [
                "android.content.Intent",
                "android.os.UserHandle"
            ],
            "return_value": "void",
            "signature": "(Landroid/content/Intent;Landroid/os/UserHandle;)V",
            "dalvik_invoke": "Landroid/content/Context;->sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V"
        },
        "permissions": [
            "android.permission.INTERACT_ACROSS_USERS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.Context",
            "name": "sendBroadcastAsUser",
            "type": "method",
            "args": [
                "android.content.Intent",
                "android.os.UserHandle",
                "java.lang.String"
            ],
            "return_value": "void",
            "signature": "(Landroid/content/Intent;Landroid/os/UserHandle;Ljava/lang/String;)V",
            "dalvik_invoke": "Landroid/content/Context;->sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;Ljava/lang/String;)V"
        },
        "permissions": [
            "android.permission.INTERACT_ACROSS_USERS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.Context",
            "name": "sendOrderedBroadcastAsUser",
            "type": "method",
            "args": [
                "android.content.Intent",
                "android.os.UserHandle",
                "java.lang.String",
                "android.content.BroadcastReceiver",
                "android.os.Handler",
                "int",
                "java.lang.String",
                "android.os.Bundle"
            ],
            "return_value": "void",
            "signature": "(Landroid/content/Intent;Landroid/os/UserHandle;Ljava/lang/String;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V",
            "dalvik_invoke": "Landroid/content/Context;->sendOrderedBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;Ljava/lang/String;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V"
        },
        "permissions": [
            "android.permission.INTERACT_ACROSS_USERS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.Context",
            "name": "sendStickyBroadcast",
            "type": "method",
            "args": [
                "android.content.Intent"
            ],
            "return_value": "void",
            "signature": "(Landroid/content/Intent;)V",
            "dalvik_invoke": "Landroid/content/Context;->sendStickyBroadcast(Landroid/content/Intent;)V"
        },
        "permissions": [
            "android.permission.BROADCAST_STICKY"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.Context",
            "name": "sendStickyBroadcastAsUser",
            "type": "method",
            "args": [
                "android.content.Intent",
                "android.os.UserHandle"
            ],
            "return_value": "void",
            "signature": "(Landroid/content/Intent;Landroid/os/UserHandle;)V",
            "dalvik_invoke": "Landroid/content/Context;->sendStickyBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V"
        },
        "permissions": [
            "android.permission.INTERACT_ACROSS_USERS",
            "android.permission.BROADCAST_STICKY"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.Context",
            "name": "sendStickyOrderedBroadcast",
            "type": "method",
            "args": [
                "android.content.Intent",
                "android.content.BroadcastReceiver",
                "android.os.Handler",
                "int",
                "java.lang.String",
                "android.os.Bundle"
            ],
            "return_value": "void",
            "signature": "(Landroid/content/Intent;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V",
            "dalvik_invoke": "Landroid/content/Context;->sendStickyOrderedBroadcast(Landroid/content/Intent;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V"
        },
        "permissions": [
            "android.permission.BROADCAST_STICKY"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.Context",
            "name": "sendStickyOrderedBroadcastAsUser",
            "type": "method",
            "args": [
                "android.content.Intent",
                "android.os.UserHandle",
                "android.content.BroadcastReceiver",
                "android.os.Handler",
                "int",
                "java.lang.String",
                "android.os.Bundle"
            ],
            "return_value": "void",
            "signature": "(Landroid/content/Intent;Landroid/os/UserHandle;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V",
            "dalvik_invoke": "Landroid/content/Context;->sendStickyOrderedBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V"
        },
        "permissions": [
            "android.permission.INTERACT_ACROSS_USERS",
            "android.permission.BROADCAST_STICKY"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.Intent",
            "name": "ACTION_VIEW_PERMISSION_USAGE",
            "type": "field"
        },
        "permissions": [
            "android.permission.START_VIEW_PERMISSION_USAGE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.pm.CrossProfileApps",
            "name": "startActivity",
            "type": "method",
            "args": [
                "android.content.Intent",
                "android.os.UserHandle",
                "android.app.Activity"
            ],
            "return_value": "void",
            "signature": "(Landroid/content/Intent;Landroid/os/UserHandle;Landroid/app/Activity;)V",
            "dalvik_invoke": "Landroid/content/pm/CrossProfileApps;->startActivity(Landroid/content/Intent;Landroid/os/UserHandle;Landroid/app/Activity;)V"
        },
        "permissions": [
            "android.permission.INTERACT_ACROSS_PROFILES",
            "android.permission.INTERACT_ACROSS_USERS"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.content.pm.CrossProfileApps",
            "name": "startActivity",
            "type": "method",
            "args": [
                "android.content.Intent",
                "android.os.UserHandle",
                "android.app.Activity",
                "android.os.Bundle"
            ],
            "return_value": "void",
            "signature": "(Landroid/content/Intent;Landroid/os/UserHandle;Landroid/app/Activity;Landroid/os/Bundle;)V",
            "dalvik_invoke": "Landroid/content/pm/CrossProfileApps;->startActivity(Landroid/content/Intent;Landroid/os/UserHandle;Landroid/app/Activity;Landroid/os/Bundle;)V"
        },
        "permissions": [
            "android.permission.INTERACT_ACROSS_PROFILES",
            "android.permission.INTERACT_ACROSS_USERS"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.content.pm.PackageInstaller",
            "name": "installExistingPackage",
            "type": "method",
            "args": [
                "java.lang.String",
                "int",
                "android.content.IntentSender"
            ],
            "return_value": "void",
            "signature": "(Ljava/lang/String;ILandroid/content/IntentSender;)V",
            "dalvik_invoke": "Landroid/content/pm/PackageInstaller;->installExistingPackage(Ljava/lang/String;ILandroid/content/IntentSender;)V"
        },
        "permissions": [
            "android.permission.INSTALL_PACKAGES",
            "com.android.permission.INSTALL_EXISTING_PACKAGES"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.pm.PackageInstaller",
            "name": "uninstall",
            "type": "method",
            "args": [
                "android.content.pm.VersionedPackage",
                "android.content.IntentSender"
            ],
            "return_value": "void",
            "signature": "(Landroid/content/pm/VersionedPackage;Landroid/content/IntentSender;)V",
            "dalvik_invoke": "Landroid/content/pm/PackageInstaller;->uninstall(Landroid/content/pm/VersionedPackage;Landroid/content/IntentSender;)V"
        },
        "permissions": [
            "android.permission.DELETE_PACKAGES",
            "android.permission.REQUEST_DELETE_PACKAGES"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.content.pm.PackageInstaller",
            "name": "uninstall",
            "type": "method",
            "args": [
                "java.lang.String",
                "android.content.IntentSender"
            ],
            "return_value": "void",
            "signature": "(Ljava/lang/String;Landroid/content/IntentSender;)V",
            "dalvik_invoke": "Landroid/content/pm/PackageInstaller;->uninstall(Ljava/lang/String;Landroid/content/IntentSender;)V"
        },
        "permissions": [
            "android.permission.DELETE_PACKAGES",
            "android.permission.REQUEST_DELETE_PACKAGES"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.content.pm.PackageManager",
            "name": "addWhitelistedRestrictedPermission",
            "type": "method",
            "args": [
                "java.lang.String",
                "java.lang.String",
                "int"
            ],
            "return_value": "boolean",
            "signature": "(Ljava/lang/String;Ljava/lang/String;I)Z",
            "dalvik_invoke": "Landroid/content/pm/PackageManager;->addWhitelistedRestrictedPermission(Ljava/lang/String;Ljava/lang/String;I)Z"
        },
        "permissions": [
            "android.permission.WHITELIST_RESTRICTED_PERMISSIONS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.pm.PackageManager",
            "name": "isAutoRevokeWhitelisted",
            "type": "method",
            "args": [
                "java.lang.String"
            ],
            "return_value": "boolean",
            "signature": "(Ljava/lang/String;)Z",
            "dalvik_invoke": "Landroid/content/pm/PackageManager;->isAutoRevokeWhitelisted(Ljava/lang/String;)Z"
        },
        "permissions": [
            "android.permission.WHITELIST_AUTO_REVOKE_PERMISSIONS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.pm.PackageManager",
            "name": "removeWhitelistedRestrictedPermission",
            "type": "method",
            "args": [
                "java.lang.String",
                "java.lang.String",
                "int"
            ],
            "return_value": "boolean",
            "signature": "(Ljava/lang/String;Ljava/lang/String;I)Z",
            "dalvik_invoke": "Landroid/content/pm/PackageManager;->removeWhitelistedRestrictedPermission(Ljava/lang/String;Ljava/lang/String;I)Z"
        },
        "permissions": [
            "android.permission.WHITELIST_RESTRICTED_PERMISSIONS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.pm.PackageManager",
            "name": "setAutoRevokeWhitelisted",
            "type": "method",
            "args": [
                "java.lang.String",
                "boolean"
            ],
            "return_value": "boolean",
            "signature": "(Ljava/lang/String;Z)Z",
            "dalvik_invoke": "Landroid/content/pm/PackageManager;->setAutoRevokeWhitelisted(Ljava/lang/String;Z)Z"
        },
        "permissions": [
            "android.permission.WHITELIST_AUTO_REVOKE_PERMISSIONS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.pm.PackageManager",
            "name": "getWhitelistedRestrictedPermissions",
            "type": "method",
            "args": [
                "java.lang.String",
                "int"
            ],
            "return_value": "java.util.Set<java.lang.String>",
            "signature": "(Ljava/lang/String;I)Ljava/util/Set;",
            "dalvik_invoke": "Landroid/content/pm/PackageManager;->getWhitelistedRestrictedPermissions(Ljava/lang/String;I)Ljava/util/Set;"
        },
        "permissions": [
            "android.permission.WHITELIST_RESTRICTED_PERMISSIONS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.pm.PackageManager",
            "name": "setApplicationEnabledSetting",
            "type": "method",
            "args": [
                "java.lang.String",
                "int",
                "int"
            ],
            "return_value": "void",
            "signature": "(Ljava/lang/String;II)V",
            "dalvik_invoke": "Landroid/content/pm/PackageManager;->setApplicationEnabledSetting(Ljava/lang/String;II)V"
        },
        "permissions": [
            "android.permission.CHANGE_COMPONENT_ENABLED_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.content.pm.PackageManager",
            "name": "setComponentEnabledSetting",
            "type": "method",
            "args": [
                "android.content.ComponentName",
                "int",
                "int"
            ],
            "return_value": "void",
            "signature": "(Landroid/content/ComponentName;II)V",
            "dalvik_invoke": "Landroid/content/pm/PackageManager;->setComponentEnabledSetting(Landroid/content/ComponentName;II)V"
        },
        "permissions": [
            "android.permission.CHANGE_COMPONENT_ENABLED_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.hardware.biometrics.BiometricManager",
            "name": "canAuthenticate",
            "type": "method",
            "args": [],
            "return_value": "int",
            "signature": "()I",
            "dalvik_invoke": "Landroid/hardware/biometrics/BiometricManager;->canAuthenticate()I"
        },
        "permissions": [
            "android.permission.USE_BIOMETRIC"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.hardware.biometrics.BiometricManager",
            "name": "canAuthenticate",
            "type": "method",
            "args": [
                "int"
            ],
            "return_value": "int",
            "signature": "(I)I",
            "dalvik_invoke": "Landroid/hardware/biometrics/BiometricManager;->canAuthenticate(I)I"
        },
        "permissions": [
            "android.permission.USE_BIOMETRIC"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.hardware.biometrics.BiometricPrompt",
            "name": "authenticate",
            "type": "method",
            "args": [
                "android.hardware.biometrics.BiometricPrompt.CryptoObject",
                "android.os.CancellationSignal",
                "java.util.concurrent.Executor",
                "android.hardware.biometrics.BiometricPrompt.AuthenticationCallback"
            ],
            "return_value": "void",
            "signature": "(Landroid/hardware/biometrics/BiometricPrompt/CryptoObject;Landroid/os/CancellationSignal;Ljava/util/concurrent/Executor;Landroid/hardware/biometrics/BiometricPrompt/AuthenticationCallback;)V",
            "dalvik_invoke": "Landroid/hardware/biometrics/BiometricPrompt;->authenticate(Landroid/hardware/biometrics/BiometricPrompt/CryptoObject;Landroid/os/CancellationSignal;Ljava/util/concurrent/Executor;Landroid/hardware/biometrics/BiometricPrompt/AuthenticationCallback;)V"
        },
        "permissions": [
            "android.permission.USE_BIOMETRIC"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.hardware.biometrics.BiometricPrompt",
            "name": "authenticate",
            "type": "method",
            "args": [
                "android.os.CancellationSignal",
                "java.util.concurrent.Executor",
                "android.hardware.biometrics.BiometricPrompt.AuthenticationCallback"
            ],
            "return_value": "void",
            "signature": "(Landroid/os/CancellationSignal;Ljava/util/concurrent/Executor;Landroid/hardware/biometrics/BiometricPrompt/AuthenticationCallback;)V",
            "dalvik_invoke": "Landroid/hardware/biometrics/BiometricPrompt;->authenticate(Landroid/os/CancellationSignal;Ljava/util/concurrent/Executor;Landroid/hardware/biometrics/BiometricPrompt/AuthenticationCallback;)V"
        },
        "permissions": [
            "android.permission.USE_BIOMETRIC"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.hardware.fingerprint.FingerprintManager",
            "name": "hasEnrolledFingerprints",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/hardware/fingerprint/FingerprintManager;->hasEnrolledFingerprints()Z"
        },
        "permissions": [
            "android.permission.USE_FINGERPRINT"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.hardware.fingerprint.FingerprintManager",
            "name": "isHardwareDetected",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/hardware/fingerprint/FingerprintManager;->isHardwareDetected()Z"
        },
        "permissions": [
            "android.permission.USE_FINGERPRINT"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.hardware.fingerprint.FingerprintManager",
            "name": "authenticate",
            "type": "method",
            "args": [
                "android.hardware.fingerprint.FingerprintManager.CryptoObject",
                "android.os.CancellationSignal",
                "int",
                "android.hardware.fingerprint.FingerprintManager.AuthenticationCallback",
                "android.os.Handler"
            ],
            "return_value": "void",
            "signature": "(Landroid/hardware/fingerprint/FingerprintManager/CryptoObject;Landroid/os/CancellationSignal;ILandroid/hardware/fingerprint/FingerprintManager/AuthenticationCallback;Landroid/os/Handler;)V",
            "dalvik_invoke": "Landroid/hardware/fingerprint/FingerprintManager;->authenticate(Landroid/hardware/fingerprint/FingerprintManager/CryptoObject;Landroid/os/CancellationSignal;ILandroid/hardware/fingerprint/FingerprintManager/AuthenticationCallback;Landroid/os/Handler;)V"
        },
        "permissions": [
            "android.permission.USE_BIOMETRIC",
            "android.permission.USE_FINGERPRINT"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "getGpsStatus",
            "type": "method",
            "args": [
                "android.location.GpsStatus"
            ],
            "return_value": "android.location.GpsStatus",
            "signature": "(Landroid/location/GpsStatus;)Landroid/location/GpsStatus;",
            "dalvik_invoke": "Landroid/location/LocationManager;->getGpsStatus(Landroid/location/GpsStatus;)Landroid/location/GpsStatus;"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "getLastKnownLocation",
            "type": "method",
            "args": [
                "java.lang.String"
            ],
            "return_value": "android.location.Location",
            "signature": "(Ljava/lang/String;)Landroid/location/Location;",
            "dalvik_invoke": "Landroid/location/LocationManager;->getLastKnownLocation(Ljava/lang/String;)Landroid/location/Location;"
        },
        "permissions": [
            "android.permission.ACCESS_COARSE_LOCATION",
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "addGpsStatusListener",
            "type": "method",
            "args": [
                "android.location.GpsStatus.Listener"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/location/GpsStatus/Listener;)Z",
            "dalvik_invoke": "Landroid/location/LocationManager;->addGpsStatusListener(Landroid/location/GpsStatus/Listener;)Z"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "addNmeaListener",
            "type": "method",
            "args": [
                "android.location.GpsStatus.NmeaListener"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/location/GpsStatus/NmeaListener;)Z",
            "dalvik_invoke": "Landroid/location/LocationManager;->addNmeaListener(Landroid/location/GpsStatus/NmeaListener;)Z"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "addNmeaListener",
            "type": "method",
            "args": [
                "android.location.OnNmeaMessageListener"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/location/OnNmeaMessageListener;)Z",
            "dalvik_invoke": "Landroid/location/LocationManager;->addNmeaListener(Landroid/location/OnNmeaMessageListener;)Z"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "addNmeaListener",
            "type": "method",
            "args": [
                "android.location.OnNmeaMessageListener",
                "android.os.Handler"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/location/OnNmeaMessageListener;Landroid/os/Handler;)Z",
            "dalvik_invoke": "Landroid/location/LocationManager;->addNmeaListener(Landroid/location/OnNmeaMessageListener;Landroid/os/Handler;)Z"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "addNmeaListener",
            "type": "method",
            "args": [
                "java.util.concurrent.Executor",
                "android.location.OnNmeaMessageListener"
            ],
            "return_value": "boolean",
            "signature": "(Ljava/util/concurrent/Executor;Landroid/location/OnNmeaMessageListener;)Z",
            "dalvik_invoke": "Landroid/location/LocationManager;->addNmeaListener(Ljava/util/concurrent/Executor;Landroid/location/OnNmeaMessageListener;)Z"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "registerAntennaInfoListener",
            "type": "method",
            "args": [
                "java.util.concurrent.Executor",
                "android.location.GnssAntennaInfo.Listener"
            ],
            "return_value": "boolean",
            "signature": "(Ljava/util/concurrent/Executor;Landroid/location/GnssAntennaInfo/Listener;)Z",
            "dalvik_invoke": "Landroid/location/LocationManager;->registerAntennaInfoListener(Ljava/util/concurrent/Executor;Landroid/location/GnssAntennaInfo/Listener;)Z"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "registerGnssMeasurementsCallback",
            "type": "method",
            "args": [
                "android.location.GnssMeasurementsEvent.Callback"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/location/GnssMeasurementsEvent/Callback;)Z",
            "dalvik_invoke": "Landroid/location/LocationManager;->registerGnssMeasurementsCallback(Landroid/location/GnssMeasurementsEvent/Callback;)Z"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "registerGnssMeasurementsCallback",
            "type": "method",
            "args": [
                "android.location.GnssMeasurementsEvent.Callback",
                "android.os.Handler"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/location/GnssMeasurementsEvent/Callback;Landroid/os/Handler;)Z",
            "dalvik_invoke": "Landroid/location/LocationManager;->registerGnssMeasurementsCallback(Landroid/location/GnssMeasurementsEvent/Callback;Landroid/os/Handler;)Z"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "registerGnssMeasurementsCallback",
            "type": "method",
            "args": [
                "java.util.concurrent.Executor",
                "android.location.GnssMeasurementsEvent.Callback"
            ],
            "return_value": "boolean",
            "signature": "(Ljava/util/concurrent/Executor;Landroid/location/GnssMeasurementsEvent/Callback;)Z",
            "dalvik_invoke": "Landroid/location/LocationManager;->registerGnssMeasurementsCallback(Ljava/util/concurrent/Executor;Landroid/location/GnssMeasurementsEvent/Callback;)Z"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "registerGnssNavigationMessageCallback",
            "type": "method",
            "args": [
                "android.location.GnssNavigationMessage.Callback",
                "android.os.Handler"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/location/GnssNavigationMessage/Callback;Landroid/os/Handler;)Z",
            "dalvik_invoke": "Landroid/location/LocationManager;->registerGnssNavigationMessageCallback(Landroid/location/GnssNavigationMessage/Callback;Landroid/os/Handler;)Z"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "registerGnssNavigationMessageCallback",
            "type": "method",
            "args": [
                "java.util.concurrent.Executor",
                "android.location.GnssNavigationMessage.Callback"
            ],
            "return_value": "boolean",
            "signature": "(Ljava/util/concurrent/Executor;Landroid/location/GnssNavigationMessage/Callback;)Z",
            "dalvik_invoke": "Landroid/location/LocationManager;->registerGnssNavigationMessageCallback(Ljava/util/concurrent/Executor;Landroid/location/GnssNavigationMessage/Callback;)Z"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "registerGnssStatusCallback",
            "type": "method",
            "args": [
                "android.location.GnssStatus.Callback"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/location/GnssStatus/Callback;)Z",
            "dalvik_invoke": "Landroid/location/LocationManager;->registerGnssStatusCallback(Landroid/location/GnssStatus/Callback;)Z"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "registerGnssStatusCallback",
            "type": "method",
            "args": [
                "android.location.GnssStatus.Callback",
                "android.os.Handler"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/location/GnssStatus/Callback;Landroid/os/Handler;)Z",
            "dalvik_invoke": "Landroid/location/LocationManager;->registerGnssStatusCallback(Landroid/location/GnssStatus/Callback;Landroid/os/Handler;)Z"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "registerGnssStatusCallback",
            "type": "method",
            "args": [
                "java.util.concurrent.Executor",
                "android.location.GnssStatus.Callback"
            ],
            "return_value": "boolean",
            "signature": "(Ljava/util/concurrent/Executor;Landroid/location/GnssStatus/Callback;)Z",
            "dalvik_invoke": "Landroid/location/LocationManager;->registerGnssStatusCallback(Ljava/util/concurrent/Executor;Landroid/location/GnssStatus/Callback;)Z"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "addProximityAlert",
            "type": "method",
            "args": [
                "double",
                "double",
                "float",
                "long",
                "android.app.PendingIntent"
            ],
            "return_value": "void",
            "signature": "(DDFJLandroid/app/PendingIntent;)V",
            "dalvik_invoke": "Landroid/location/LocationManager;->addProximityAlert(DDFJLandroid/app/PendingIntent;)V"
        },
        "permissions": [
            "android.permission.ACCESS_COARSE_LOCATION",
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "removeProximityAlert",
            "type": "method",
            "args": [
                "android.app.PendingIntent"
            ],
            "return_value": "void",
            "signature": "(Landroid/app/PendingIntent;)V",
            "dalvik_invoke": "Landroid/location/LocationManager;->removeProximityAlert(Landroid/app/PendingIntent;)V"
        },
        "permissions": [
            "android.permission.ACCESS_COARSE_LOCATION",
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "removeUpdates",
            "type": "method",
            "args": [
                "android.location.LocationListener"
            ],
            "return_value": "void",
            "signature": "(Landroid/location/LocationListener;)V",
            "dalvik_invoke": "Landroid/location/LocationManager;->removeUpdates(Landroid/location/LocationListener;)V"
        },
        "permissions": [
            "android.permission.ACCESS_COARSE_LOCATION",
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "requestLocationUpdates",
            "type": "method",
            "args": [
                "java.lang.String",
                "long",
                "float",
                "android.app.PendingIntent"
            ],
            "return_value": "void",
            "signature": "(Ljava/lang/String;JFLandroid/app/PendingIntent;)V",
            "dalvik_invoke": "Landroid/location/LocationManager;->requestLocationUpdates(Ljava/lang/String;JFLandroid/app/PendingIntent;)V"
        },
        "permissions": [
            "android.permission.ACCESS_COARSE_LOCATION",
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "requestLocationUpdates",
            "type": "method",
            "args": [
                "java.lang.String",
                "long",
                "float",
                "android.location.LocationListener"
            ],
            "return_value": "void",
            "signature": "(Ljava/lang/String;JFLandroid/location/LocationListener;)V",
            "dalvik_invoke": "Landroid/location/LocationManager;->requestLocationUpdates(Ljava/lang/String;JFLandroid/location/LocationListener;)V"
        },
        "permissions": [
            "android.permission.ACCESS_COARSE_LOCATION",
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "requestLocationUpdates",
            "type": "method",
            "args": [
                "java.lang.String",
                "long",
                "float",
                "android.location.LocationListener",
                "android.os.Looper"
            ],
            "return_value": "void",
            "signature": "(Ljava/lang/String;JFLandroid/location/LocationListener;Landroid/os/Looper;)V",
            "dalvik_invoke": "Landroid/location/LocationManager;->requestLocationUpdates(Ljava/lang/String;JFLandroid/location/LocationListener;Landroid/os/Looper;)V"
        },
        "permissions": [
            "android.permission.ACCESS_COARSE_LOCATION",
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "requestLocationUpdates",
            "type": "method",
            "args": [
                "java.lang.String",
                "long",
                "float",
                "java.util.concurrent.Executor",
                "android.location.LocationListener"
            ],
            "return_value": "void",
            "signature": "(Ljava/lang/String;JFLjava/util/concurrent/Executor;Landroid/location/LocationListener;)V",
            "dalvik_invoke": "Landroid/location/LocationManager;->requestLocationUpdates(Ljava/lang/String;JFLjava/util/concurrent/Executor;Landroid/location/LocationListener;)V"
        },
        "permissions": [
            "android.permission.ACCESS_COARSE_LOCATION",
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "requestLocationUpdates",
            "type": "method",
            "args": [
                "long",
                "float",
                "android.location.Criteria",
                "android.app.PendingIntent"
            ],
            "return_value": "void",
            "signature": "(JFLandroid/location/Criteria;Landroid/app/PendingIntent;)V",
            "dalvik_invoke": "Landroid/location/LocationManager;->requestLocationUpdates(JFLandroid/location/Criteria;Landroid/app/PendingIntent;)V"
        },
        "permissions": [
            "android.permission.ACCESS_COARSE_LOCATION",
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "requestLocationUpdates",
            "type": "method",
            "args": [
                "long",
                "float",
                "android.location.Criteria",
                "android.location.LocationListener",
                "android.os.Looper"
            ],
            "return_value": "void",
            "signature": "(JFLandroid/location/Criteria;Landroid/location/LocationListener;Landroid/os/Looper;)V",
            "dalvik_invoke": "Landroid/location/LocationManager;->requestLocationUpdates(JFLandroid/location/Criteria;Landroid/location/LocationListener;Landroid/os/Looper;)V"
        },
        "permissions": [
            "android.permission.ACCESS_COARSE_LOCATION",
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "requestLocationUpdates",
            "type": "method",
            "args": [
                "long",
                "float",
                "android.location.Criteria",
                "java.util.concurrent.Executor",
                "android.location.LocationListener"
            ],
            "return_value": "void",
            "signature": "(JFLandroid/location/Criteria;Ljava/util/concurrent/Executor;Landroid/location/LocationListener;)V",
            "dalvik_invoke": "Landroid/location/LocationManager;->requestLocationUpdates(JFLandroid/location/Criteria;Ljava/util/concurrent/Executor;Landroid/location/LocationListener;)V"
        },
        "permissions": [
            "android.permission.ACCESS_COARSE_LOCATION",
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "requestSingleUpdate",
            "type": "method",
            "args": [
                "android.location.Criteria",
                "android.app.PendingIntent"
            ],
            "return_value": "void",
            "signature": "(Landroid/location/Criteria;Landroid/app/PendingIntent;)V",
            "dalvik_invoke": "Landroid/location/LocationManager;->requestSingleUpdate(Landroid/location/Criteria;Landroid/app/PendingIntent;)V"
        },
        "permissions": [
            "android.permission.ACCESS_COARSE_LOCATION",
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "requestSingleUpdate",
            "type": "method",
            "args": [
                "android.location.Criteria",
                "android.location.LocationListener",
                "android.os.Looper"
            ],
            "return_value": "void",
            "signature": "(Landroid/location/Criteria;Landroid/location/LocationListener;Landroid/os/Looper;)V",
            "dalvik_invoke": "Landroid/location/LocationManager;->requestSingleUpdate(Landroid/location/Criteria;Landroid/location/LocationListener;Landroid/os/Looper;)V"
        },
        "permissions": [
            "android.permission.ACCESS_COARSE_LOCATION",
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "requestSingleUpdate",
            "type": "method",
            "args": [
                "java.lang.String",
                "android.app.PendingIntent"
            ],
            "return_value": "void",
            "signature": "(Ljava/lang/String;Landroid/app/PendingIntent;)V",
            "dalvik_invoke": "Landroid/location/LocationManager;->requestSingleUpdate(Ljava/lang/String;Landroid/app/PendingIntent;)V"
        },
        "permissions": [
            "android.permission.ACCESS_COARSE_LOCATION",
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.location.LocationManager",
            "name": "requestSingleUpdate",
            "type": "method",
            "args": [
                "java.lang.String",
                "android.location.LocationListener",
                "android.os.Looper"
            ],
            "return_value": "void",
            "signature": "(Ljava/lang/String;Landroid/location/LocationListener;Landroid/os/Looper;)V",
            "dalvik_invoke": "Landroid/location/LocationManager;->requestSingleUpdate(Ljava/lang/String;Landroid/location/LocationListener;Landroid/os/Looper;)V"
        },
        "permissions": [
            "android.permission.ACCESS_COARSE_LOCATION",
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.net.ConnectivityManager",
            "name": "getLinkProperties",
            "type": "method",
            "args": [
                "android.net.Network"
            ],
            "return_value": "android.net.LinkProperties",
            "signature": "(Landroid/net/Network;)Landroid/net/LinkProperties;",
            "dalvik_invoke": "Landroid/net/ConnectivityManager;->getLinkProperties(Landroid/net/Network;)Landroid/net/LinkProperties;"
        },
        "permissions": [
            "android.permission.ACCESS_NETWORK_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.ConnectivityManager",
            "name": "getActiveNetwork",
            "type": "method",
            "args": [],
            "return_value": "android.net.Network",
            "signature": "()Landroid/net/Network;",
            "dalvik_invoke": "Landroid/net/ConnectivityManager;->getActiveNetwork()Landroid/net/Network;"
        },
        "permissions": [
            "android.permission.ACCESS_NETWORK_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.ConnectivityManager",
            "name": "getNetworkCapabilities",
            "type": "method",
            "args": [
                "android.net.Network"
            ],
            "return_value": "android.net.NetworkCapabilities",
            "signature": "(Landroid/net/Network;)Landroid/net/NetworkCapabilities;",
            "dalvik_invoke": "Landroid/net/ConnectivityManager;->getNetworkCapabilities(Landroid/net/Network;)Landroid/net/NetworkCapabilities;"
        },
        "permissions": [
            "android.permission.ACCESS_NETWORK_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.ConnectivityManager",
            "name": "getActiveNetworkInfo",
            "type": "method",
            "args": [],
            "return_value": "android.net.NetworkInfo",
            "signature": "()Landroid/net/NetworkInfo;",
            "dalvik_invoke": "Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;"
        },
        "permissions": [
            "android.permission.ACCESS_NETWORK_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.ConnectivityManager",
            "name": "getNetworkInfo",
            "type": "method",
            "args": [
                "android.net.Network"
            ],
            "return_value": "android.net.NetworkInfo",
            "signature": "(Landroid/net/Network;)Landroid/net/NetworkInfo;",
            "dalvik_invoke": "Landroid/net/ConnectivityManager;->getNetworkInfo(Landroid/net/Network;)Landroid/net/NetworkInfo;"
        },
        "permissions": [
            "android.permission.ACCESS_NETWORK_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.ConnectivityManager",
            "name": "getNetworkInfo",
            "type": "method",
            "args": [
                "int"
            ],
            "return_value": "android.net.NetworkInfo",
            "signature": "(I)Landroid/net/NetworkInfo;",
            "dalvik_invoke": "Landroid/net/ConnectivityManager;->getNetworkInfo(I)Landroid/net/NetworkInfo;"
        },
        "permissions": [
            "android.permission.ACCESS_NETWORK_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.ConnectivityManager",
            "name": "getAllNetworkInfo",
            "type": "method",
            "args": [],
            "return_value": "android.net.NetworkInfo[]",
            "signature": "()[Landroid/net/NetworkInfo;",
            "dalvik_invoke": "Landroid/net/ConnectivityManager;->getAllNetworkInfo()[Landroid/net/NetworkInfo;"
        },
        "permissions": [
            "android.permission.ACCESS_NETWORK_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.ConnectivityManager",
            "name": "getAllNetworks",
            "type": "method",
            "args": [],
            "return_value": "android.net.Network[]",
            "signature": "()[Landroid/net/Network;",
            "dalvik_invoke": "Landroid/net/ConnectivityManager;->getAllNetworks()[Landroid/net/Network;"
        },
        "permissions": [
            "android.permission.ACCESS_NETWORK_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.ConnectivityManager",
            "name": "isActiveNetworkMetered",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/net/ConnectivityManager;->isActiveNetworkMetered()Z"
        },
        "permissions": [
            "android.permission.ACCESS_NETWORK_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.ConnectivityManager",
            "name": "getMultipathPreference",
            "type": "method",
            "args": [
                "android.net.Network"
            ],
            "return_value": "int",
            "signature": "(Landroid/net/Network;)I",
            "dalvik_invoke": "Landroid/net/ConnectivityManager;->getMultipathPreference(Landroid/net/Network;)I"
        },
        "permissions": [
            "android.permission.ACCESS_NETWORK_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.ConnectivityManager",
            "name": "getNetworkPreference",
            "type": "method",
            "args": [],
            "return_value": "int",
            "signature": "()I",
            "dalvik_invoke": "Landroid/net/ConnectivityManager;->getNetworkPreference()I"
        },
        "permissions": [
            "android.permission.ACCESS_NETWORK_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.ConnectivityManager",
            "name": "registerDefaultNetworkCallback",
            "type": "method",
            "args": [
                "android.net.ConnectivityManager.NetworkCallback"
            ],
            "return_value": "void",
            "signature": "(Landroid/net/ConnectivityManager/NetworkCallback;)V",
            "dalvik_invoke": "Landroid/net/ConnectivityManager;->registerDefaultNetworkCallback(Landroid/net/ConnectivityManager/NetworkCallback;)V"
        },
        "permissions": [
            "android.permission.ACCESS_NETWORK_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.ConnectivityManager",
            "name": "registerDefaultNetworkCallback",
            "type": "method",
            "args": [
                "android.net.ConnectivityManager.NetworkCallback",
                "android.os.Handler"
            ],
            "return_value": "void",
            "signature": "(Landroid/net/ConnectivityManager/NetworkCallback;Landroid/os/Handler;)V",
            "dalvik_invoke": "Landroid/net/ConnectivityManager;->registerDefaultNetworkCallback(Landroid/net/ConnectivityManager/NetworkCallback;Landroid/os/Handler;)V"
        },
        "permissions": [
            "android.permission.ACCESS_NETWORK_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.ConnectivityManager",
            "name": "registerNetworkCallback",
            "type": "method",
            "args": [
                "android.net.NetworkRequest",
                "android.app.PendingIntent"
            ],
            "return_value": "void",
            "signature": "(Landroid/net/NetworkRequest;Landroid/app/PendingIntent;)V",
            "dalvik_invoke": "Landroid/net/ConnectivityManager;->registerNetworkCallback(Landroid/net/NetworkRequest;Landroid/app/PendingIntent;)V"
        },
        "permissions": [
            "android.permission.ACCESS_NETWORK_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.ConnectivityManager",
            "name": "registerNetworkCallback",
            "type": "method",
            "args": [
                "android.net.NetworkRequest",
                "android.net.ConnectivityManager.NetworkCallback"
            ],
            "return_value": "void",
            "signature": "(Landroid/net/NetworkRequest;Landroid/net/ConnectivityManager/NetworkCallback;)V",
            "dalvik_invoke": "Landroid/net/ConnectivityManager;->registerNetworkCallback(Landroid/net/NetworkRequest;Landroid/net/ConnectivityManager/NetworkCallback;)V"
        },
        "permissions": [
            "android.permission.ACCESS_NETWORK_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.ConnectivityManager",
            "name": "registerNetworkCallback",
            "type": "method",
            "args": [
                "android.net.NetworkRequest",
                "android.net.ConnectivityManager.NetworkCallback",
                "android.os.Handler"
            ],
            "return_value": "void",
            "signature": "(Landroid/net/NetworkRequest;Landroid/net/ConnectivityManager/NetworkCallback;Landroid/os/Handler;)V",
            "dalvik_invoke": "Landroid/net/ConnectivityManager;->registerNetworkCallback(Landroid/net/NetworkRequest;Landroid/net/ConnectivityManager/NetworkCallback;Landroid/os/Handler;)V"
        },
        "permissions": [
            "android.permission.ACCESS_NETWORK_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.WifiManager",
            "name": "isAutoWakeupEnabled",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/net/wifi/WifiManager;->isAutoWakeupEnabled()Z"
        },
        "permissions": [
            "android.permission.ACCESS_WIFI_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.WifiManager",
            "name": "isScanThrottleEnabled",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/net/wifi/WifiManager;->isScanThrottleEnabled()Z"
        },
        "permissions": [
            "android.permission.ACCESS_WIFI_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.WifiManager",
            "name": "getConfiguredNetworks",
            "type": "method",
            "args": [],
            "return_value": "java.util.List<android.net.wifi.WifiConfiguration>",
            "signature": "()Ljava/util/List;",
            "dalvik_invoke": "Landroid/net/wifi/WifiManager;->getConfiguredNetworks()Ljava/util/List;"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION",
            "android.permission.ACCESS_WIFI_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.WifiManager",
            "name": "getNetworkSuggestions",
            "type": "method",
            "args": [],
            "return_value": "java.util.List<android.net.wifi.WifiNetworkSuggestion>",
            "signature": "()Ljava/util/List;",
            "dalvik_invoke": "Landroid/net/wifi/WifiManager;->getNetworkSuggestions()Ljava/util/List;"
        },
        "permissions": [
            "android.permission.ACCESS_WIFI_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.WifiManager",
            "name": "getPasspointConfigurations",
            "type": "method",
            "args": [],
            "return_value": "java.util.List<android.net.wifi.hotspot2.PasspointConfiguration>",
            "signature": "()Ljava/util/List;",
            "dalvik_invoke": "Landroid/net/wifi/WifiManager;->getPasspointConfigurations()Ljava/util/List;"
        },
        "permissions": [
            "android.permission.NETWORK_SETTINGS",
            "android.permission.NETWORK_SETUP_WIZARD"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.net.wifi.WifiManager",
            "name": "addSuggestionConnectionStatusListener",
            "type": "method",
            "args": [
                "java.util.concurrent.Executor",
                "android.net.wifi.WifiManager.SuggestionConnectionStatusListener"
            ],
            "return_value": "void",
            "signature": "(Ljava/util/concurrent/Executor;Landroid/net/wifi/WifiManager/SuggestionConnectionStatusListener;)V",
            "dalvik_invoke": "Landroid/net/wifi/WifiManager;->addSuggestionConnectionStatusListener(Ljava/util/concurrent/Executor;Landroid/net/wifi/WifiManager/SuggestionConnectionStatusListener;)V"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION",
            "android.permission.ACCESS_WIFI_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.WifiManager",
            "name": "registerScanResultsCallback",
            "type": "method",
            "args": [
                "java.util.concurrent.Executor",
                "android.net.wifi.WifiManager.ScanResultsCallback"
            ],
            "return_value": "void",
            "signature": "(Ljava/util/concurrent/Executor;Landroid/net/wifi/WifiManager/ScanResultsCallback;)V",
            "dalvik_invoke": "Landroid/net/wifi/WifiManager;->registerScanResultsCallback(Ljava/util/concurrent/Executor;Landroid/net/wifi/WifiManager/ScanResultsCallback;)V"
        },
        "permissions": [
            "android.permission.ACCESS_WIFI_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.WifiManager",
            "name": "removePasspointConfiguration",
            "type": "method",
            "args": [
                "java.lang.String"
            ],
            "return_value": "void",
            "signature": "(Ljava/lang/String;)V",
            "dalvik_invoke": "Landroid/net/wifi/WifiManager;->removePasspointConfiguration(Ljava/lang/String;)V"
        },
        "permissions": [
            "android.permission.NETWORK_SETTINGS",
            "android.permission.NETWORK_CARRIER_PROVISIONING"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.net.wifi.WifiManager",
            "name": "removeSuggestionConnectionStatusListener",
            "type": "method",
            "args": [
                "android.net.wifi.WifiManager.SuggestionConnectionStatusListener"
            ],
            "return_value": "void",
            "signature": "(Landroid/net/wifi/WifiManager/SuggestionConnectionStatusListener;)V",
            "dalvik_invoke": "Landroid/net/wifi/WifiManager;->removeSuggestionConnectionStatusListener(Landroid/net/wifi/WifiManager/SuggestionConnectionStatusListener;)V"
        },
        "permissions": [
            "android.permission.ACCESS_WIFI_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.WifiManager",
            "name": "startLocalOnlyHotspot",
            "type": "method",
            "args": [
                "android.net.wifi.WifiManager.LocalOnlyHotspotCallback",
                "android.os.Handler"
            ],
            "return_value": "void",
            "signature": "(Landroid/net/wifi/WifiManager/LocalOnlyHotspotCallback;Landroid/os/Handler;)V",
            "dalvik_invoke": "Landroid/net/wifi/WifiManager;->startLocalOnlyHotspot(Landroid/net/wifi/WifiManager/LocalOnlyHotspotCallback;Landroid/os/Handler;)V"
        },
        "permissions": [
            "android.permission.CHANGE_WIFI_STATE",
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.WifiManager",
            "name": "unregisterScanResultsCallback",
            "type": "method",
            "args": [
                "android.net.wifi.WifiManager.ScanResultsCallback"
            ],
            "return_value": "void",
            "signature": "(Landroid/net/wifi/WifiManager/ScanResultsCallback;)V",
            "dalvik_invoke": "Landroid/net/wifi/WifiManager;->unregisterScanResultsCallback(Landroid/net/wifi/WifiManager/ScanResultsCallback;)V"
        },
        "permissions": [
            "android.permission.ACCESS_WIFI_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.p2p.WifiP2pManager",
            "name": "addLocalService",
            "type": "method",
            "args": [
                "android.net.wifi.p2p.WifiP2pManager.Channel",
                "android.net.wifi.p2p.nsd.WifiP2pServiceInfo",
                "android.net.wifi.p2p.WifiP2pManager.ActionListener"
            ],
            "return_value": "void",
            "signature": "(Landroid/net/wifi/p2p/WifiP2pManager/Channel;Landroid/net/wifi/p2p/nsd/WifiP2pServiceInfo;Landroid/net/wifi/p2p/WifiP2pManager/ActionListener;)V",
            "dalvik_invoke": "Landroid/net/wifi/p2p/WifiP2pManager;->addLocalService(Landroid/net/wifi/p2p/WifiP2pManager/Channel;Landroid/net/wifi/p2p/nsd/WifiP2pServiceInfo;Landroid/net/wifi/p2p/WifiP2pManager/ActionListener;)V"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.p2p.WifiP2pManager",
            "name": "connect",
            "type": "method",
            "args": [
                "android.net.wifi.p2p.WifiP2pManager.Channel",
                "android.net.wifi.p2p.WifiP2pConfig",
                "android.net.wifi.p2p.WifiP2pManager.ActionListener"
            ],
            "return_value": "void",
            "signature": "(Landroid/net/wifi/p2p/WifiP2pManager/Channel;Landroid/net/wifi/p2p/WifiP2pConfig;Landroid/net/wifi/p2p/WifiP2pManager/ActionListener;)V",
            "dalvik_invoke": "Landroid/net/wifi/p2p/WifiP2pManager;->connect(Landroid/net/wifi/p2p/WifiP2pManager/Channel;Landroid/net/wifi/p2p/WifiP2pConfig;Landroid/net/wifi/p2p/WifiP2pManager/ActionListener;)V"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.p2p.WifiP2pManager",
            "name": "createGroup",
            "type": "method",
            "args": [
                "android.net.wifi.p2p.WifiP2pManager.Channel",
                "android.net.wifi.p2p.WifiP2pConfig",
                "android.net.wifi.p2p.WifiP2pManager.ActionListener"
            ],
            "return_value": "void",
            "signature": "(Landroid/net/wifi/p2p/WifiP2pManager/Channel;Landroid/net/wifi/p2p/WifiP2pConfig;Landroid/net/wifi/p2p/WifiP2pManager/ActionListener;)V",
            "dalvik_invoke": "Landroid/net/wifi/p2p/WifiP2pManager;->createGroup(Landroid/net/wifi/p2p/WifiP2pManager/Channel;Landroid/net/wifi/p2p/WifiP2pConfig;Landroid/net/wifi/p2p/WifiP2pManager/ActionListener;)V"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.p2p.WifiP2pManager",
            "name": "createGroup",
            "type": "method",
            "args": [
                "android.net.wifi.p2p.WifiP2pManager.Channel",
                "android.net.wifi.p2p.WifiP2pManager.ActionListener"
            ],
            "return_value": "void",
            "signature": "(Landroid/net/wifi/p2p/WifiP2pManager/Channel;Landroid/net/wifi/p2p/WifiP2pManager/ActionListener;)V",
            "dalvik_invoke": "Landroid/net/wifi/p2p/WifiP2pManager;->createGroup(Landroid/net/wifi/p2p/WifiP2pManager/Channel;Landroid/net/wifi/p2p/WifiP2pManager/ActionListener;)V"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.p2p.WifiP2pManager",
            "name": "discoverPeers",
            "type": "method",
            "args": [
                "android.net.wifi.p2p.WifiP2pManager.Channel",
                "android.net.wifi.p2p.WifiP2pManager.ActionListener"
            ],
            "return_value": "void",
            "signature": "(Landroid/net/wifi/p2p/WifiP2pManager/Channel;Landroid/net/wifi/p2p/WifiP2pManager/ActionListener;)V",
            "dalvik_invoke": "Landroid/net/wifi/p2p/WifiP2pManager;->discoverPeers(Landroid/net/wifi/p2p/WifiP2pManager/Channel;Landroid/net/wifi/p2p/WifiP2pManager/ActionListener;)V"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.p2p.WifiP2pManager",
            "name": "discoverServices",
            "type": "method",
            "args": [
                "android.net.wifi.p2p.WifiP2pManager.Channel",
                "android.net.wifi.p2p.WifiP2pManager.ActionListener"
            ],
            "return_value": "void",
            "signature": "(Landroid/net/wifi/p2p/WifiP2pManager/Channel;Landroid/net/wifi/p2p/WifiP2pManager/ActionListener;)V",
            "dalvik_invoke": "Landroid/net/wifi/p2p/WifiP2pManager;->discoverServices(Landroid/net/wifi/p2p/WifiP2pManager/Channel;Landroid/net/wifi/p2p/WifiP2pManager/ActionListener;)V"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.p2p.WifiP2pManager",
            "name": "requestDeviceInfo",
            "type": "method",
            "args": [
                "android.net.wifi.p2p.WifiP2pManager.Channel",
                "android.net.wifi.p2p.WifiP2pManager.DeviceInfoListener"
            ],
            "return_value": "void",
            "signature": "(Landroid/net/wifi/p2p/WifiP2pManager/Channel;Landroid/net/wifi/p2p/WifiP2pManager/DeviceInfoListener;)V",
            "dalvik_invoke": "Landroid/net/wifi/p2p/WifiP2pManager;->requestDeviceInfo(Landroid/net/wifi/p2p/WifiP2pManager/Channel;Landroid/net/wifi/p2p/WifiP2pManager/DeviceInfoListener;)V"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.p2p.WifiP2pManager",
            "name": "requestGroupInfo",
            "type": "method",
            "args": [
                "android.net.wifi.p2p.WifiP2pManager.Channel",
                "android.net.wifi.p2p.WifiP2pManager.GroupInfoListener"
            ],
            "return_value": "void",
            "signature": "(Landroid/net/wifi/p2p/WifiP2pManager/Channel;Landroid/net/wifi/p2p/WifiP2pManager/GroupInfoListener;)V",
            "dalvik_invoke": "Landroid/net/wifi/p2p/WifiP2pManager;->requestGroupInfo(Landroid/net/wifi/p2p/WifiP2pManager/Channel;Landroid/net/wifi/p2p/WifiP2pManager/GroupInfoListener;)V"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.p2p.WifiP2pManager",
            "name": "requestPeers",
            "type": "method",
            "args": [
                "android.net.wifi.p2p.WifiP2pManager.Channel",
                "android.net.wifi.p2p.WifiP2pManager.PeerListListener"
            ],
            "return_value": "void",
            "signature": "(Landroid/net/wifi/p2p/WifiP2pManager/Channel;Landroid/net/wifi/p2p/WifiP2pManager/PeerListListener;)V",
            "dalvik_invoke": "Landroid/net/wifi/p2p/WifiP2pManager;->requestPeers(Landroid/net/wifi/p2p/WifiP2pManager/Channel;Landroid/net/wifi/p2p/WifiP2pManager/PeerListListener;)V"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.net.wifi.rtt.WifiRttManager",
            "name": "startRanging",
            "type": "method",
            "args": [
                "android.net.wifi.rtt.RangingRequest",
                "java.util.concurrent.Executor",
                "android.net.wifi.rtt.RangingResultCallback"
            ],
            "return_value": "void",
            "signature": "(Landroid/net/wifi/rtt/RangingRequest;Ljava/util/concurrent/Executor;Landroid/net/wifi/rtt/RangingResultCallback;)V",
            "dalvik_invoke": "Landroid/net/wifi/rtt/WifiRttManager;->startRanging(Landroid/net/wifi/rtt/RangingRequest;Ljava/util/concurrent/Executor;Landroid/net/wifi/rtt/RangingResultCallback;)V"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION",
            "android.permission.CHANGE_WIFI_STATE",
            "android.permission.ACCESS_WIFI_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.nfc.NfcAdapter",
            "name": "ACTION_PREFERRED_PAYMENT_CHANGED",
            "type": "field"
        },
        "permissions": [
            "android.permission.NFC_PREFERRED_PAYMENT_INFO"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.nfc.NfcAdapter",
            "name": "ACTION_TRANSACTION_DETECTED",
            "type": "field"
        },
        "permissions": [
            "android.permission.NFC_TRANSACTION_EVENT"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.nfc.cardemulation.CardEmulation",
            "name": "setOffHostForService",
            "type": "method",
            "args": [
                "android.content.ComponentName",
                "java.lang.String"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/content/ComponentName;Ljava/lang/String;)Z",
            "dalvik_invoke": "Landroid/nfc/cardemulation/CardEmulation;->setOffHostForService(Landroid/content/ComponentName;Ljava/lang/String;)Z"
        },
        "permissions": [
            "android.permission.NFC"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.nfc.cardemulation.CardEmulation",
            "name": "unsetOffHostForService",
            "type": "method",
            "args": [
                "android.content.ComponentName"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/content/ComponentName;)Z",
            "dalvik_invoke": "Landroid/nfc/cardemulation/CardEmulation;->unsetOffHostForService(Landroid/content/ComponentName;)Z"
        },
        "permissions": [
            "android.permission.NFC"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.nfc.cardemulation.CardEmulation",
            "name": "getDescriptionForPreferredPaymentService",
            "type": "method",
            "args": [],
            "return_value": "java.lang.CharSequence",
            "signature": "()Ljava/lang/CharSequence;",
            "dalvik_invoke": "Landroid/nfc/cardemulation/CardEmulation;->getDescriptionForPreferredPaymentService()Ljava/lang/CharSequence;"
        },
        "permissions": [
            "android.permission.NFC_PREFERRED_PAYMENT_INFO"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.nfc.cardemulation.CardEmulation",
            "name": "getRouteDestinationForPreferredPaymentService",
            "type": "method",
            "args": [],
            "return_value": "java.lang.String",
            "signature": "()Ljava/lang/String;",
            "dalvik_invoke": "Landroid/nfc/cardemulation/CardEmulation;->getRouteDestinationForPreferredPaymentService()Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.NFC_PREFERRED_PAYMENT_INFO"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.nfc.cardemulation.CardEmulation",
            "name": "getAidsForPreferredPaymentService",
            "type": "method",
            "args": [],
            "return_value": "java.util.List<java.lang.String>",
            "signature": "()Ljava/util/List;",
            "dalvik_invoke": "Landroid/nfc/cardemulation/CardEmulation;->getAidsForPreferredPaymentService()Ljava/util/List;"
        },
        "permissions": [
            "android.permission.NFC_PREFERRED_PAYMENT_INFO"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.os.Build",
            "name": "getSerial",
            "type": "method",
            "args": [],
            "return_value": "java.lang.String",
            "signature": "()Ljava/lang/String;",
            "dalvik_invoke": "Landroid/os/Build;->getSerial()Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PRIVILEGED_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.os.DropBoxManager",
            "name": "getNextEntry",
            "type": "method",
            "args": [
                "java.lang.String",
                "long"
            ],
            "return_value": "android.os.DropBoxManager.Entry",
            "signature": "(Ljava/lang/String;J)Landroid/os/DropBoxManager/Entry;",
            "dalvik_invoke": "Landroid/os/DropBoxManager;->getNextEntry(Ljava/lang/String;J)Landroid/os/DropBoxManager/Entry;"
        },
        "permissions": [
            "android.permission.READ_LOGS",
            "android.permission.PACKAGE_USAGE_STATS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.os.PowerManager",
            "name": "reboot",
            "type": "method",
            "args": [
                "java.lang.String"
            ],
            "return_value": "void",
            "signature": "(Ljava/lang/String;)V",
            "dalvik_invoke": "Landroid/os/PowerManager;->reboot(Ljava/lang/String;)V"
        },
        "permissions": [
            "android.permission.REBOOT"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.os.RecoverySystem",
            "name": "installPackage",
            "type": "method",
            "args": [
                "android.content.Context",
                "java.io.File"
            ],
            "return_value": "void",
            "signature": "(Landroid/content/Context;Ljava/io/File;)V",
            "dalvik_invoke": "Landroid/os/RecoverySystem;->installPackage(Landroid/content/Context;Ljava/io/File;)V"
        },
        "permissions": [
            "android.permission.RECOVERY"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.os.UserManager",
            "name": "getUserRestrictions",
            "type": "method",
            "args": [
                "android.os.UserHandle"
            ],
            "return_value": "android.os.Bundle",
            "signature": "(Landroid/os/UserHandle;)Landroid/os/Bundle;",
            "dalvik_invoke": "Landroid/os/UserManager;->getUserRestrictions(Landroid/os/UserHandle;)Landroid/os/Bundle;"
        },
        "permissions": [
            "android.permission.MANAGE_USERS",
            "android.permission.INTERACT_ACROSS_USERS"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.os.UserManager",
            "name": "isUserRunning",
            "type": "method",
            "args": [
                "android.os.UserHandle"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/os/UserHandle;)Z",
            "dalvik_invoke": "Landroid/os/UserManager;->isUserRunning(Landroid/os/UserHandle;)Z"
        },
        "permissions": [
            "android.permission.MANAGE_USERS",
            "android.permission.INTERACT_ACROSS_USERS"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.os.UserManager",
            "name": "isUserRunningOrStopping",
            "type": "method",
            "args": [
                "android.os.UserHandle"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/os/UserHandle;)Z",
            "dalvik_invoke": "Landroid/os/UserManager;->isUserRunningOrStopping(Landroid/os/UserHandle;)Z"
        },
        "permissions": [
            "android.permission.MANAGE_USERS",
            "android.permission.INTERACT_ACROSS_USERS"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.os.UserManager",
            "name": "isUserUnlocked",
            "type": "method",
            "args": [
                "android.os.UserHandle"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/os/UserHandle;)Z",
            "dalvik_invoke": "Landroid/os/UserManager;->isUserUnlocked(Landroid/os/UserHandle;)Z"
        },
        "permissions": [
            "android.permission.MANAGE_USERS",
            "android.permission.INTERACT_ACROSS_USERS"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.os.UserManager",
            "name": "requestQuietModeEnabled",
            "type": "method",
            "args": [
                "boolean",
                "android.os.UserHandle"
            ],
            "return_value": "boolean",
            "signature": "(ZLandroid/os/UserHandle;)Z",
            "dalvik_invoke": "Landroid/os/UserManager;->requestQuietModeEnabled(ZLandroid/os/UserHandle;)Z"
        },
        "permissions": [
            "android.permission.MANAGE_USERS",
            "android.permission.MODIFY_QUIET_MODE"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.os.UserManager",
            "name": "getUserCount",
            "type": "method",
            "args": [],
            "return_value": "int",
            "signature": "()I",
            "dalvik_invoke": "Landroid/os/UserManager;->getUserCount()I"
        },
        "permissions": [
            "android.permission.MANAGE_USERS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.os.UserManager",
            "name": "getUserName",
            "type": "method",
            "args": [],
            "return_value": "java.lang.String",
            "signature": "()Ljava/lang/String;",
            "dalvik_invoke": "Landroid/os/UserManager;->getUserName()Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.MANAGE_USERS",
            "android.permission.GET_ACCOUNTS_PRIVILEGED"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.os.UserManager",
            "name": "setUserRestriction",
            "type": "method",
            "args": [
                "java.lang.String",
                "boolean"
            ],
            "return_value": "void",
            "signature": "(Ljava/lang/String;Z)V",
            "dalvik_invoke": "Landroid/os/UserManager;->setUserRestriction(Ljava/lang/String;Z)V"
        },
        "permissions": [
            "android.permission.MANAGE_USERS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.os.Vibrator",
            "name": "cancel",
            "type": "method",
            "args": [],
            "return_value": "void",
            "signature": "()V",
            "dalvik_invoke": "Landroid/os/Vibrator;->cancel()V"
        },
        "permissions": [
            "android.permission.VIBRATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.os.Vibrator",
            "name": "vibrate",
            "type": "method",
            "args": [
                "android.os.VibrationEffect"
            ],
            "return_value": "void",
            "signature": "(Landroid/os/VibrationEffect;)V",
            "dalvik_invoke": "Landroid/os/Vibrator;->vibrate(Landroid/os/VibrationEffect;)V"
        },
        "permissions": [
            "android.permission.VIBRATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.os.Vibrator",
            "name": "vibrate",
            "type": "method",
            "args": [
                "android.os.VibrationEffect",
                "android.media.AudioAttributes"
            ],
            "return_value": "void",
            "signature": "(Landroid/os/VibrationEffect;Landroid/media/AudioAttributes;)V",
            "dalvik_invoke": "Landroid/os/Vibrator;->vibrate(Landroid/os/VibrationEffect;Landroid/media/AudioAttributes;)V"
        },
        "permissions": [
            "android.permission.VIBRATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.os.Vibrator",
            "name": "vibrate",
            "type": "method",
            "args": [
                "long"
            ],
            "return_value": "void",
            "signature": "(J)V",
            "dalvik_invoke": "Landroid/os/Vibrator;->vibrate(J)V"
        },
        "permissions": [
            "android.permission.VIBRATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.os.Vibrator",
            "name": "vibrate",
            "type": "method",
            "args": [
                "long",
                "android.media.AudioAttributes"
            ],
            "return_value": "void",
            "signature": "(JLandroid/media/AudioAttributes;)V",
            "dalvik_invoke": "Landroid/os/Vibrator;->vibrate(JLandroid/media/AudioAttributes;)V"
        },
        "permissions": [
            "android.permission.VIBRATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.os.Vibrator",
            "name": "vibrate",
            "type": "method",
            "args": [
                "long[]",
                "int"
            ],
            "return_value": "void",
            "signature": "([JI)V",
            "dalvik_invoke": "Landroid/os/Vibrator;->vibrate([JI)V"
        },
        "permissions": [
            "android.permission.VIBRATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.os.Vibrator",
            "name": "vibrate",
            "type": "method",
            "args": [
                "long[]",
                "int",
                "android.media.AudioAttributes"
            ],
            "return_value": "void",
            "signature": "([JILandroid/media/AudioAttributes;)V",
            "dalvik_invoke": "Landroid/os/Vibrator;->vibrate([JILandroid/media/AudioAttributes;)V"
        },
        "permissions": [
            "android.permission.VIBRATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.os.storage.StorageManager",
            "name": "ACTION_CLEAR_APP_CACHE",
            "type": "field"
        },
        "permissions": [
            "android.permission.MANAGE_EXTERNAL_STORAGE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.security.FileIntegrityManager",
            "name": "isAppSourceCertificateTrusted",
            "type": "method",
            "args": [
                "java.security.cert.X509Certificate"
            ],
            "return_value": "boolean",
            "signature": "(Ljava/security/cert/X509Certificate;)Z",
            "dalvik_invoke": "Landroid/security/FileIntegrityManager;->isAppSourceCertificateTrusted(Ljava/security/cert/X509Certificate;)Z"
        },
        "permissions": [
            "android.permission.INSTALL_PACKAGES",
            "android.permission.REQUEST_INSTALL_PACKAGES"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.telecom.TelecomManager",
            "name": "getAdnUriForPhoneAccount",
            "type": "method",
            "args": [
                "android.telecom.PhoneAccountHandle"
            ],
            "return_value": "android.net.Uri",
            "signature": "(Landroid/telecom/PhoneAccountHandle;)Landroid/net/Uri;",
            "dalvik_invoke": "Landroid/telecom/TelecomManager;->getAdnUriForPhoneAccount(Landroid/telecom/PhoneAccountHandle;)Landroid/net/Uri;"
        },
        "permissions": [
            "android.permission.MODIFY_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telecom.TelecomManager",
            "name": "getDefaultOutgoingPhoneAccount",
            "type": "method",
            "args": [
                "java.lang.String"
            ],
            "return_value": "android.telecom.PhoneAccountHandle",
            "signature": "(Ljava/lang/String;)Landroid/telecom/PhoneAccountHandle;",
            "dalvik_invoke": "Landroid/telecom/TelecomManager;->getDefaultOutgoingPhoneAccount(Ljava/lang/String;)Landroid/telecom/PhoneAccountHandle;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telecom.TelecomManager",
            "name": "getUserSelectedOutgoingPhoneAccount",
            "type": "method",
            "args": [],
            "return_value": "android.telecom.PhoneAccountHandle",
            "signature": "()Landroid/telecom/PhoneAccountHandle;",
            "dalvik_invoke": "Landroid/telecom/TelecomManager;->getUserSelectedOutgoingPhoneAccount()Landroid/telecom/PhoneAccountHandle;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telecom.TelecomManager",
            "name": "endCall",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/telecom/TelecomManager;->endCall()Z"
        },
        "permissions": [
            "android.permission.ANSWER_PHONE_CALLS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telecom.TelecomManager",
            "name": "handleMmi",
            "type": "method",
            "args": [
                "java.lang.String"
            ],
            "return_value": "boolean",
            "signature": "(Ljava/lang/String;)Z",
            "dalvik_invoke": "Landroid/telecom/TelecomManager;->handleMmi(Ljava/lang/String;)Z"
        },
        "permissions": [
            "android.permission.MODIFY_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telecom.TelecomManager",
            "name": "handleMmi",
            "type": "method",
            "args": [
                "java.lang.String",
                "android.telecom.PhoneAccountHandle"
            ],
            "return_value": "boolean",
            "signature": "(Ljava/lang/String;Landroid/telecom/PhoneAccountHandle;)Z",
            "dalvik_invoke": "Landroid/telecom/TelecomManager;->handleMmi(Ljava/lang/String;Landroid/telecom/PhoneAccountHandle;)Z"
        },
        "permissions": [
            "android.permission.MODIFY_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telecom.TelecomManager",
            "name": "isInCall",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/telecom/TelecomManager;->isInCall()Z"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telecom.TelecomManager",
            "name": "isInManagedCall",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/telecom/TelecomManager;->isInManagedCall()Z"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telecom.TelecomManager",
            "name": "isTtySupported",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/telecom/TelecomManager;->isTtySupported()Z"
        },
        "permissions": [
            "android.permission.READ_PRIVILEGED_PHONE_STATE",
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.telecom.TelecomManager",
            "name": "isVoiceMailNumber",
            "type": "method",
            "args": [
                "android.telecom.PhoneAccountHandle",
                "java.lang.String"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/telecom/PhoneAccountHandle;Ljava/lang/String;)Z",
            "dalvik_invoke": "Landroid/telecom/TelecomManager;->isVoiceMailNumber(Landroid/telecom/PhoneAccountHandle;Ljava/lang/String;)Z"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telecom.TelecomManager",
            "name": "getLine1Number",
            "type": "method",
            "args": [
                "android.telecom.PhoneAccountHandle"
            ],
            "return_value": "java.lang.String",
            "signature": "(Landroid/telecom/PhoneAccountHandle;)Ljava/lang/String;",
            "dalvik_invoke": "Landroid/telecom/TelecomManager;->getLine1Number(Landroid/telecom/PhoneAccountHandle;)Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE",
            "android.permission.READ_SMS",
            "android.permission.READ_PHONE_NUMBERS"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.telecom.TelecomManager",
            "name": "getVoiceMailNumber",
            "type": "method",
            "args": [
                "android.telecom.PhoneAccountHandle"
            ],
            "return_value": "java.lang.String",
            "signature": "(Landroid/telecom/PhoneAccountHandle;)Ljava/lang/String;",
            "dalvik_invoke": "Landroid/telecom/TelecomManager;->getVoiceMailNumber(Landroid/telecom/PhoneAccountHandle;)Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telecom.TelecomManager",
            "name": "getCallCapablePhoneAccounts",
            "type": "method",
            "args": [],
            "return_value": "java.util.List<android.telecom.PhoneAccountHandle>",
            "signature": "()Ljava/util/List;",
            "dalvik_invoke": "Landroid/telecom/TelecomManager;->getCallCapablePhoneAccounts()Ljava/util/List;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telecom.TelecomManager",
            "name": "getSelfManagedPhoneAccounts",
            "type": "method",
            "args": [],
            "return_value": "java.util.List<android.telecom.PhoneAccountHandle>",
            "signature": "()Ljava/util/List;",
            "dalvik_invoke": "Landroid/telecom/TelecomManager;->getSelfManagedPhoneAccounts()Ljava/util/List;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telecom.TelecomManager",
            "name": "acceptRingingCall",
            "type": "method",
            "args": [],
            "return_value": "void",
            "signature": "()V",
            "dalvik_invoke": "Landroid/telecom/TelecomManager;->acceptRingingCall()V"
        },
        "permissions": [
            "android.permission.ANSWER_PHONE_CALLS",
            "android.permission.MODIFY_PHONE_STATE"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.telecom.TelecomManager",
            "name": "acceptRingingCall",
            "type": "method",
            "args": [
                "int"
            ],
            "return_value": "void",
            "signature": "(I)V",
            "dalvik_invoke": "Landroid/telecom/TelecomManager;->acceptRingingCall(I)V"
        },
        "permissions": [
            "android.permission.ANSWER_PHONE_CALLS",
            "android.permission.MODIFY_PHONE_STATE"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.telecom.TelecomManager",
            "name": "cancelMissedCallsNotification",
            "type": "method",
            "args": [],
            "return_value": "void",
            "signature": "()V",
            "dalvik_invoke": "Landroid/telecom/TelecomManager;->cancelMissedCallsNotification()V"
        },
        "permissions": [
            "android.permission.MODIFY_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telecom.TelecomManager",
            "name": "placeCall",
            "type": "method",
            "args": [
                "android.net.Uri",
                "android.os.Bundle"
            ],
            "return_value": "void",
            "signature": "(Landroid/net/Uri;Landroid/os/Bundle;)V",
            "dalvik_invoke": "Landroid/telecom/TelecomManager;->placeCall(Landroid/net/Uri;Landroid/os/Bundle;)V"
        },
        "permissions": [
            "android.permission.CALL_PHONE",
            "android.permission.MANAGE_OWN_CALLS"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.telecom.TelecomManager",
            "name": "showInCallScreen",
            "type": "method",
            "args": [
                "boolean"
            ],
            "return_value": "void",
            "signature": "(Z)V",
            "dalvik_invoke": "Landroid/telecom/TelecomManager;->showInCallScreen(Z)V"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telecom.TelecomManager",
            "name": "silenceRinger",
            "type": "method",
            "args": [],
            "return_value": "void",
            "signature": "()V",
            "dalvik_invoke": "Landroid/telecom/TelecomManager;->silenceRinger()V"
        },
        "permissions": [
            "android.permission.MODIFY_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.PhoneStateListener",
            "name": "LISTEN_BARRING_INFO",
            "type": "field"
        },
        "permissions": [
            "android.permission.READ_PRECISE_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.PhoneStateListener",
            "name": "LISTEN_CALL_DISCONNECT_CAUSES",
            "type": "field"
        },
        "permissions": [
            "(android.Manifest.permission.READ_PRECISE_PHONE_STATE)"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.PhoneStateListener",
            "name": "LISTEN_IMS_CALL_DISCONNECT_CAUSES",
            "type": "field"
        },
        "permissions": [
            "(android.Manifest.permission.READ_PRECISE_PHONE_STATE)"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.PhoneStateListener",
            "name": "LISTEN_PRECISE_DATA_CONNECTION_STATE",
            "type": "field"
        },
        "permissions": [
            "(android.Manifest.permission.READ_PRECISE_PHONE_STATE)"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.PhoneStateListener",
            "name": "LISTEN_REGISTRATION_FAILURE",
            "type": "field"
        },
        "permissions": [
            "android.permission.READ_PRECISE_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.PhoneStateListener",
            "name": "onCallDisconnectCauseChanged",
            "type": "method",
            "args": [
                "int",
                "int"
            ],
            "return_value": "void",
            "signature": "(II)V",
            "dalvik_invoke": "Landroid/telephony/PhoneStateListener;->onCallDisconnectCauseChanged(II)V"
        },
        "permissions": [
            "(android.Manifest.permission.READ_PRECISE_PHONE_STATE)"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.PhoneStateListener",
            "name": "onDisplayInfoChanged",
            "type": "method",
            "args": [
                "android.telephony.TelephonyDisplayInfo"
            ],
            "return_value": "void",
            "signature": "(Landroid/telephony/TelephonyDisplayInfo;)V",
            "dalvik_invoke": "Landroid/telephony/PhoneStateListener;->onDisplayInfoChanged(Landroid/telephony/TelephonyDisplayInfo;)V"
        },
        "permissions": [
            "(android.Manifest.permission.READ_PHONE_STATE)"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.PhoneStateListener",
            "name": "onImsCallDisconnectCauseChanged",
            "type": "method",
            "args": [
                "android.telephony.ims.ImsReasonInfo"
            ],
            "return_value": "void",
            "signature": "(Landroid/telephony/ims/ImsReasonInfo;)V",
            "dalvik_invoke": "Landroid/telephony/PhoneStateListener;->onImsCallDisconnectCauseChanged(Landroid/telephony/ims/ImsReasonInfo;)V"
        },
        "permissions": [
            "(android.Manifest.permission.READ_PRECISE_PHONE_STATE)"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.PhoneStateListener",
            "name": "onPreciseDataConnectionStateChanged",
            "type": "method",
            "args": [
                "android.telephony.PreciseDataConnectionState"
            ],
            "return_value": "void",
            "signature": "(Landroid/telephony/PreciseDataConnectionState;)V",
            "dalvik_invoke": "Landroid/telephony/PhoneStateListener;->onPreciseDataConnectionStateChanged(Landroid/telephony/PreciseDataConnectionState;)V"
        },
        "permissions": [
            "(android.Manifest.permission.MODIFY_PHONE_STATE)"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.SmsManager",
            "name": "setSmscAddress",
            "type": "method",
            "args": [
                "java.lang.String"
            ],
            "return_value": "boolean",
            "signature": "(Ljava/lang/String;)Z",
            "dalvik_invoke": "Landroid/telephony/SmsManager;->setSmscAddress(Ljava/lang/String;)Z"
        },
        "permissions": [
            "android.permission.MODIFY_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.SmsManager",
            "name": "getSmscAddress",
            "type": "method",
            "args": [],
            "return_value": "java.lang.String",
            "signature": "()Ljava/lang/String;",
            "dalvik_invoke": "Landroid/telephony/SmsManager;->getSmscAddress()Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PRIVILEGED_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.SmsManager",
            "name": "getSmsMessagesForFinancialApp",
            "type": "method",
            "args": [
                "android.os.Bundle",
                "java.util.concurrent.Executor",
                "android.telephony.SmsManager.FinancialSmsCallback"
            ],
            "return_value": "void",
            "signature": "(Landroid/os/Bundle;Ljava/util/concurrent/Executor;Landroid/telephony/SmsManager/FinancialSmsCallback;)V",
            "dalvik_invoke": "Landroid/telephony/SmsManager;->getSmsMessagesForFinancialApp(Landroid/os/Bundle;Ljava/util/concurrent/Executor;Landroid/telephony/SmsManager/FinancialSmsCallback;)V"
        },
        "permissions": [
            "android.permission.SMS_FINANCIAL_TRANSACTIONS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.SmsManager",
            "name": "sendTextMessageWithoutPersisting",
            "type": "method",
            "args": [
                "java.lang.String",
                "java.lang.String",
                "java.lang.String",
                "android.app.PendingIntent",
                "android.app.PendingIntent"
            ],
            "return_value": "void",
            "signature": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/app/PendingIntent;Landroid/app/PendingIntent;)V",
            "dalvik_invoke": "Landroid/telephony/SmsManager;->sendTextMessageWithoutPersisting(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/app/PendingIntent;Landroid/app/PendingIntent;)V"
        },
        "permissions": [
            "android.permission.MODIFY_PHONE_STATE",
            "android.permission.SEND_SMS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.SubscriptionManager",
            "name": "getActiveSubscriptionInfo",
            "type": "method",
            "args": [
                "int"
            ],
            "return_value": "android.telephony.SubscriptionInfo",
            "signature": "(I)Landroid/telephony/SubscriptionInfo;",
            "dalvik_invoke": "Landroid/telephony/SubscriptionManager;->getActiveSubscriptionInfo(I)Landroid/telephony/SubscriptionInfo;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.SubscriptionManager",
            "name": "getActiveSubscriptionInfoForSimSlotIndex",
            "type": "method",
            "args": [
                "int"
            ],
            "return_value": "android.telephony.SubscriptionInfo",
            "signature": "(I)Landroid/telephony/SubscriptionInfo;",
            "dalvik_invoke": "Landroid/telephony/SubscriptionManager;->getActiveSubscriptionInfoForSimSlotIndex(I)Landroid/telephony/SubscriptionInfo;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.SubscriptionManager",
            "name": "isActiveSubscriptionId",
            "type": "method",
            "args": [
                "int"
            ],
            "return_value": "boolean",
            "signature": "(I)Z",
            "dalvik_invoke": "Landroid/telephony/SubscriptionManager;->isActiveSubscriptionId(I)Z"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.SubscriptionManager",
            "name": "setOpportunistic",
            "type": "method",
            "args": [
                "boolean",
                "int"
            ],
            "return_value": "boolean",
            "signature": "(ZI)Z",
            "dalvik_invoke": "Landroid/telephony/SubscriptionManager;->setOpportunistic(ZI)Z"
        },
        "permissions": [
            "android.permission.MODIFY_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.SubscriptionManager",
            "name": "getActiveSubscriptionInfoCount",
            "type": "method",
            "args": [],
            "return_value": "int",
            "signature": "()I",
            "dalvik_invoke": "Landroid/telephony/SubscriptionManager;->getActiveSubscriptionInfoCount()I"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.SubscriptionManager",
            "name": "getActiveSubscriptionInfoList",
            "type": "method",
            "args": [],
            "return_value": "java.util.List<android.telephony.SubscriptionInfo>",
            "signature": "()Ljava/util/List;",
            "dalvik_invoke": "Landroid/telephony/SubscriptionManager;->getActiveSubscriptionInfoList()Ljava/util/List;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.SubscriptionManager",
            "name": "getOpportunisticSubscriptions",
            "type": "method",
            "args": [],
            "return_value": "java.util.List<android.telephony.SubscriptionInfo>",
            "signature": "()Ljava/util/List;",
            "dalvik_invoke": "Landroid/telephony/SubscriptionManager;->getOpportunisticSubscriptions()Ljava/util/List;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.SubscriptionManager",
            "name": "getSubscriptionsInGroup",
            "type": "method",
            "args": [
                "android.os.ParcelUuid"
            ],
            "return_value": "java.util.List<android.telephony.SubscriptionInfo>",
            "signature": "(Landroid/os/ParcelUuid;)Ljava/util/List;",
            "dalvik_invoke": "Landroid/telephony/SubscriptionManager;->getSubscriptionsInGroup(Landroid/os/ParcelUuid;)Ljava/util/List;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.SubscriptionManager",
            "name": "switchToSubscription",
            "type": "method",
            "args": [
                "int",
                "android.app.PendingIntent"
            ],
            "return_value": "void",
            "signature": "(ILandroid/app/PendingIntent;)V",
            "dalvik_invoke": "Landroid/telephony/SubscriptionManager;->switchToSubscription(ILandroid/app/PendingIntent;)V"
        },
        "permissions": [
            "android.permission.WRITE_EMBEDDED_SUBSCRIPTIONS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "ACTION_PHONE_STATE_CHANGED",
            "type": "field"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getCarrierConfig",
            "type": "method",
            "args": [],
            "return_value": "android.os.PersistableBundle",
            "signature": "()Landroid/os/PersistableBundle;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getCarrierConfig()Landroid/os/PersistableBundle;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getCellLocation",
            "type": "method",
            "args": [],
            "return_value": "android.telephony.CellLocation",
            "signature": "()Landroid/telephony/CellLocation;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getCellLocation()Landroid/telephony/CellLocation;"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "requestNetworkScan",
            "type": "method",
            "args": [
                "android.telephony.NetworkScanRequest",
                "java.util.concurrent.Executor",
                "android.telephony.TelephonyScanManager.NetworkScanCallback"
            ],
            "return_value": "android.telephony.NetworkScan",
            "signature": "(Landroid/telephony/NetworkScanRequest;Ljava/util/concurrent/Executor;Landroid/telephony/TelephonyScanManager/NetworkScanCallback;)Landroid/telephony/NetworkScan;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->requestNetworkScan(Landroid/telephony/NetworkScanRequest;Ljava/util/concurrent/Executor;Landroid/telephony/TelephonyScanManager/NetworkScanCallback;)Landroid/telephony/NetworkScan;"
        },
        "permissions": [
            "android.permission.MODIFY_PHONE_STATE",
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getServiceState",
            "type": "method",
            "args": [],
            "return_value": "android.telephony.ServiceState",
            "signature": "()Landroid/telephony/ServiceState;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getServiceState()Landroid/telephony/ServiceState;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE",
            "android.permission.ACCESS_COARSE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "doesSwitchMultiSimConfigTriggerReboot",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->doesSwitchMultiSimConfigTriggerReboot()Z"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "isDataEnabled",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->isDataEnabled()Z"
        },
        "permissions": [
            "android.permission.ACCESS_NETWORK_STATE",
            "android.permission.MODIFY_PHONE_STATE"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "isDataRoamingEnabled",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->isDataRoamingEnabled()Z"
        },
        "permissions": [
            "android.permission.ACCESS_NETWORK_STATE",
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "isManualNetworkSelectionAllowed",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->isManualNetworkSelectionAllowed()Z"
        },
        "permissions": [
            "android.permission.READ_PRECISE_PHONE_STATE",
            "android.permission.READ_PRIVILEGED_PHONE_STATE"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "isModemEnabledForSlot",
            "type": "method",
            "args": [
                "int"
            ],
            "return_value": "boolean",
            "signature": "(I)Z",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->isModemEnabledForSlot(I)Z"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "setNetworkSelectionModeManual",
            "type": "method",
            "args": [
                "java.lang.String",
                "boolean"
            ],
            "return_value": "boolean",
            "signature": "(Ljava/lang/String;Z)Z",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->setNetworkSelectionModeManual(Ljava/lang/String;Z)Z"
        },
        "permissions": [
            "android.permission.MODIFY_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "setNetworkSelectionModeManual",
            "type": "method",
            "args": [
                "java.lang.String",
                "boolean",
                "int"
            ],
            "return_value": "boolean",
            "signature": "(Ljava/lang/String;ZI)Z",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->setNetworkSelectionModeManual(Ljava/lang/String;ZI)Z"
        },
        "permissions": [
            "android.permission.MODIFY_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getDataNetworkType",
            "type": "method",
            "args": [],
            "return_value": "int",
            "signature": "()I",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getDataNetworkType()I"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getNetworkSelectionMode",
            "type": "method",
            "args": [],
            "return_value": "int",
            "signature": "()I",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getNetworkSelectionMode()I"
        },
        "permissions": [
            "android.permission.READ_PRIVILEGED_PHONE_STATE",
            "android.permission.READ_PRECISE_PHONE_STATE"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getNetworkType",
            "type": "method",
            "args": [],
            "return_value": "int",
            "signature": "()I",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getNetworkType()I"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getPreferredOpportunisticDataSubscription",
            "type": "method",
            "args": [],
            "return_value": "int",
            "signature": "()I",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getPreferredOpportunisticDataSubscription()I"
        },
        "permissions": [
            "android.permission.READ_PRIVILEGED_PHONE_STATE",
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getSubscriptionId",
            "type": "method",
            "args": [
                "android.telecom.PhoneAccountHandle"
            ],
            "return_value": "int",
            "signature": "(Landroid/telecom/PhoneAccountHandle;)I",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getSubscriptionId(Landroid/telecom/PhoneAccountHandle;)I"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getVoiceNetworkType",
            "type": "method",
            "args": [],
            "return_value": "int",
            "signature": "()I",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getVoiceNetworkType()I"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "isMultiSimSupported",
            "type": "method",
            "args": [],
            "return_value": "int",
            "signature": "()I",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->isMultiSimSupported()I"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getDeviceId",
            "type": "method",
            "args": [],
            "return_value": "java.lang.String",
            "signature": "()Ljava/lang/String;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getDeviceId()Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PRIVILEGED_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getDeviceId",
            "type": "method",
            "args": [
                "int"
            ],
            "return_value": "java.lang.String",
            "signature": "(I)Ljava/lang/String;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getDeviceId(I)Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PRIVILEGED_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getDeviceSoftwareVersion",
            "type": "method",
            "args": [],
            "return_value": "java.lang.String",
            "signature": "()Ljava/lang/String;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getDeviceSoftwareVersion()Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getGroupIdLevel1",
            "type": "method",
            "args": [],
            "return_value": "java.lang.String",
            "signature": "()Ljava/lang/String;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getGroupIdLevel1()Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getImei",
            "type": "method",
            "args": [],
            "return_value": "java.lang.String",
            "signature": "()Ljava/lang/String;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getImei()Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PRIVILEGED_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getImei",
            "type": "method",
            "args": [
                "int"
            ],
            "return_value": "java.lang.String",
            "signature": "(I)Ljava/lang/String;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getImei(I)Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PRIVILEGED_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getLine1Number",
            "type": "method",
            "args": [],
            "return_value": "java.lang.String",
            "signature": "()Ljava/lang/String;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getLine1Number()Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE",
            "android.permission.READ_SMS",
            "android.permission.READ_PHONE_NUMBERS"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getManualNetworkSelectionPlmn",
            "type": "method",
            "args": [],
            "return_value": "java.lang.String",
            "signature": "()Ljava/lang/String;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getManualNetworkSelectionPlmn()Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PRECISE_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getMeid",
            "type": "method",
            "args": [],
            "return_value": "java.lang.String",
            "signature": "()Ljava/lang/String;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getMeid()Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PRIVILEGED_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getMeid",
            "type": "method",
            "args": [
                "int"
            ],
            "return_value": "java.lang.String",
            "signature": "(I)Ljava/lang/String;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getMeid(I)Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PRIVILEGED_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getNai",
            "type": "method",
            "args": [],
            "return_value": "java.lang.String",
            "signature": "()Ljava/lang/String;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getNai()Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PRIVILEGED_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getSimSerialNumber",
            "type": "method",
            "args": [],
            "return_value": "java.lang.String",
            "signature": "()Ljava/lang/String;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getSimSerialNumber()Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PRIVILEGED_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getSubscriberId",
            "type": "method",
            "args": [],
            "return_value": "java.lang.String",
            "signature": "()Ljava/lang/String;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getSubscriberId()Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PRIVILEGED_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getVisualVoicemailPackageName",
            "type": "method",
            "args": [],
            "return_value": "java.lang.String",
            "signature": "()Ljava/lang/String;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getVisualVoicemailPackageName()Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getVoiceMailAlphaTag",
            "type": "method",
            "args": [],
            "return_value": "java.lang.String",
            "signature": "()Ljava/lang/String;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getVoiceMailAlphaTag()Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getVoiceMailNumber",
            "type": "method",
            "args": [],
            "return_value": "java.lang.String",
            "signature": "()Ljava/lang/String;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getVoiceMailNumber()Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getForbiddenPlmns",
            "type": "method",
            "args": [],
            "return_value": "java.lang.String[]",
            "signature": "()[Ljava/lang/String;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getForbiddenPlmns()[Ljava/lang/String;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getAllCellInfo",
            "type": "method",
            "args": [],
            "return_value": "java.util.List<android.telephony.CellInfo>",
            "signature": "()Ljava/util/List;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getAllCellInfo()Ljava/util/List;"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getUiccCardsInfo",
            "type": "method",
            "args": [],
            "return_value": "java.util.List<android.telephony.UiccCardInfo>",
            "signature": "()Ljava/util/List;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getUiccCardsInfo()Ljava/util/List;"
        },
        "permissions": [
            "android.permission.READ_PRIVILEGED_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getEmergencyNumberList",
            "type": "method",
            "args": [],
            "return_value": "java.util.Map<java.lang.Integer,java.util.List<android.telephony.emergency.EmergencyNumber>>",
            "signature": "()Ljava/util/Map;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getEmergencyNumberList()Ljava/util/Map;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "getEmergencyNumberList",
            "type": "method",
            "args": [
                "int"
            ],
            "return_value": "java.util.Map<java.lang.Integer,java.util.List<android.telephony.emergency.EmergencyNumber>>",
            "signature": "(I)Ljava/util/Map;",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->getEmergencyNumberList(I)Ljava/util/Map;"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "requestCellInfoUpdate",
            "type": "method",
            "args": [
                "java.util.concurrent.Executor",
                "android.telephony.TelephonyManager.CellInfoCallback"
            ],
            "return_value": "void",
            "signature": "(Ljava/util/concurrent/Executor;Landroid/telephony/TelephonyManager/CellInfoCallback;)V",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->requestCellInfoUpdate(Ljava/util/concurrent/Executor;Landroid/telephony/TelephonyManager/CellInfoCallback;)V"
        },
        "permissions": [
            "android.permission.ACCESS_FINE_LOCATION"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "sendUssdRequest",
            "type": "method",
            "args": [
                "java.lang.String",
                "android.telephony.TelephonyManager.UssdResponseCallback",
                "android.os.Handler"
            ],
            "return_value": "void",
            "signature": "(Ljava/lang/String;Landroid/telephony/TelephonyManager/UssdResponseCallback;Landroid/os/Handler;)V",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->sendUssdRequest(Ljava/lang/String;Landroid/telephony/TelephonyManager/UssdResponseCallback;Landroid/os/Handler;)V"
        },
        "permissions": [
            "android.permission.CALL_PHONE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "setDataEnabled",
            "type": "method",
            "args": [
                "boolean"
            ],
            "return_value": "void",
            "signature": "(Z)V",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->setDataEnabled(Z)V"
        },
        "permissions": [
            "android.permission.MODIFY_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "setNetworkSelectionModeAutomatic",
            "type": "method",
            "args": [],
            "return_value": "void",
            "signature": "()V",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->setNetworkSelectionModeAutomatic()V"
        },
        "permissions": [
            "android.permission.MODIFY_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.TelephonyManager",
            "name": "switchMultiSimConfig",
            "type": "method",
            "args": [
                "int"
            ],
            "return_value": "void",
            "signature": "(I)V",
            "dalvik_invoke": "Landroid/telephony/TelephonyManager;->switchMultiSimConfig(I)V"
        },
        "permissions": [
            "android.permission.MODIFY_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.euicc.EuiccManager",
            "name": "deleteSubscription",
            "type": "method",
            "args": [
                "int",
                "android.app.PendingIntent"
            ],
            "return_value": "void",
            "signature": "(ILandroid/app/PendingIntent;)V",
            "dalvik_invoke": "Landroid/telephony/euicc/EuiccManager;->deleteSubscription(ILandroid/app/PendingIntent;)V"
        },
        "permissions": [
            "android.permission.WRITE_EMBEDDED_SUBSCRIPTIONS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.euicc.EuiccManager",
            "name": "downloadSubscription",
            "type": "method",
            "args": [
                "android.telephony.euicc.DownloadableSubscription",
                "boolean",
                "android.app.PendingIntent"
            ],
            "return_value": "void",
            "signature": "(Landroid/telephony/euicc/DownloadableSubscription;ZLandroid/app/PendingIntent;)V",
            "dalvik_invoke": "Landroid/telephony/euicc/EuiccManager;->downloadSubscription(Landroid/telephony/euicc/DownloadableSubscription;ZLandroid/app/PendingIntent;)V"
        },
        "permissions": [
            "android.permission.WRITE_EMBEDDED_SUBSCRIPTIONS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.euicc.EuiccManager",
            "name": "switchToSubscription",
            "type": "method",
            "args": [
                "int",
                "android.app.PendingIntent"
            ],
            "return_value": "void",
            "signature": "(ILandroid/app/PendingIntent;)V",
            "dalvik_invoke": "Landroid/telephony/euicc/EuiccManager;->switchToSubscription(ILandroid/app/PendingIntent;)V"
        },
        "permissions": [
            "android.permission.WRITE_EMBEDDED_SUBSCRIPTIONS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.euicc.EuiccManager",
            "name": "updateSubscriptionNickname",
            "type": "method",
            "args": [
                "int",
                "java.lang.String",
                "android.app.PendingIntent"
            ],
            "return_value": "void",
            "signature": "(ILjava/lang/String;Landroid/app/PendingIntent;)V",
            "dalvik_invoke": "Landroid/telephony/euicc/EuiccManager;->updateSubscriptionNickname(ILjava/lang/String;Landroid/app/PendingIntent;)V"
        },
        "permissions": [
            "android.permission.WRITE_EMBEDDED_SUBSCRIPTIONS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.ims.ImsMmTelManager",
            "name": "isAdvancedCallingSettingEnabled",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/telephony/ims/ImsMmTelManager;->isAdvancedCallingSettingEnabled()Z"
        },
        "permissions": [
            "android.permission.READ_PRIVILEGED_PHONE_STATE",
            "android.permission.READ_PRECISE_PHONE_STATE"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.telephony.ims.ImsMmTelManager",
            "name": "isTtyOverVolteEnabled",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/telephony/ims/ImsMmTelManager;->isTtyOverVolteEnabled()Z"
        },
        "permissions": [
            "android.permission.READ_PRIVILEGED_PHONE_STATE",
            "android.permission.READ_PRECISE_PHONE_STATE"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.telephony.ims.ImsMmTelManager",
            "name": "isVoWiFiRoamingSettingEnabled",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/telephony/ims/ImsMmTelManager;->isVoWiFiRoamingSettingEnabled()Z"
        },
        "permissions": [
            "android.permission.READ_PRIVILEGED_PHONE_STATE",
            "android.permission.READ_PRECISE_PHONE_STATE"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.telephony.ims.ImsMmTelManager",
            "name": "isVoWiFiSettingEnabled",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/telephony/ims/ImsMmTelManager;->isVoWiFiSettingEnabled()Z"
        },
        "permissions": [
            "android.permission.READ_PRIVILEGED_PHONE_STATE",
            "android.permission.READ_PRECISE_PHONE_STATE"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.telephony.ims.ImsMmTelManager",
            "name": "isVtSettingEnabled",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/telephony/ims/ImsMmTelManager;->isVtSettingEnabled()Z"
        },
        "permissions": [
            "android.permission.READ_PRIVILEGED_PHONE_STATE",
            "android.permission.READ_PRECISE_PHONE_STATE"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.telephony.ims.ImsMmTelManager",
            "name": "getVoWiFiModeSetting",
            "type": "method",
            "args": [],
            "return_value": "int",
            "signature": "()I",
            "dalvik_invoke": "Landroid/telephony/ims/ImsMmTelManager;->getVoWiFiModeSetting()I"
        },
        "permissions": [
            "android.permission.READ_PRIVILEGED_PHONE_STATE",
            "android.permission.READ_PRECISE_PHONE_STATE"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.telephony.ims.ImsMmTelManager",
            "name": "registerImsRegistrationCallback",
            "type": "method",
            "args": [
                "java.util.concurrent.Executor",
                "android.telephony.ims.RegistrationManager.RegistrationCallback"
            ],
            "return_value": "void",
            "signature": "(Ljava/util/concurrent/Executor;Landroid/telephony/ims/RegistrationManager/RegistrationCallback;)V",
            "dalvik_invoke": "Landroid/telephony/ims/ImsMmTelManager;->registerImsRegistrationCallback(Ljava/util/concurrent/Executor;Landroid/telephony/ims/RegistrationManager/RegistrationCallback;)V"
        },
        "permissions": [
            "android.permission.READ_PRIVILEGED_PHONE_STATE",
            "android.permission.READ_PRECISE_PHONE_STATE"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.telephony.ims.ImsMmTelManager",
            "name": "registerMmTelCapabilityCallback",
            "type": "method",
            "args": [
                "java.util.concurrent.Executor",
                "android.telephony.ims.ImsMmTelManager.CapabilityCallback"
            ],
            "return_value": "void",
            "signature": "(Ljava/util/concurrent/Executor;Landroid/telephony/ims/ImsMmTelManager/CapabilityCallback;)V",
            "dalvik_invoke": "Landroid/telephony/ims/ImsMmTelManager;->registerMmTelCapabilityCallback(Ljava/util/concurrent/Executor;Landroid/telephony/ims/ImsMmTelManager/CapabilityCallback;)V"
        },
        "permissions": [
            "android.permission.READ_PRIVILEGED_PHONE_STATE",
            "android.permission.READ_PRECISE_PHONE_STATE"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.telephony.ims.ImsMmTelManager",
            "name": "unregisterImsRegistrationCallback",
            "type": "method",
            "args": [
                "android.telephony.ims.RegistrationManager.RegistrationCallback"
            ],
            "return_value": "void",
            "signature": "(Landroid/telephony/ims/RegistrationManager/RegistrationCallback;)V",
            "dalvik_invoke": "Landroid/telephony/ims/ImsMmTelManager;->unregisterImsRegistrationCallback(Landroid/telephony/ims/RegistrationManager/RegistrationCallback;)V"
        },
        "permissions": [
            "android.permission.READ_PRIVILEGED_PHONE_STATE",
            "android.permission.READ_PRECISE_PHONE_STATE"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.telephony.ims.ImsMmTelManager",
            "name": "unregisterMmTelCapabilityCallback",
            "type": "method",
            "args": [
                "android.telephony.ims.ImsMmTelManager.CapabilityCallback"
            ],
            "return_value": "void",
            "signature": "(Landroid/telephony/ims/ImsMmTelManager/CapabilityCallback;)V",
            "dalvik_invoke": "Landroid/telephony/ims/ImsMmTelManager;->unregisterMmTelCapabilityCallback(Landroid/telephony/ims/ImsMmTelManager/CapabilityCallback;)V"
        },
        "permissions": [
            "android.permission.READ_PRIVILEGED_PHONE_STATE",
            "android.permission.READ_PRECISE_PHONE_STATE"
        ],
        "any_of": true
    },
    {
        "api": {
            "class_name": "android.telephony.ims.RcsUceAdapter",
            "name": "isUceSettingEnabled",
            "type": "method",
            "args": [],
            "return_value": "boolean",
            "signature": "()Z",
            "dalvik_invoke": "Landroid/telephony/ims/RcsUceAdapter;->isUceSettingEnabled()Z"
        },
        "permissions": [
            "android.permission.READ_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.ims.RegistrationManager",
            "name": "registerImsRegistrationCallback",
            "type": "method",
            "args": [
                "java.util.concurrent.Executor",
                "android.telephony.ims.RegistrationManager.RegistrationCallback"
            ],
            "return_value": "void",
            "signature": "(Ljava/util/concurrent/Executor;Landroid/telephony/ims/RegistrationManager/RegistrationCallback;)V",
            "dalvik_invoke": "Landroid/telephony/ims/RegistrationManager;->registerImsRegistrationCallback(Ljava/util/concurrent/Executor;Landroid/telephony/ims/RegistrationManager/RegistrationCallback;)V"
        },
        "permissions": [
            "android.permission.READ_PRIVILEGED_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.telephony.ims.RegistrationManager",
            "name": "unregisterImsRegistrationCallback",
            "type": "method",
            "args": [
                "android.telephony.ims.RegistrationManager.RegistrationCallback"
            ],
            "return_value": "void",
            "signature": "(Landroid/telephony/ims/RegistrationManager/RegistrationCallback;)V",
            "dalvik_invoke": "Landroid/telephony/ims/RegistrationManager;->unregisterImsRegistrationCallback(Landroid/telephony/ims/RegistrationManager/RegistrationCallback;)V"
        },
        "permissions": [
            "android.permission.READ_PRIVILEGED_PHONE_STATE"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.util.StatsLog",
            "name": "logBinaryPushStateChanged",
            "type": "method",
            "args": [
                "java.lang.String",
                "long",
                "int",
                "int",
                "long[]"
            ],
            "return_value": "boolean",
            "signature": "(Ljava/lang/String;JII[J)Z",
            "dalvik_invoke": "Landroid/util/StatsLog;->logBinaryPushStateChanged(Ljava/lang/String;JII[J)Z"
        },
        "permissions": [
            "android.permission.DUMP",
            "android.permission.PACKAGE_USAGE_STATS"
        ],
        "any_of": false
    },
    {
        "api": {
            "class_name": "android.view.inputmethod.InputMethodManager",
            "name": "setCurrentInputMethodSubtype",
            "type": "method",
            "args": [
                "android.view.inputmethod.InputMethodSubtype"
            ],
            "return_value": "boolean",
            "signature": "(Landroid/view/inputmethod/InputMethodSubtype;)Z",
            "dalvik_invoke": "Landroid/view/inputmethod/InputMethodManager;->setCurrentInputMethodSubtype(Landroid/view/inputmethod/InputMethodSubtype;)Z"
        },
        "permissions": [
            "android.permission.WRITE_SECURE_SETTINGS"
        ],
        "any_of": false
    }
]